{"version":3,"sources":["assets/desc.svg","assets/asc.svg","assets/exchange.svg","apis/index.js","utils.js","components/Icons.jsx","components/ResultTable.jsx","components/PrizeTable.jsx","components/GoTop.jsx","components/Grid.jsx","components/Select.jsx","components/SearchForm.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","API_BASE","fetchOptions","method","mode","headers","timesToMins","times","arr","split","parseInt","prefixZero","str","length","Desc","styled","props","src","desc","alt","Asc","asc","StyledTable","table","StyledTh","th","pointer","ResultRow","React","memo","TrainNo","DepartureTime","ArrivalTime","Dmins","Amins","className","mins","h","toString","minsToTimes","EmptyRow","colSpan","ResultTable","sortByDeparture","sortByArrival","resultList","onClickDepartureSort","onClickArrivalSort","onClick","map","val","key","DailyTrainInfo","OriginStopTime","DestinationStopTime","PrizeTable","prizeList","departure","arrival","v","Price","TicketType","scrollTop","window","scrollTo","top","left","behavior","StyledGoTop","isShow","useState","setIsShow","useEffect","scroll","scrollY","addEventListener","removeEventListener","useGoTop","style","Row","children","Label","htmlFor","FormField","Select","forwardRef","ref","options","e","value","Zh_tw","En","timeOptions","TimeSelect","dep","Date","getHours","defaultDepTime","defaultArrTime","getDefaultHour","useSearchForm","date","d","month","getMonth","day","getDate","year","getFullYear","join","formatDate","now","setDate","setDeparture","setArrival","departureTime","setDepartureTime","arriveTime","setArriveTime","SearchForm","onChangeDate","onChangeDeparture","DepArrChange","onChangeArrival","changeTime","onSearch","departureRef","arrivalRef","stationOptions","setStationOptions","fetch","then","res","json","data","stations","StationID","StationName","catch","err","console","log","type","id","onChange","name","StyledSeachForm","App","updateTime","setUpdateTime","useRef","setDeaprtureState","setArrivalState","setResultList","setPrizeList","changeDate","useCallback","currentTarget","changeStations","searchClick","OriginStationID","DestinationStationID","TrainDate","API_TRAIN","searchTrain","depFilterTime","arrFilterTime","filteredData","filter","depTime","arrTime","UpdateTime","API_PRICE","searchPriceByStation","Fares","departureSortClick","sort","a","b","aMins","bMins","arrivalSortClick","current","selectedOptions","textContent","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","href","origin","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a9813fb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/desc.f06acfc6.svg\";","module.exports = __webpack_public_path__ + \"static/media/asc.d8be3f88.svg\";","module.exports = __webpack_public_path__ + \"static/media/exchange.c7b5a736.svg\";","// API spec: https://ptx.transportdata.tw/MOTC?t=Rail&v=2#!/THSR/THSRApi_DailyTimetable\nconst API_BASE = \"https://ptx.transportdata.tw/MOTC\";\n\nconst fetchOptions = {\n  method: \"GET\",\n  mode: \"cors\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n};\n\nexport function searchTrain(OriginStationID, DestinationStationID, TrainDate) {\n  // GET 取得指定[日期],[起迄站間]之時刻表資料\n  const API_TRAIN = `/v2/Rail/THSR/DailyTimetable/OD/${OriginStationID}/to/${DestinationStationID}/${TrainDate}`;\n  return fetch(API_BASE + API_TRAIN, fetchOptions);\n}\n\nexport function searchPriceByStation(OriginStationID, DestinationStationID) {\n  // GET 取得指定[起訖站間]之票價資料\n  const API_PRICE = `/v2/Rail/THSR/ODFare/${OriginStationID}/to/${DestinationStationID}`;\n  return fetch(API_BASE + API_PRICE, fetchOptions);\n}\n\nexport function getStations() {\n  // GET 取得車站基本資料\n  const API_ODFARE = \"/v2/Rail/THSR/Station\";\n  return fetch(API_BASE + API_ODFARE, fetchOptions);\n}","export function formatDate(date) {\n  let d = new Date(date),\n    month = \"\" + (d.getMonth() + 1),\n    day = \"\" + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = \"0\" + month;\n  if (day.length < 2) day = \"0\" + day;\n\n  return [year, month, day].join(\"-\");\n}\n\nexport function timesToMins(times) {\n  const arr = times.split(\":\");\n  return parseInt(arr[0], 10) * 60 + parseInt(arr[1], 10);\n}\n\nfunction prefixZero(str) {\n  return str.length < 2 ? \"0\" + str : str;\n}\n\nexport function minsToTimes(mins) {\n  let h = 0;\n  while (mins >= 60) {\n    mins -= 60;\n    h += 1;\n  }\n  h = prefixZero(h.toString());\n  mins = prefixZero(mins.toString());\n  return h + \":\" + mins;\n}\n\nexport function getDefaultHour() {\n  let dep = new Date().getHours() + 1;\n  let arr = dep + 3;\n  dep = prefixZero(dep.toString()) + \":00\";\n  arr = prefixZero(arr.toString()) + \":00\";\n  return {\n    defaultDepTime: dep,\n    defaultArrTime: arr\n  };\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport desc from '../assets/desc.svg'\nimport asc from '../assets/asc.svg'\nimport exchange from '../assets/exchange.svg'\n\nexport const Desc = styled(({...props}) => (\n  <img {...props} src={desc} alt=\"desc\" />\n))`\n  width: 20px;\n`\n\nexport const Asc = styled(({...props}) => (\n  <img {...props} src={asc} alt=\"asc\" />\n))`\n  width: 20px;\n`\n\nexport const Exchange = () => (\n  <img className=\"exchange\" src={exchange} alt=\"exchange\"/>\n)","import React from 'react'\nimport styled from 'styled-components'\nimport { minsToTimes, timesToMins } from '../utils'\nimport { Desc, Asc } from \"./Icons\";\n\nconst StyledTable = styled.table`\n  width: 100%;\n  box-shadow: 0px 3px 10px #ddd;\n  thead {\n    background-color: #eee;\n  }\n  td {\n    padding: .3em;\n    vertical-align: middle;\n  }\n  tr:nth-child(even) {\n    background-color: #eee;\n  }\n`;\n\nconst StyledTh = styled.th`\n  padding: .3em;\n  vertical-align: middle;\n  font-weight: bold;\n  cursor: ${props => props.pointer ? 'pointer' : 'initial'};\n`;\n\nexport const ResultRow = React.memo(({\n  TrainNo,\n  DepartureTime,\n  ArrivalTime\n}) => {\n  const Dmins = timesToMins(DepartureTime)\n  const Amins = timesToMins(ArrivalTime)\n  return (\n    <tr>\n      <td className=\"text-info font-weight-bold\">{TrainNo}</td>\n      <td>{DepartureTime}</td>\n      <td>{ArrivalTime}</td>\n      <td>{minsToTimes(Amins - Dmins)}</td>\n    </tr>\n  )\n})\n\nexport const EmptyRow = () => (\n  <tr>\n    <td colSpan=\"4\">尚無資料</td>\n  </tr>\n)\n\nconst ResultTable = React.memo(({\n  sortByDeparture,\n  sortByArrival,\n  resultList,\n  onClickDepartureSort,\n  onClickArrivalSort\n}) => {\n  return (\n    <StyledTable>\n      <thead>\n        <tr>\n          <StyledTh>車次</StyledTh>\n          <StyledTh\n            pointer\n            onClick={onClickDepartureSort}\n          >\n            發車\n            {sortByDeparture === \"desc\" ? <Desc /> : <Asc />}\n          </StyledTh>\n          <StyledTh\n            pointer\n            onClick={onClickArrivalSort}\n          >\n            到達\n            {sortByArrival === \"desc\" ? <Desc /> : <Asc />}\n          </StyledTh>\n          <StyledTh>總時程</StyledTh>\n        </tr>\n      </thead>\n      <tbody>\n        {resultList.length > 0 ? (\n          resultList.map(val => (\n            <ResultRow\n              key={val.DailyTrainInfo.TrainNo}\n              TrainNo={val.DailyTrainInfo.TrainNo}\n              DepartureTime={val.OriginStopTime.DepartureTime}\n              ArrivalTime={val.DestinationStopTime.ArrivalTime}\n            />\n          ))\n        ) : (\n          <EmptyRow />\n        )}\n      </tbody>\n    </StyledTable>\n  )\n})\n\nexport default ResultTable","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledTable = styled.table`\n  width: 100%;\n  background-color: #aeeff9;\n  th, td {\n    padding: .3em;\n  }\n`;\n\nconst PrizeTable = ({ prizeList, departure, arrival }) => {\n  return (\n    <div className=\"mt-3 mb-3\">\n      <h3>票價資訊</h3>\n      <StyledTable>\n        <thead>\n          <tr>\n            <th colSpan=\"3\">\n              {departure}\n              <span className=\"ml-2 mr-2\">&rarr;</span>\n              {arrival}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {prizeList.map(v => (\n              <td key={v.Price}>\n                {v.TicketType}:<strong>&#36;{v.Price}</strong>\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </StyledTable>\n    </div>\n  )\n}\n\nexport default PrizeTable;\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n\nfunction scrollTop() {\n  window.scrollTo({\n    top: 0,\n    left: 0,\n    behavior: 'smooth'\n  })\n}\n\nfunction useGoTop() {\n  const [isShow, setIsShow] = useState(false)\n  useEffect(() => {\n    function scroll() {\n      if (window.scrollY > 200) {\n        setIsShow(true)\n      } else {\n        setIsShow(false)\n      }\n    }\n    scroll()\n    window.addEventListener('scroll', scroll)\n    return () => window.removeEventListener('scroll', scroll)\n  },[setIsShow])\n  return isShow\n}\n\nfunction GoTop({...props}) {\n  const isShow = useGoTop()\n  const showObj = {\n    'display': 'block'\n  }\n\n  return (\n    <button style={isShow ? showObj : null} onClick={scrollTop} {...props}>\n      TOP\n    </button>\n  )\n}\n\nconst StyledGoTop = styled(GoTop)`\n  position: fixed;\n  bottom: 5%;\n  right: 5%;\n  z-index: 1050;\n  width: 45px;\n  height: 45px;\n  background: #eee;\n  border-radius: 50%;\n  text-align: center;\n  padding: 0;\n  display: none;\n`\n\nexport default StyledGoTop","import React from 'react'\n\nexport function Row({ children }) {\n  return (\n    <div className='row form-group'>\n      {children}\n    </div>\n  )\n}\n\nexport function Label({\n  htmlFor,\n  children\n}) {\n  return (\n    <label htmlFor={htmlFor} className=\"col-4 col-form-label text-left\">\n      {children}\n    </label>\n  )\n}\n\nexport const FormField = React.memo(({ children }) => {\n  return (\n    <div className=\"col\">\n      {children}\n    </div>\n  )\n})\n","import React from \"react\";\n\nconst Select = React.memo(\n  React.forwardRef(({ options, ...props }, ref) => {\n    return (\n      <select {...props} ref={ref}>\n        {options.length > 0 ? (\n          options.map(e => (\n            <option key={e.value} value={e.value}>\n              {e.Zh_tw + e.En}\n            </option>\n          ))\n        ) : (\n          <option value=\"\">請選擇</option>\n        )}\n      </select>\n    );\n  })\n);\n\nconst timeOptions = [  \n  '06:00',\n  '07:00',\n  '08:00',\n  '09:00',\n  '10:00',\n  '11:00',\n  '12:00',\n  '13:00',\n  '14:00',\n  '15:00',\n  '16:00',\n  '17:00',\n  '18:00',\n  '19:00',\n  '20:00',\n  '21:00',\n  '22:00',\n  '23:00',\n]\n\nexport const TimeSelect = React.memo(({options, ...props}) => {\n  return (\n    <select {...props}>\n      {\n        timeOptions.map(v => <option value={v} key={v}>{v}</option>)\n      }\n    </select>\n  )\n})\n\nexport default Select;\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'\nimport { Row, Label, FormField } from \"./Grid\";\nimport Select, { TimeSelect } from \"./Select\";\nimport { getStations } from '../apis'\nimport { formatDate, getDefaultHour } from \"../utils\";\n\nconst { defaultDepTime, defaultArrTime } = getDefaultHour();\n\nexport function useSearchForm() {\n  const [date, setDate] = useState(formatDate(Date.now()));\n  const [departure, setDeparture] = useState(\"1000\"); // 台北\n  const [arrival, setArrival] = useState(\"1070\"); // 左營\n  const [departureTime, setDepartureTime] = useState(defaultDepTime);\n  const [arriveTime, setArriveTime] = useState(defaultArrTime);\n\n  return {\n    date,\n    setDate,\n    departure,\n    setDeparture,\n    arrival,\n    setArrival,\n    departureTime,\n    setDepartureTime,\n    arriveTime,\n    setArriveTime\n  }\n}\n\nconst SearchForm = React.memo(({\n  date,\n  onChangeDate,\n  departure,\n  onChangeDeparture,\n  DepArrChange,\n  arrival,\n  onChangeArrival,\n  departureTime,\n  arriveTime,\n  changeTime,\n  onSearch,\n  departureRef,\n  arrivalRef,\n  className\n}) => {\n  const [stationOptions, setStationOptions] = useState([]);\n  useEffect(() => {\n    getStations()\n      .then(res => res.json())\n      .then(data => {\n        const stations = data.map(val => ({\n          value: val.StationID,\n          ...val.StationName\n        }));\n        setStationOptions(stations);\n      })\n      .catch(err => console.log(err));\n  }, []);\n  return (\n    <div className={`container ${className}`}>\n      <Row>\n        <Label htmlFor=\"trip-start\">日期</Label>\n        <FormField>\n          <input\n            className=\"form-control\"\n            type=\"date\"\n            id=\"trip-start\"\n            value={date}\n            onChange={onChangeDate}\n          />\n        </FormField>\n      </Row>\n      <Row>\n        <Label htmlFor=\"OrginStation\">起站</Label>\n        <FormField>\n          <Select\n            className=\"form-control\"\n            name=\"OrginStation\"\n            id=\"OrginStation\"\n            options={stationOptions}\n            value={departure}\n            onChange={onChangeDeparture}\n            ref={departureRef}\n          />\n        </FormField>\n      </Row>\n      <div className=\"row justify-content-center form-group\">\n        <button\n          onClick={DepArrChange}\n          type=\"button\"\n          className=\"btn btn-outline-primary\"\n        >\n          起迄站交換\n        </button>\n      </div>\n      <Row>\n        <Label htmlFor=\"DestinationStation\">迄站</Label>\n        <FormField>\n          <Select\n            className=\"form-control\"\n            name=\"DestinationStation\"\n            id=\"DestinationStation\"\n            options={stationOptions}\n            value={arrival}\n            onChange={onChangeArrival}\n            ref={arrivalRef}\n          />\n        </FormField>\n      </Row>\n      <Row>\n        <Label htmlFor=\"DepartureTime\">最早出發</Label>\n        <FormField>\n          <TimeSelect\n            className=\"form-control\"\n            name=\"DepartureTime\"\n            id=\"DepartureTime\"\n            value={departureTime}\n            onChange={changeTime}\n          />\n        </FormField>\n      </Row>\n      <Row>\n        <Label htmlFor=\"ArriveTime\">最晚抵達</Label>\n        <FormField>\n          <TimeSelect\n            className=\"form-control\"\n            name=\"ArriveTime\"\n            id=\"ArriveTime\"\n            value={arriveTime}\n            onChange={changeTime}\n          />\n        </FormField>\n      </Row>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary btn-lg btn-block\"\n        onClick={onSearch}\n      >\n        查詢\n      </button>\n    </div>\n  )\n})\n\nSearchForm.propTypes = {\n  date: PropTypes.string,\n  onChangeDate: PropTypes.func,\n  departure: PropTypes.string,\n  onChangeDeparture: PropTypes.func,\n  DepArrChange: PropTypes.func,\n  arrival: PropTypes.string,\n  onChangeArrival: PropTypes.func,\n  departureTime: PropTypes.string,\n  arriveTime: PropTypes.string,\n  changeTime: PropTypes.func,\n  onSearch: PropTypes.func,\n}\n\nconst StyledSeachForm = styled(SearchForm)`\n  box-shadow: 1px 1px 5px #ddd;\n  background-color: #f3f3f3;\n  border-color: #ddd;\n  color: #333;\n  text-shadow: 0 1px 0 #eee;\n  padding-top: .5em;\n  padding-bottom: .5em;\n  margin-bottom: .5em;\n  .col-form-label {\n    max-width: 7em;\n  }\n`\n\nexport default StyledSeachForm","import React, { useState, useCallback, useRef } from \"react\";\nimport \"./App.css\";\nimport { searchTrain, searchPriceByStation } from \"./apis\";\nimport { timesToMins } from \"./utils\";\n\nimport ResultTable from \"./components/ResultTable\";\nimport PrizeTable from \"./components/PrizeTable\";\nimport StyledGoTop from \"./components/GoTop\";\n\nimport StyledSeachForm, { useSearchForm } from \"./components/SearchForm\";\n\nfunction App() {\n  const [updateTime, setUpdateTime] = useState(\"\");\n\n  const {\n    date,\n    setDate,\n    departure,\n    setDeparture,\n    arrival,\n    setArrival,\n    departureTime,\n    setDepartureTime,\n    arriveTime,\n    setArriveTime\n  } = useSearchForm();\n\n  const departureRef = useRef();\n  const arrivalRef = useRef();\n  const [sortByDeparture, setDeaprtureState] = useState(\"desc\");\n  const [sortByArrival, setArrivalState] = useState(\"desc\");\n  const [resultList, setResultList] = useState([]);\n  const [prizeList, setPrizeList] = useState([]);\n\n  const changeDate = useCallback(e => setDate(e.currentTarget.value), [\n    setDate\n  ]);\n\n  const changeStations = useCallback(\n    e => {\n      if (e.currentTarget.id === \"OrginStation\") {\n        setDeparture(e.currentTarget.value);\n      } else {\n        setArrival(e.currentTarget.value);\n      }\n    },\n    [setDeparture, setArrival]\n  );\n\n  const DepArrChange = useCallback(() => {\n    setDeparture(arrival);\n    setArrival(departure);\n  }, [departure, arrival, setDeparture, setArrival]);\n\n  const changeTime = useCallback(\n    e => {\n      if (e.currentTarget.id === \"DepartureTime\") {\n        setDepartureTime(e.currentTarget.value);\n      } else {\n        setArriveTime(e.currentTarget.value);\n      }\n    },\n    [setDepartureTime, setArriveTime]\n  );\n\n  const searchClick = useCallback(() => {\n    searchTrain(departure, arrival, date)\n      .then(res => res.json())\n      .then(data => {\n        const depFilterTime = timesToMins(departureTime);\n        const arrFilterTime = timesToMins(arriveTime);\n        const filteredData = data.filter(d => {\n          const depTime = timesToMins(d.OriginStopTime.DepartureTime);\n          const arrTime = timesToMins(d.DestinationStopTime.ArrivalTime);\n          return depTime > depFilterTime && arrTime < arrFilterTime;\n        });\n        setResultList(filteredData);\n        setUpdateTime(data[0].UpdateTime);\n      })\n      .catch(err => console.log(err));\n    searchPriceByStation(departure, arrival)\n      .then(res => res.json())\n      .then(data => setPrizeList(data[0].Fares))\n      .catch(err => console.log(err));\n  }, [departure, arrival, date, departureTime, arriveTime]);\n\n  const departureSortClick = useCallback(() => {\n    setDeaprtureState(sortByDeparture === \"desc\" ? \"asc\" : \"desc\");\n    resultList.sort((a, b) => {\n      const aMins = timesToMins(a.OriginStopTime.DepartureTime);\n      const bMins = timesToMins(b.OriginStopTime.DepartureTime);\n      return sortByDeparture === \"desc\" ? aMins - bMins : bMins - aMins;\n    });\n  }, [sortByDeparture, resultList]);\n\n  const arrivalSortClick = useCallback(() => {\n    setArrivalState(sortByArrival === \"desc\" ? \"asc\" : \"desc\");\n    resultList.sort((a, b) => {\n      const aMins = timesToMins(a.DestinationStopTime.ArrivalTime);\n      const bMins = timesToMins(b.DestinationStopTime.ArrivalTime);\n      return sortByArrival === \"desc\" ? aMins - bMins : bMins - aMins;\n    });\n  }, [sortByArrival, resultList]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>高鐵查詢系統</h1>\n      </header>\n      <StyledSeachForm\n        date={date}\n        onChangeDate={changeDate}\n        departure={departure}\n        onChangeDeparture={changeStations}\n        DepArrChange={DepArrChange}\n        arrival={arrival}\n        onChangeArrival={changeStations}\n        departureTime={departureTime}\n        arriveTime={arriveTime}\n        changeTime={changeTime}\n        onSearch={searchClick}\n        departureRef={departureRef}\n        arrivalRef={arrivalRef}\n      />\n      <div className=\"container\">\n        <ResultTable\n          sortByDeparture={sortByDeparture}\n          sortByArrival={sortByArrival}\n          resultList={resultList}\n          onClickDepartureSort={departureSortClick}\n          onClickArrivalSort={arrivalSortClick}\n        />\n        {prizeList.length > 0 ? (\n          <PrizeTable\n            prizeList={prizeList}\n            departure={departureRef.current.selectedOptions[0].textContent}\n            arrival={arrivalRef.current.selectedOptions[0].textContent}\n          />\n        ) : null}\n      </div>\n      <footer className=\"fixed-bottom\">\n        <p>更新時間: {updateTime}</p>\n      </footer>\n      <StyledGoTop />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}