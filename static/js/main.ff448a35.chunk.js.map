{"version":3,"sources":["assets/desc.svg","assets/asc.svg","assets/exchange.svg","components/Select.jsx","components/Grid.jsx","utils.js","components/Icons.jsx","components/ResultTable.jsx","components/PrizeTable.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Select","React","memo","forwardRef","ref","options","props","length","map","e","key","value","Zh_tw","En","timeOptions","TimeSelect","v","Row","children","className","Label","htmlFor","FormField","timesToMins","times","arr","split","parseInt","prefixZero","str","Desc","styled","src","desc","alt","Asc","asc","StyledTable","table","StyledTh","th","pointer","ResultRow","TrainNo","DepartureTime","ArrivalTime","Dmins","Amins","mins","h","toString","minsToTimes","EmptyRow","colSpan","ResultTable","sortByDeparture","sortByArrival","resultList","onClickDepartureSort","onClickArrivalSort","onClick","val","DailyTrainInfo","OriginStopTime","DestinationStopTime","PrizeTable","prizeList","departure","arrival","Price","TicketType","API_BASE","fetchOptions","method","mode","headers","dep","Date","getHours","defaultDepTime","defaultArrTime","getDefaultHour","App","useState","updateTime","setUpdateTime","stationOptions","setStationOptions","date","d","month","getMonth","day","getDate","year","getFullYear","join","formatDate","now","setDate","setDeaprtureState","setArrivalState","setDeparture","setArrival","departureRef","useRef","arrivalRef","setResultList","setPrizeList","departureTime","setDepartureTime","arriveTime","setArriveTime","changeDeparture","useCallback","currentTarget","changeArrival","DepArrChange","searchClick","OriginStationID","DestinationStationID","TrainDate","API_TRAIN","fetch","searchTrain","then","res","json","data","depFilterTime","arrFilterTime","filteredData","filter","depTime","arrTime","catch","err","console","log","API_PRICE","searchPriceByStation","Fares","departureSortClick","sort","a","b","aMins","bMins","arrivalSortClick","changeTime","id","useEffect","stations","StationID","StationName","UpdateTime","type","onChange","name","current","selectedOptions","textContent","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ff448a35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/desc.f06acfc6.svg\";","module.exports = __webpack_public_path__ + \"static/media/asc.d8be3f88.svg\";","module.exports = __webpack_public_path__ + \"static/media/exchange.c7b5a736.svg\";","import React from \"react\";\n\nconst Select = React.memo(\n  React.forwardRef(({ options, ...props }, ref) => {\n    return (\n      <select {...props} ref={ref}>\n        {options.length > 0 ? (\n          options.map(e => (\n            <option key={e.value} value={e.value}>\n              {e.Zh_tw + e.En}\n            </option>\n          ))\n        ) : (\n          <option value=\"\">請選擇</option>\n        )}\n      </select>\n    );\n  })\n);\n\nconst timeOptions = [  \n  '06:00',\n  '07:00',\n  '08:00',\n  '09:00',\n  '10:00',\n  '11:00',\n  '12:00',\n  '13:00',\n  '14:00',\n  '15:00',\n  '16:00',\n  '17:00',\n  '18:00',\n  '19:00',\n  '20:00',\n  '21:00',\n  '22:00',\n  '23:00',\n]\n\nexport const TimeSelect = React.memo(({options, ...props}) => {\n  return (\n    <select {...props}>\n      {\n        timeOptions.map(v => <option value={v} key={v}>{v}</option>)\n      }\n    </select>\n  )\n})\n\nexport default Select;\n","import React from 'react'\n\nexport function Row({ children }) {\n  return (\n    <div className='row form-group'>\n      {children}\n    </div>\n  )\n}\n\nexport function Label({\n  htmlFor,\n  children\n}) {\n  return (\n    <label htmlFor={htmlFor} className=\"col-4 col-form-label text-left\">\n      {children}\n    </label>\n  )\n}\n\nexport const FormField = React.memo(({ children }) => {\n  return (\n    <div className=\"col\">\n      {children}\n    </div>\n  )\n})\n","export function formatDate(date) {\n  let d = new Date(date),\n    month = \"\" + (d.getMonth() + 1),\n    day = \"\" + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = \"0\" + month;\n  if (day.length < 2) day = \"0\" + day;\n\n  return [year, month, day].join(\"-\");\n}\n\nexport function timesToMins(times) {\n  const arr = times.split(\":\");\n  return parseInt(arr[0], 10) * 60 + parseInt(arr[1], 10);\n}\n\nfunction prefixZero(str) {\n  return str.length < 2 ? \"0\" + str : str;\n}\n\nexport function minsToTimes(mins) {\n  let h = 0;\n  while (mins >= 60) {\n    mins -= 60;\n    h += 1;\n  }\n  h = prefixZero(h.toString());\n  mins = prefixZero(mins.toString());\n  return h + \":\" + mins;\n}\n\nexport function getDefaultHour() {\n  let dep = new Date().getHours();\n  let arr = dep + 3;\n  dep = prefixZero(dep.toString()) + \":00\";\n  arr = prefixZero(arr.toString()) + \":00\";\n  return {\n    defaultDepTime: dep,\n    defaultArrTime: arr\n  };\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport desc from '../assets/desc.svg'\nimport asc from '../assets/asc.svg'\nimport exchange from '../assets/exchange.svg'\n\nexport const Desc = styled(({...props}) => (\n  <img {...props} src={desc} alt=\"desc\" />\n))`\n  width: 20px;\n`\n\nexport const Asc = styled(({...props}) => (\n  <img {...props} src={asc} alt=\"asc\" />\n))`\n  width: 20px;\n`\n\nexport const Exchange = () => (\n  <img className=\"exchange\" src={exchange} alt=\"exchange\"/>\n)","import React from 'react'\nimport styled from 'styled-components'\nimport { minsToTimes, timesToMins } from '../utils'\nimport { Desc, Asc } from \"./Icons\";\n\nconst StyledTable = styled.table`\n  width: 100%;\n  box-shadow: 0px 3px 10px #ddd;\n  thead {\n    background-color: #eee;\n  }\n  td {\n    padding: .3em;\n    vertical-align: middle;\n  }\n  tr:nth-child(even) {\n    background-color: #eee;\n  }\n`;\n\nconst StyledTh = styled.th`\n  padding: .3em;\n  vertical-align: middle;\n  font-weight: bold;\n  cursor: ${props => props.pointer ? 'pointer' : 'initial'};\n`;\n\nexport const ResultRow = React.memo(({\n  TrainNo,\n  DepartureTime,\n  ArrivalTime\n}) => {\n  const Dmins = timesToMins(DepartureTime)\n  const Amins = timesToMins(ArrivalTime)\n  return (\n    <tr>\n      <td className=\"text-info font-weight-bold\">{TrainNo}</td>\n      <td>{DepartureTime}</td>\n      <td>{ArrivalTime}</td>\n      <td>{minsToTimes(Amins - Dmins)}</td>\n    </tr>\n  )\n})\n\nexport const EmptyRow = () => (\n  <tr>\n    <td colSpan=\"4\">尚無資料</td>\n  </tr>\n)\n\nconst ResultTable = React.memo(({\n  sortByDeparture,\n  sortByArrival,\n  resultList,\n  onClickDepartureSort,\n  onClickArrivalSort\n}) => {\n  return (\n    <StyledTable>\n      <thead>\n        <tr>\n          <StyledTh>車次</StyledTh>\n          <StyledTh\n            pointer\n            onClick={onClickDepartureSort}\n          >\n            發車\n            {sortByDeparture === \"desc\" ? <Desc /> : <Asc />}\n          </StyledTh>\n          <StyledTh\n            pointer\n            onClick={onClickArrivalSort}\n          >\n            到達\n            {sortByArrival === \"desc\" ? <Desc /> : <Asc />}\n          </StyledTh>\n          <StyledTh>總時程</StyledTh>\n        </tr>\n      </thead>\n      <tbody>\n        {resultList.length > 0 ? (\n          resultList.map(val => (\n            <ResultRow\n              key={val.DailyTrainInfo.TrainNo}\n              TrainNo={val.DailyTrainInfo.TrainNo}\n              DepartureTime={val.OriginStopTime.DepartureTime}\n              ArrivalTime={val.DestinationStopTime.ArrivalTime}\n            />\n          ))\n        ) : (\n          <EmptyRow />\n        )}\n      </tbody>\n    </StyledTable>\n  )\n})\n\nexport default ResultTable","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledTable = styled.table`\n  width: 100%;\n  background-color: #aeeff9;\n  th, td {\n    padding: .3em;\n  }\n`;\n\nconst PrizeTable = ({ prizeList, departure, arrival }) => {\n  return (\n    <div className=\"mt-3 mb-3\">\n      <h3>票價資訊</h3>\n      <StyledTable>\n        <thead>\n          <tr>\n            <th colSpan=\"3\">\n              {departure}\n              <span className=\"ml-2 mr-2\">&rarr;</span>\n              {arrival}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {prizeList.map(v => (\n              <td key={v.Price}>\n                {v.TicketType}:<strong>&#36;{v.Price}</strong>\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </StyledTable>\n    </div>\n  )\n}\n\nexport default PrizeTable;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport \"./App.css\";\nimport Select, { TimeSelect } from \"./components/Select\";\nimport { Row, Label, FormField } from \"./components/Grid\";\nimport { formatDate, timesToMins, getDefaultHour } from \"./utils\";\n\nimport ResultTable from \"./components/ResultTable\";\nimport PrizeTable from \"./components/PrizeTable\";\n\n// API spec: https://ptx.transportdata.tw/MOTC?t=Rail&v=2#!/THSR/THSRApi_DailyTimetable\nconst API_BASE = \"https://ptx.transportdata.tw/MOTC\";\n\nconst fetchOptions = {\n  method: \"GET\",\n  mode: \"cors\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n};\n\nfunction searchTrain(OriginStationID, DestinationStationID, TrainDate) {\n  // GET 取得指定[日期],[起迄站間]之時刻表資料\n  const API_TRAIN = `/v2/Rail/THSR/DailyTimetable/OD/${OriginStationID}/to/${DestinationStationID}/${TrainDate}`;\n  return fetch(API_BASE + API_TRAIN, fetchOptions);\n}\n\nfunction searchPriceByStation(OriginStationID, DestinationStationID) {\n  // GET 取得指定[起訖站間]之票價資料\n  const API_PRICE = `/v2/Rail/THSR/ODFare/${OriginStationID}/to/${DestinationStationID}`;\n  return fetch(API_BASE + API_PRICE, fetchOptions);\n}\n\nfunction getStations() {\n  const API_ODFARE = \"/v2/Rail/THSR/Station\"; // GET 取得車站基本資料\n  return fetch(API_BASE + API_ODFARE, fetchOptions);\n}\n\nconst { defaultDepTime, defaultArrTime } = getDefaultHour();\n\nfunction App() {\n  const [updateTime, setUpdateTime] = useState(\"\");\n  const [stationOptions, setStationOptions] = useState([]);\n  const [date, setDate] = useState(formatDate(Date.now()));\n  const [sortByDeparture, setDeaprtureState] = useState(\"desc\");\n  const [sortByArrival, setArrivalState] = useState(\"desc\");\n  const [departure, setDeparture] = useState(\"1000\"); // 台北\n  const [arrival, setArrival] = useState(\"1070\"); // 左營\n  const departureRef = useRef();\n  const arrivalRef = useRef();\n  const [resultList, setResultList] = useState([]);\n  const [prizeList, setPrizeList] = useState([]);\n  const [departureTime, setDepartureTime] = useState(defaultDepTime);\n  const [arriveTime, setArriveTime] = useState(defaultArrTime);\n\n  const changeDeparture = useCallback(\n    e => setDeparture(e.currentTarget.value),\n    [setDeparture]\n  );\n\n  const changeArrival = useCallback(e => setArrival(e.currentTarget.value), [\n    setArrival\n  ]);\n\n  const DepArrChange = useCallback(() => {\n    setDeparture(arrival);\n    setArrival(departure);\n  }, [departure, arrival]);\n\n  const searchClick = useCallback(() => {\n    searchTrain(departure, arrival, date)\n      .then(res => res.json())\n      .then(data => {\n        const depFilterTime = timesToMins(departureTime);\n        const arrFilterTime = timesToMins(arriveTime);\n        const filteredData = data.filter(d => {\n          const depTime = timesToMins(d.OriginStopTime.DepartureTime);\n          const arrTime = timesToMins(d.DestinationStopTime.ArrivalTime);\n          return depTime > depFilterTime && arrTime < arrFilterTime;\n        });\n        setResultList(filteredData);\n      })\n      .catch(err => console.log(err));\n    searchPriceByStation(departure, arrival)\n      .then(res => res.json())\n      .then(data => setPrizeList(data[0].Fares))\n      .catch(err => console.log(err));\n  }, [departure, arrival, date, departureTime, arriveTime]);\n\n  const departureSortClick = useCallback(() => {\n    setDeaprtureState(sortByDeparture === \"desc\" ? \"asc\" : \"desc\");\n    resultList.sort((a, b) => {\n      const aMins = timesToMins(a.OriginStopTime.DepartureTime);\n      const bMins = timesToMins(b.OriginStopTime.DepartureTime);\n      return sortByDeparture === \"desc\" ? aMins - bMins : bMins - aMins;\n    });\n  }, [sortByDeparture, resultList]);\n\n  const arrivalSortClick = useCallback(() => {\n    setArrivalState(sortByArrival === \"desc\" ? \"asc\" : \"desc\");\n    resultList.sort((a, b) => {\n      const aMins = timesToMins(a.DestinationStopTime.ArrivalTime);\n      const bMins = timesToMins(b.DestinationStopTime.ArrivalTime);\n      return sortByArrival === \"desc\" ? aMins - bMins : bMins - aMins;\n    });\n  }, [sortByArrival, resultList]);\n\n  const changeTime = useCallback(e => {\n    if (e.currentTarget.id === \"DepartureTime\") {\n      setDepartureTime(e.currentTarget.value);\n    } else {\n      setArriveTime(e.currentTarget.value);\n    }\n  }, []);\n\n  useEffect(() => {\n    getStations()\n      .then(res => res.json())\n      .then(data => {\n        const stations = data.map(val => ({\n          value: val.StationID,\n          ...val.StationName\n        }));\n        setStationOptions(stations);\n        setUpdateTime(data[0].UpdateTime);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>高鐵查詢系統</h1>\n      </header>\n      <div className=\"search_panel container\">\n        <Row>\n          <Label htmlFor=\"trip-start\">日期</Label>\n          <FormField>\n            <input\n              className=\"form-control\"\n              type=\"date\"\n              id=\"trip-start\"\n              value={date}\n              onChange={e => setDate(e.currentTarget.value)}\n            />\n          </FormField>\n        </Row>\n        <Row>\n          <Label htmlFor=\"OrginStation\">起站</Label>\n          <FormField>\n            <Select\n              className=\"form-control\"\n              name=\"OrginStation\"\n              id=\"OrginStation\"\n              options={stationOptions}\n              value={departure}\n              onChange={changeDeparture}\n              ref={departureRef}\n            />\n          </FormField>\n        </Row>\n        <div className=\"row justify-content-center form-group\">\n          <button\n            onClick={DepArrChange}\n            type=\"button\"\n            className=\"btn btn-outline-primary\"\n          >\n            起迄站交換\n          </button>\n        </div>\n        <Row>\n          <Label htmlFor=\"DestinationStation\">迄站</Label>\n          <FormField>\n            <Select\n              className=\"form-control\"\n              name=\"DestinationStation\"\n              id=\"DestinationStation\"\n              options={stationOptions}\n              value={arrival}\n              onChange={changeArrival}\n              ref={arrivalRef}\n            />\n          </FormField>\n        </Row>\n        <Row>\n          <Label htmlFor=\"DepartureTime\">最早出發</Label>\n          <FormField>\n            <TimeSelect\n              className=\"form-control\"\n              name=\"DepartureTime\"\n              id=\"DepartureTime\"\n              value={departureTime}\n              onChange={changeTime}\n            />\n          </FormField>\n        </Row>\n        <Row>\n          <Label htmlFor=\"ArriveTime\">最晚抵達</Label>\n          <FormField>\n            <TimeSelect\n              className=\"form-control\"\n              name=\"ArriveTime\"\n              id=\"ArriveTime\"\n              value={arriveTime}\n              onChange={changeTime}\n            />\n          </FormField>\n        </Row>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-lg btn-block\"\n          onClick={searchClick}\n        >\n          查詢\n        </button>\n      </div>\n      <div className=\"container\">\n        <ResultTable\n          sortByDeparture={sortByDeparture}\n          sortByArrival={sortByArrival}\n          resultList={resultList}\n          onClickDepartureSort={departureSortClick}\n          onClickArrivalSort={arrivalSortClick}\n        />\n        {prizeList.length > 0 ? (\n          <PrizeTable\n            prizeList={prizeList}\n            departure={departureRef.current.selectedOptions[0].textContent}\n            arrival={arrivalRef.current.selectedOptions[0].textContent}\n          />\n        ) : null}\n      </div>\n      <footer className=\"fixed-bottom\">\n        <p>更新時間: {updateTime}</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}