{"version":3,"sources":["components/GoTop.jsx","apis/config.js","apis/THSR.js","utils.js","components/SortIcon/SortIcon.jsx","components/SortIcon/index.js","components/THSR/components/TrainDetail/components/Row.jsx","components/THSR/components/TrainDetail/TrainDetail.jsx","components/THSR/components/TrainDetail/index.js","components/THSR/components/PrizeDetail/PrizeDetail.jsx","components/THSR/components/PrizeDetail/index.js","components/Grid.jsx","components/Select.jsx","components/THSR/components/SearchPanel/SearchPanel.jsx","components/THSR/components/SearchPanel/index.js","components/THSR/THSR.jsx","components/THSR/index.js","apis/TRA.js","components/TRA/components/SearchPanel/SearchPanel.jsx","components/TRA/components/SearchPanel/index.js","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/TrainInfoDialog.jsx","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/index.js","components/TRA/components/TrainDetail/components/Row/Row.jsx","components/TRA/components/TrainDetail/components/Row/index.js","hooks/useToggle.js","components/TRA/components/TrainDetail/TrainDetail.jsx","components/TRA/components/TrainDetail/index.js","components/TRA/TRA.jsx","components/TRA/index.js","App.jsx","serviceWorker.js","index.js"],"names":["scrollTop","window","scrollTo","top","left","behavior","StyledButton","styled","button","isShow","GoTop","props","useState","setIsShow","useEffect","scroll","scrollY","addEventListener","removeEventListener","useGoTop","onClick","swrConfig","suspense","revalidateOnFocus","revalidateOnReconnect","refreshWhenOffline","refreshWhenHidden","refreshInterval","fetcher","url","fetch","method","mode","headers","then","r","json","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","timesToMins","times","arr","split","parseInt","prefixZero","str","getDefaultHour","dep","getHours","toString","defaultDepTime","defaultArrTime","SortIcon","order","NoResults","colSpan","Row","detail","TrainNo","DailyTrainInfo","DepartureTime","OriginStopTime","ArrivalTime","DestinationStopTime","Dmins","Amins","className","mins","h","minsToTimes","StyledTable","table","StyledTh","th","pointer","TrainDetail","departure","arrival","trainDate","departureTime","arrivalTime","sortBy","setSortBy","setOrder","shouldFetch","data","useSWR","depFilterTime","arrFilterTime","trainDetails","filter","depTime","arrTime","renderList","sort","a","b","aDepTimeMins","bDepTimeMins","aArrTimeMins","bArrTimeMins","map","key","UpdateTime","PrizeDetail","prizeList","Fares","departureStation","OriginStationName","Zh_tw","En","arrivalStation","DestinationStationName","v","Price","TicketType","children","Label","htmlFor","FormField","React","memo","Selector","forwardRef","ref","options","e","value","StyledSelect","withStyles","root","textAlign","Select","TimeSelect","MenuItem","StyledSeachForm","SearchPanel","onSearch","now","setDate","setDeparture","setArrival","setDepartureTime","arriveTime","setArriveTime","stations","val","StationID","StationName","type","id","onChange","currentTarget","name","target","THSR","setTrainDate","setArrivalTime","fallback","API_BASE","Container","div","SearchForm","TextField","fullWidth","variant","Autocomplete","renderInput","params","label","getOptionLabel","option","getOptionSelected","o","StationUID","Button","color","size","disabled","Transition","Slide","direction","useStyles","makeStyles","theme","appBar","position","title","marginLeft","spacing","flex","TrainInfoDialog","isOpen","toggle","classes","Dialog","fullScreen","open","onClose","TransitionComponent","AppBar","Toolbar","IconButton","edge","aria-label","Typography","TableRow","TableCell","init","setValue","useCallback","useToggle","Table","TableHead","TableBody","TRA","TabPanel","index","other","role","hidden","aria-labelledby","Box","pt","a11yProps","App","transportation","setTransportation","Tabs","event","newValue","Tab","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.22529d47.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nfunction scrollTop() {\n  window.scrollTo({\n    top: 0,\n    left: 0,\n    behavior: \"smooth\"\n  });\n}\n\nfunction useGoTop() {\n  const [isShow, setIsShow] = useState(false);\n  useEffect(() => {\n    function scroll() {\n      if (window.scrollY > 200) {\n        setIsShow(true);\n      } else {\n        setIsShow(false);\n      }\n    }\n    scroll();\n    window.addEventListener(\"scroll\", scroll);\n    return () => window.removeEventListener(\"scroll\", scroll);\n  }, [setIsShow]);\n  return isShow;\n}\n\nconst StyledButton = styled.button`\n  position: fixed;\n  bottom: 5%;\n  right: 5%;\n  z-index: 1050;\n  width: 45px;\n  height: 45px;\n  background: #eee;\n  border-radius: 50%;\n  text-align: center;\n  padding: 0;\n  display: ${({ isShow }) => (isShow ? \"block\" : \"none\")};\n`;\n\nfunction GoTop({ ...props }) {\n  const isShow = useGoTop();\n\n  return (\n    <StyledButton isShow={isShow} onClick={scrollTop} {...props}>\n      TOP\n    </StyledButton>\n  );\n}\n\nexport default GoTop;\n","export default function getFetchOptions() {\n  return {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept-Encoding\": \"gzip, deflate\"\n    }\n  };\n}\n\nexport const swrConfig = {\n  suspense: true,\n  revalidateOnFocus: false,\n  revalidateOnReconnect: false,\n  refreshWhenOffline: false,\n  refreshWhenHidden: false,\n  refreshInterval: 0\n};\n","import getFetchOptions from \"./config\";\n\n// API spec: https://ptx.transportdata.tw/MOTC?t=Rail&v=2#!/THSR/THSRApi_DailyTimetable\nconst API_BASE = \"https://ptx.transportdata.tw/MOTC\";\n\nexport const fetcher = url =>\n  fetch(API_BASE + url, getFetchOptions()).then(r => r.json());\n","export function formatDate(date) {\n  let d = new Date(date),\n    month = \"\" + (d.getMonth() + 1),\n    day = \"\" + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = \"0\" + month;\n  if (day.length < 2) day = \"0\" + day;\n\n  return [year, month, day].join(\"-\");\n}\n\nexport function timesToMins(times) {\n  const arr = times.split(\":\");\n  return parseInt(arr[0], 10) * 60 + parseInt(arr[1], 10);\n}\n\nfunction prefixZero(str) {\n  return str.length < 2 ? \"0\" + str : str;\n}\n\nexport function minsToTimes(mins) {\n  let h = 0;\n  while (mins >= 60) {\n    mins -= 60;\n    h += 1;\n  }\n  h = prefixZero(h.toString());\n  mins = prefixZero(mins.toString());\n  return h + \":\" + mins;\n}\n\nexport function getDefaultHour() {\n  let dep = new Date().getHours() + 1;\n  let arr = dep + 3;\n  dep = prefixZero(dep.toString()) + \":00\";\n  arr = prefixZero(arr.toString()) + \":00\";\n  return {\n    defaultDepTime: dep,\n    defaultArrTime: arr\n  };\n}\n","import React from \"react\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\n\nconst SortIcon = ({ order }) => {\n  return order === \"desc\" ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />;\n};\n\nexport default SortIcon;\n","import SortIcon from \"./SortIcon\";\n\nexport default SortIcon;\n","import React from \"react\";\nimport { minsToTimes, timesToMins } from \"utils\";\n\nexport const NoResults = () => (\n  <tr>\n    <td colSpan=\"4\">尚無資料</td>\n  </tr>\n);\n\nconst Row = ({ detail }) => {\n  const TrainNo = detail.DailyTrainInfo.TrainNo;\n  const DepartureTime = detail.OriginStopTime.DepartureTime;\n  const ArrivalTime = detail.DestinationStopTime.ArrivalTime;\n  const Dmins = timesToMins(DepartureTime);\n  const Amins = timesToMins(ArrivalTime);\n\n  return (\n    <tr>\n      <td className=\"text-info font-weight-bold\">{TrainNo}</td>\n      <td>{DepartureTime}</td>\n      <td>{ArrivalTime}</td>\n      <td>{minsToTimes(Amins - Dmins)}</td>\n    </tr>\n  );\n};\n\nexport default Row;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\n\nimport { fetcher } from \"apis/THSR\";\nimport { timesToMins } from \"utils\";\nimport SortIcon from \"components/SortIcon\";\n\nimport Row, { NoResults } from \"./components/Row\";\n\nconst StyledTable = styled.table`\n  width: 100%;\n  box-shadow: 0px 3px 10px #ddd;\n  thead {\n    background-color: #eee;\n  }\n  td {\n    padding: 0.3em;\n    vertical-align: middle;\n  }\n  tr:nth-child(even) {\n    background-color: #eee;\n  }\n`;\n\nconst StyledTh = styled.th`\n  padding: 0.3em;\n  vertical-align: middle;\n  font-weight: bold;\n  cursor: ${props => (props.pointer ? \"pointer\" : \"initial\")};\n  > span {\n    display: inline-block;\n    margin-right: 2px;\n    vertical-align: middle;\n  }\n`;\n\nconst TrainDetail = ({\n  departure,\n  arrival,\n  trainDate,\n  departureTime,\n  arrivalTime\n}) => {\n  const [sortBy, setSortBy] = useState();\n  const [order, setOrder] = useState();\n\n  const shouldFetch = departure && arrival && trainDate;\n\n  // GET 取得指定[日期],[起迄站間]之時刻表資料\n  const { data } = useSWR(\n    () =>\n      shouldFetch &&\n      `/v2/Rail/THSR/DailyTimetable/OD/${departure}/to/${arrival}/${trainDate}`,\n    fetcher,\n    { suspense: true }\n  );\n\n  const depFilterTime = timesToMins(departureTime);\n  const arrFilterTime = timesToMins(arrivalTime);\n\n  const trainDetails = data\n    ? data.filter(d => {\n        const depTime = timesToMins(d.OriginStopTime.DepartureTime);\n        const arrTime = timesToMins(d.DestinationStopTime.ArrivalTime);\n        return depTime > depFilterTime && arrTime < arrFilterTime;\n      })\n    : [];\n\n  if (trainDetails.length < 1) return null;\n\n  const onClickDepartureSort = () => {\n    setSortBy(\"departure\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const onClickArrivalSort = () => {\n    setSortBy(\"arrival\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const renderList = trainDetails.sort((a, b) => {\n    if (sortBy === \"departure\") {\n      const aDepTimeMins = timesToMins(a.OriginStopTime.DepartureTime);\n      const bDepTimeMins = timesToMins(b.OriginStopTime.DepartureTime);\n\n      return order === \"desc\"\n        ? bDepTimeMins - aDepTimeMins\n        : aDepTimeMins - bDepTimeMins;\n    } else if (sortBy === \"arrival\") {\n      const aArrTimeMins = timesToMins(a.DestinationStopTime.ArrivalTime);\n      const bArrTimeMins = timesToMins(b.DestinationStopTime.ArrivalTime);\n\n      return order === \"desc\"\n        ? bArrTimeMins - aArrTimeMins\n        : aArrTimeMins - bArrTimeMins;\n    } else {\n      return true;\n    }\n  });\n\n  return (\n    <div>\n      <StyledTable>\n        <thead>\n          <tr>\n            <StyledTh>車次</StyledTh>\n            <StyledTh pointer onClick={onClickDepartureSort}>\n              <span>發車</span>\n              {sortBy === \"departure\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </StyledTh>\n            <StyledTh pointer onClick={onClickArrivalSort}>\n              <span>到達</span>\n              {sortBy === \"arrival\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </StyledTh>\n            <StyledTh>總時程</StyledTh>\n          </tr>\n        </thead>\n        <tbody>\n          {renderList.length > 0 ? (\n            renderList.map(detail => (\n              <Row key={detail.DailyTrainInfo.TrainNo} detail={detail} />\n            ))\n          ) : (\n            <NoResults />\n          )}\n        </tbody>\n      </StyledTable>\n      <footer className=\"fixed-bottom\">\n        <p>更新時間: {data[0].UpdateTime}</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default TrainDetail;\n","import TrainDetail from \"./TrainDetail\";\n\nexport default TrainDetail;\n","import React from \"react\";\nimport useSWR from \"swr\";\nimport styled from \"styled-components\";\nimport { fetcher } from \"apis/THSR\";\n\nconst StyledTable = styled.table`\n  width: 100%;\n  background-color: #aeeff9;\n  th,\n  td {\n    padding: 0.3em;\n  }\n`;\n\nconst PrizeDetail = ({ departure, arrival }) => {\n  const shouldFetch = departure && arrival;\n\n  // GET 取得指定[起訖站間]之票價資料\n  const { data } = useSWR(\n    () => shouldFetch && `/v2/Rail/THSR/ODFare/${departure}/to/${arrival}`,\n    fetcher,\n    { suspense: true }\n  );\n\n  const prizeList = data ? data[0].Fares : [];\n\n  if (prizeList.length < 1) return null;\n\n  const departureStation =\n    data[0].OriginStationName.Zh_tw + data[0].OriginStationName.En;\n  const arrivalStation =\n    data[0].DestinationStationName.Zh_tw + data[0].DestinationStationName.En;\n\n  return (\n    <div className=\"mt-3 mb-3\">\n      <h3>票價資訊</h3>\n      <StyledTable>\n        <thead>\n          <tr>\n            <th colSpan=\"3\">\n              {departureStation}\n              <span className=\"ml-2 mr-2\">&rarr;</span>\n              {arrivalStation}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {prizeList.map(v => (\n              <td key={v.Price}>\n                {v.TicketType}:<strong>&#36;{v.Price}</strong>\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </StyledTable>\n    </div>\n  );\n};\n\nexport default PrizeDetail;\n","import PrizeDetail from \"./PrizeDetail\";\n\nexport default PrizeDetail;\n","import React from \"react\";\n\nexport function Row({ children }) {\n  return <div className=\"row form-group\">{children}</div>;\n}\n\nexport function Label({ htmlFor, children }) {\n  return (\n    <label htmlFor={htmlFor} className=\"col-4 col-form-label text-left\">\n      {children}\n    </label>\n  );\n}\n\nexport const FormField = React.memo(({ children }) => {\n  return <div className=\"col\">{children}</div>;\n});\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst Selector = React.memo(\n  React.forwardRef(({ options, ...props }, ref) => {\n    return (\n      <select {...props} ref={ref}>\n        {options.length > 0 ? (\n          options.map(e => (\n            <option key={e.value} value={e.value}>\n              {e.Zh_tw + e.En}\n            </option>\n          ))\n        ) : (\n          <option value=\"\">請選擇</option>\n        )}\n      </select>\n    );\n  })\n);\n\nconst StyledSelect = withStyles({\n  root: {\n    textAlign: \"left\"\n  }\n})(Select);\n\nexport const TimeSelect = ({ ...props }) => (\n  <StyledSelect {...props}>\n    <MenuItem value=\"06:00\">06:00</MenuItem>\n    <MenuItem value=\"07:00\">07:00</MenuItem>\n    <MenuItem value=\"08:00\">08:00</MenuItem>\n    <MenuItem value=\"09:00\">09:00</MenuItem>\n    <MenuItem value=\"10:00\">10:00</MenuItem>\n    <MenuItem value=\"11:00\">11:00</MenuItem>\n    <MenuItem value=\"12:00\">12:00</MenuItem>\n    <MenuItem value=\"13:00\">13:00</MenuItem>\n    <MenuItem value=\"14:00\">14:00</MenuItem>\n    <MenuItem value=\"15:00\">15:00</MenuItem>\n    <MenuItem value=\"16:00\">16:00</MenuItem>\n    <MenuItem value=\"17:00\">17:00</MenuItem>\n    <MenuItem value=\"18:00\">18:00</MenuItem>\n    <MenuItem value=\"19:00\">19:00</MenuItem>\n    <MenuItem value=\"20:00\">20:00</MenuItem>\n    <MenuItem value=\"21:00\">21:00</MenuItem>\n    <MenuItem value=\"22:00\">22:00</MenuItem>\n    <MenuItem value=\"23:00\">23:00</MenuItem>\n    <MenuItem value=\"24:00\">24:00</MenuItem>\n  </StyledSelect>\n);\n\nexport default Selector;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\n\nimport { Row, Label, FormField } from \"components/Grid\";\nimport Select, { TimeSelect } from \"components/Select\";\nimport { fetcher } from \"apis/THSR\";\nimport { formatDate, getDefaultHour } from \"utils\";\n\nconst { defaultDepTime, defaultArrTime } = getDefaultHour();\n\nconst SearchForm = ({ onSearch, className }) => {\n  const [date, setDate] = useState(formatDate(Date.now()));\n  const [departure, setDeparture] = useState(\"1000\"); // 台北\n  const [arrival, setArrival] = useState(\"1070\"); // 左營\n  const [departureTime, setDepartureTime] = useState(defaultDepTime);\n  const [arriveTime, setArriveTime] = useState(defaultArrTime);\n\n  // GET 取得車站基本資料\n  const { data } = useSWR(\"/v2/Rail/THSR/Station\", fetcher, {\n    suspense: true,\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n    refreshWhenOffline: false,\n    refreshWhenHidden: false,\n    refreshInterval: 0\n  });\n\n  const stations = data\n    ? data.map(val => ({\n        value: val.StationID,\n        ...val.StationName\n      }))\n    : [];\n\n  const depArrSwitch = () => {\n    setDeparture(arrival);\n    setArrival(departure);\n  };\n\n  const handleSearch = () =>\n    onSearch({\n      date,\n      departure,\n      arrival,\n      departureTime,\n      arriveTime\n    });\n\n  return (\n    <div className={`container ${className}`}>\n      <Row>\n        <Label htmlFor=\"trip-start\">日期</Label>\n        <FormField>\n          <input\n            className=\"form-control\"\n            type=\"date\"\n            id=\"trip-start\"\n            value={date}\n            onChange={e => setDate(e.currentTarget.value)}\n          />\n        </FormField>\n      </Row>\n      <Row>\n        <Label htmlFor=\"OrginStation\">起站</Label>\n        <FormField>\n          <Select\n            className=\"form-control\"\n            name=\"OrginStation\"\n            id=\"OrginStation\"\n            options={stations}\n            value={departure}\n            onChange={e => setDeparture(e.currentTarget.value)}\n          />\n        </FormField>\n      </Row>\n      <div className=\"row justify-content-center form-group\">\n        <button\n          onClick={depArrSwitch}\n          type=\"button\"\n          className=\"btn btn-outline-primary\"\n        >\n          起迄站交換\n        </button>\n      </div>\n      <Row>\n        <Label htmlFor=\"DestinationStation\">迄站</Label>\n        <FormField>\n          <Select\n            className=\"form-control\"\n            name=\"DestinationStation\"\n            id=\"DestinationStation\"\n            options={stations}\n            value={arrival}\n            onChange={e => setArrival(e.currentTarget.value)}\n          />\n        </FormField>\n      </Row>\n      <Row>\n        <Label htmlFor=\"DepartureTime\">最早出發</Label>\n        <FormField>\n          <TimeSelect\n            className=\"form-control\"\n            name=\"DepartureTime\"\n            id=\"DepartureTime\"\n            value={departureTime}\n            onChange={e => setDepartureTime(e.target.value)}\n          />\n        </FormField>\n      </Row>\n      <Row>\n        <Label htmlFor=\"ArriveTime\">最晚抵達</Label>\n        <FormField>\n          <TimeSelect\n            className=\"form-control\"\n            name=\"ArriveTime\"\n            id=\"ArriveTime\"\n            value={arriveTime}\n            onChange={e => setArriveTime(e.target.value)}\n          />\n        </FormField>\n      </Row>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary btn-lg btn-block\"\n        onClick={handleSearch}\n      >\n        查詢\n      </button>\n    </div>\n  );\n};\n\nconst StyledSeachForm = styled(SearchForm)`\n  box-shadow: 1px 1px 5px #ddd;\n  background-color: #f3f3f3;\n  border-color: #ddd;\n  color: #333;\n  text-shadow: 0 1px 0 #eee;\n  padding-top: 0.5em;\n  padding-bottom: 0.5em;\n  margin-bottom: 0.5em;\n  .col-form-label {\n    max-width: 7em;\n  }\n`;\n\nexport default StyledSeachForm;\n","import SearchPanel from \"./SearchPanel\";\n\nexport default SearchPanel;\n","import React, { useState, Suspense } from \"react\";\nimport TrainDetail from \"./components/TrainDetail\";\nimport PrizeDetail from \"./components/PrizeDetail\";\nimport SearchPanel from \"./components/SearchPanel\";\n\nconst THSR = () => {\n  const [trainDate, setTrainDate] = useState(\"\");\n  const [departure, setDeparture] = useState(\"\");\n  const [arrival, setArrival] = useState(\"\");\n  const [departureTime, setDepartureTime] = useState(\"\");\n  const [arrivalTime, setArrivalTime] = useState(\"\");\n\n  const searchClick = ({\n    date,\n    departure,\n    arrival,\n    departureTime,\n    arriveTime\n  }) => {\n    setTrainDate(date);\n    setDeparture(departure);\n    setArrival(arrival);\n    setDepartureTime(departureTime);\n    setArrivalTime(arriveTime);\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>高鐵時刻查詢</h1>\n      </header>\n      <Suspense fallback={<div>Loading stations...</div>}>\n        <SearchPanel onSearch={searchClick} />\n      </Suspense>\n      <div className=\"container\">\n        <Suspense fallback={<div>Get train details...</div>}>\n          <TrainDetail\n            departure={departure}\n            arrival={arrival}\n            trainDate={trainDate}\n            departureTime={departureTime}\n            arrivalTime={arrivalTime}\n          />\n        </Suspense>\n        <Suspense fallback={<div>Get prize detail...</div>}>\n          <PrizeDetail departure={departure} arrival={arrival} />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default THSR;\n","import THSR from \"./THSR\";\n\nexport default THSR;\n","import getFetchOptions from \"./config\";\n\n// API spec: https://ptx.transportdata.tw/MOTC?t=Rail&v=2#!/TRA/TRAApi_ODDailyTimetable\nconst API_BASE = \"https://ptx.transportdata.tw/MOTC\";\n\nexport function searchTrain(OriginStationID, DestinationStationID, TrainDate) {\n  // GET 取得指定[日期],[起迄站間]之時刻表資料\n  const API_TRAIN = `/v2/Rail/TRA/DailyTimetable/OD/${OriginStationID}/to/${DestinationStationID}/${TrainDate}?format=JSON`;\n  return fetch(API_BASE + API_TRAIN, getFetchOptions());\n}\n\nexport function searchPriceByStation(OriginStationID, DestinationStationID) {\n  // GET 取得指定[起訖站間]之票價資料\n  const API_PRICE = `/v2/Rail/THSR/ODFare/${OriginStationID}/to/${DestinationStationID}`;\n  return fetch(API_BASE + API_PRICE, getFetchOptions());\n}\n\nexport const fetcher = url =>\n  fetch(API_BASE + url, getFetchOptions()).then(r => r.json());\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Row, Label, FormField } from \"components/Grid\";\nimport { TimeSelect } from \"components/Select\";\n\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/TRA\";\nimport { formatDate, getDefaultHour } from \"utils\";\n\nconst Container = styled.div`\n  box-shadow: 1px 1px 5px #ddd;\n  background-color: #f3f3f3;\n  border-color: #ddd;\n  color: #333;\n  text-shadow: 0 1px 0 #eee;\n  padding-top: 0.5em;\n  padding-bottom: 0.5em;\n  margin-bottom: 0.5em;\n  .col-form-label {\n    max-width: 7em;\n  }\n`;\n\nconst { defaultDepTime, defaultArrTime } = getDefaultHour();\n\nconst SearchForm = ({ onSearch }) => {\n  const [date, setDate] = useState(formatDate(Date.now()));\n  const [departure, setDeparture] = useState(null);\n  const [arrival, setArrival] = useState(null);\n  const [departureTime, setDepartureTime] = useState(defaultDepTime);\n  const [arriveTime, setArriveTime] = useState(defaultArrTime);\n\n  // GET 取得車站基本資料\n  const { data } = useSWR(\n    \"/v2/Rail/TRA/Station?$top=500&$format=JSON\",\n    fetcher,\n    swrConfig\n  );\n\n  const stations = data ? data : [];\n\n  const depArrSwitch = () => {\n    setDeparture(arrival);\n    setArrival(departure);\n  };\n\n  const handleSearch = () =>\n    onSearch({\n      date,\n      departure,\n      arrival,\n      departureTime,\n      arriveTime\n    });\n\n  return (\n    <Container>\n      <div className=\"container\">\n        <Row>\n          <Label htmlFor=\"trip-start\">日期</Label>\n          <FormField>\n            <TextField\n              type=\"date\"\n              id=\"trip-start\"\n              value={date}\n              onChange={e => setDate(e.currentTarget.value)}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </FormField>\n        </Row>\n        <Row>\n          <Label htmlFor=\"OrginStation\">起站</Label>\n          <FormField>\n            <Autocomplete\n              name=\"OrginStation\"\n              id=\"OrginStation\"\n              options={stations}\n              onChange={(e, v) => setDeparture(v)}\n              value={departure}\n              renderInput={params => (\n                <TextField {...params} label=\"起站\" variant=\"outlined\" />\n              )}\n              getOptionLabel={option =>\n                option.StationName.Zh_tw + \" \" + option.StationName.En\n              }\n              getOptionSelected={(o, v) => o.StationUID === v.StationUID}\n            />\n          </FormField>\n        </Row>\n        <div className=\"row justify-content-center form-group\">\n          <Button variant=\"contained\" color=\"primary\" onClick={depArrSwitch}>\n            起迄站交換\n          </Button>\n        </div>\n        <Row>\n          <Label htmlFor=\"DestinationStation\">迄站</Label>\n          <FormField>\n            <Autocomplete\n              name=\"DestinationStation\"\n              id=\"DestinationStation\"\n              options={stations}\n              onChange={(e, v) => setArrival(v)}\n              value={arrival}\n              renderInput={params => (\n                <TextField {...params} label=\"迄站\" variant=\"outlined\" />\n              )}\n              getOptionLabel={option =>\n                option.StationName.Zh_tw + \" \" + option.StationName.En\n              }\n              getOptionSelected={(o, v) => o.StationUID === v.StationUID}\n            />\n          </FormField>\n        </Row>\n        <Row>\n          <Label htmlFor=\"DepartureTime\">最早出發</Label>\n          <FormField>\n            <TimeSelect\n              name=\"DepartureTime\"\n              id=\"DepartureTime\"\n              value={departureTime}\n              onChange={e => setDepartureTime(e.target.value)}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </FormField>\n        </Row>\n        <Row>\n          <Label htmlFor=\"ArriveTime\">最晚抵達</Label>\n          <FormField>\n            <TimeSelect\n              name=\"ArriveTime\"\n              id=\"ArriveTime\"\n              value={arriveTime}\n              onChange={e => setArriveTime(e.target.value)}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </FormField>\n        </Row>\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          onClick={handleSearch}\n          disabled={!departure || !arrival}\n        >\n          查詢\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default SearchForm;\n","import SearchPanel from \"./SearchPanel\";\n\nexport default SearchPanel;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}));\n\nconst TrainInfoDialog = ({ isOpen, toggle }) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      fullScreen\n      open={isOpen}\n      onClose={toggle}\n      TransitionComponent={Transition}\n    >\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={toggle}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Info\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div>\n        <p>content</p>\n        <p>content</p>\n        <p>content</p>\n        <p>content</p>\n        <p>content</p>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default TrainInfoDialog;\n","import TrainInfoDialog from \"./TrainInfoDialog\";\n\nexport default TrainInfoDialog;\n","import React from \"react\";\n\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\n\nimport useToggle from \"hooks/useToggle\";\nimport TrainInfoDialog from \"./components/TrainInfoDialog\";\n\nexport const NoResults = () => (\n  <TableRow>\n    <TableCell colSpan=\"4\">尚無資料</TableCell>\n  </TableRow>\n);\n\nconst Row = ({ detail }) => {\n  const [isOpen, toggle] = useToggle();\n\n  const TrainNo = detail.DailyTrainInfo.TrainNo;\n  const DepartureTime = detail.OriginStopTime.DepartureTime;\n  const ArrivalTime = detail.DestinationStopTime.ArrivalTime;\n\n  return (\n    <TableRow>\n      <TableCell className=\"text-info font-weight-bold\">{TrainNo}</TableCell>\n      <TableCell>{DepartureTime}</TableCell>\n      <TableCell>{ArrivalTime}</TableCell>\n      <TableCell>\n        <Button color=\"primary\" onClick={toggle}>\n          查看\n        </Button>\n        <TrainInfoDialog isOpen={isOpen} toggle={toggle} />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Row;\n","import Row, { NoResults } from \"./Row\";\n\nexport { NoResults };\nexport default Row;\n","import { useState, useCallback } from \"react\";\n\nexport default function useToggle(init = false) {\n  const [value, setValue] = useState(init);\n  const toggle = useCallback(() => setValue(!value), [value]);\n  return [value, toggle];\n}\n","import React, { useState } from \"react\";\nimport useSWR from \"swr\";\n\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/THSR\";\nimport { timesToMins } from \"utils\";\n\nimport Row, { NoResults } from \"./components/Row\";\nimport SortIcon from \"components/SortIcon\";\n\nconst TrainDetail = ({ departure, arrival, trainDate }) => {\n  const [sortBy, setSortBy] = useState();\n  const [order, setOrder] = useState();\n\n  const shouldFetch = departure.StationID && arrival.StationID && trainDate;\n\n  // GET 取得指定[日期],[起迄站間]之時刻表資料\n  const { data } = useSWR(\n    () =>\n      shouldFetch &&\n      `/v2/Rail/TRA/DailyTimetable/OD/${departure.StationID}/to/${arrival.StationID}/${trainDate}?format=JSON`,\n    fetcher,\n    swrConfig\n  );\n\n  const onClickDepartureSort = () => {\n    setSortBy(\"departure\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const onClickArrivalSort = () => {\n    setSortBy(\"arrival\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const trainDetails = data ? data : [];\n\n  const renderList = trainDetails.sort((a, b) => {\n    if (sortBy === \"departure\") {\n      const aDepTimeMins = timesToMins(a.OriginStopTime.DepartureTime);\n      const bDepTimeMins = timesToMins(b.OriginStopTime.DepartureTime);\n\n      return order === \"desc\"\n        ? bDepTimeMins - aDepTimeMins\n        : aDepTimeMins - bDepTimeMins;\n    } else if (sortBy === \"arrival\") {\n      const aArrTimeMins = timesToMins(a.DestinationStopTime.ArrivalTime);\n      const bArrTimeMins = timesToMins(b.DestinationStopTime.ArrivalTime);\n\n      return order === \"desc\"\n        ? bArrTimeMins - aArrTimeMins\n        : aArrTimeMins - bArrTimeMins;\n    } else {\n      return true;\n    }\n  });\n\n  return (\n    <div>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>車號</TableCell>\n            <TableCell onClick={onClickDepartureSort}>\n              <span>發車</span>\n              {sortBy === \"departure\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell onClick={onClickArrivalSort}>\n              <span>到達</span>\n              {sortBy === \"arrival\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell>詳細資訊</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {renderList.length > 0 ? (\n            renderList.map(detail => (\n              <Row key={detail.DailyTrainInfo.TrainNo} detail={detail} />\n            ))\n          ) : (\n            <NoResults />\n          )}\n        </TableBody>\n      </Table>\n      <footer className=\"fixed-bottom\">\n        <p>更新時間: {data?.[0]?.UpdateTime || \"---\"}</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default TrainDetail;\n","import TrainDetail from \"./TrainDetail\";\n\nexport default TrainDetail;\n","import React, { Suspense, useState } from \"react\";\nimport SearchPanel from \"./components/SearchPanel\";\nimport TrainDetail from \"./components/TrainDetail\";\n\nconst TRA = () => {\n  const [trainDate, setTrainDate] = useState(\"\");\n  const [departure, setDeparture] = useState(\"\");\n  const [arrival, setArrival] = useState(\"\");\n  const [departureTime, setDepartureTime] = useState(\"\");\n  const [arrivalTime, setArrivalTime] = useState(\"\");\n\n  const onSearch = ({\n    date,\n    departure,\n    arrival,\n    departureTime,\n    arriveTime\n  }) => {\n    setTrainDate(date);\n    setDeparture(departure);\n    setArrival(arrival);\n    setDepartureTime(departureTime);\n    setArrivalTime(arriveTime);\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>台鐵時刻查詢</h1>\n      </header>\n      <Suspense fallback={<div>Get stations...</div>}>\n        <SearchPanel onSearch={onSearch} />\n      </Suspense>\n      <Suspense fallback={<div>Get train details...</div>}>\n        <TrainDetail\n          departure={departure}\n          arrival={arrival}\n          trainDate={trainDate}\n        />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default TRA;\n","import TRA from \"./TRA\";\n\nexport default TRA;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport GoTop from \"./components/GoTop\";\nimport THSR from \"./components/THSR\";\nimport TRA from \"./components/TRA\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box pt={2}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nfunction App() {\n  const [transportation, setTransportation] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setTransportation(newValue);\n  };\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Tabs\n          value={transportation}\n          onChange={handleChange}\n          aria-label=\"App tabs\"\n        >\n          <Tab label=\"THSR\" {...a11yProps(0)} />\n          <Tab label=\"TRA\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={transportation} index={0}>\n        <THSR />\n      </TabPanel>\n      <TabPanel value={transportation} index={1}>\n        <TRA />\n      </TabPanel>\n      <GoTop />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}