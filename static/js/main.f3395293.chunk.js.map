{"version":3,"sources":["components/GoTop/GoTop.tsx","components/ErrorBoundary/index.js","components/ErrorBoundary/ErrorBoundary.jsx","apis/config.js","components/SortIcon/index.js","components/SortIcon/SortIcon.tsx","components/BottomFooter/BottomFooter.jsx","components/BottomFooter/index.js","components/THSR/components/TrainDetail/components/Row.jsx","components/THSR/components/TrainDetail/TrainDetail.tsx","components/THSR/components/TrainDetail/index.js","components/THSR/components/PrizeDetail/PrizeDetail.jsx","components/THSR/components/PrizeDetail/index.js","components/Select/Select.jsx","components/THSR/components/SearchPanel/index.js","components/THSR/components/SearchPanel/SearchPanel.jsx","components/THSR/THSR.jsx","components/THSR/index.js","utils.js","hooks/useGeoLocation.js","components/TRA/components/SearchPanel/components/TrainTypeSelect/TrainTypeSelect.jsx","components/TRA/components/SearchPanel/components/TrainTypeSelect/index.js","components/TRA/components/SearchPanel/SearchPanel.jsx","components/TRA/components/SearchPanel/index.js","hooks/useToggle.ts","components/TRA/context.js","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/DailyTimeTable/DailyTimeTable.jsx","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/DailyTimeTable/index.js","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/TrainTodayInfo/TrainTodayInfo.jsx","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/TrainTodayInfo/index.js","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/TrainInfoDialog.jsx","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/index.js","components/TRA/components/TrainDetail/components/Row/Row.jsx","components/TRA/components/TrainDetail/components/Row/index.js","components/TRA/components/TrainDetail/index.js","components/TRA/components/TrainDetail/TrainDetail.jsx","components/TRA/index.js","components/TRA/TRA.jsx","components/TabPanel/TabPanel.tsx","components/TabPanel/index.js","App.tsx","serviceWorker.js","index.tsx"],"names":["useStyles","makeStyles","theme","root","position","bottom","spacing","right","zIndex","ScrollTop","classes","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","onClick","anchor","document","querySelector","scrollIntoView","behavior","block","role","className","Fab","color","size","aria-label","ErrorBoundary","props","state","error","errorInfo","this","setState","fallback","style","whiteSpace","toString","componentStack","children","React","Component","fetcher","url","fetch","method","mode","headers","then","r","json","swrConfig","suspense","revalidateOnFocus","revalidateOnReconnect","refreshWhenOffline","refreshWhenHidden","refreshInterval","SortIcon","order","BottomFooter","styled","footer","NoResults","TableRow","TableCell","colSpan","Row","detail","trainDate","TrainNo","DailyTrainInfo","DepartureTime","OriginStopTime","ArrivalTime","DestinationStopTime","dTime","parseISO","aTime","Typography","differenceInMinutes","useState","TrainDetail","departure","arrival","departureTime","arrivalTime","sortBy","setSortBy","setOrder","shouldFetch","data","useSWR","depFilterTime","arrFilterTime","renderList","filter","d","depTime","arrTime","isAfter","isBefore","sort","a","b","aDepTime","bDepTime","compareDesc","compareAsc","aArrTime","bArrTime","updateTime","UpdateTime","Table","TableHead","TableBody","length","map","key","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","white","body","fontSize","PrizeDetail","prizeList","Fares","departureStation","OriginStationName","Zh_tw","En","arrivalStation","DestinationStationName","Box","mt","mb","align","variant","TableContainer","component","Paper","v","Price","TicketType","TimeSelect","Select","MenuItem","value","Selector","options","o","SearchPanel","onSearch","format","Date","now","date","setDate","setDeparture","setArrival","setDepartureTime","add","hours","setArriveTime","stations","val","StationID","StationName","my","Container","FormControl","margin","fullWidth","TextField","type","id","onChange","e","currentTarget","label","InputLabel","labelId","target","Button","width","disabled","ErrorFallBack","THSR","setTrainDate","setArrivalTime","paddingBottom","toRad","Math","PI","enableHighAccuracy","timeout","maximumAge","icon","checkedIcon","types","text","TrainTypeSelect","Autocomplete","multiple","disableCloseOnSelect","getOptionLabel","option","defaultValue","limitTags","renderOption","selected","Checkbox","marginRight","checked","renderInput","params","Option","trainType","setTrainType","location","setPosition","success","pos","coords","err","console","warn","code","message","useEffect","navigator","geolocation","getCurrentPosition","useGeoLocation","filteredData","closestStation","myLocation","closest","min","Number","MAX_SAFE_INTEGER","forEach","station","fromLat","latitude","fromLon","longitude","toLat","StationPosition","PositionLat","toLon","PositionLon","distance","acos","sin","cos","Boolean","getClosestStation","name","getOptionSelected","StationUID","getOptionDisabled","useToggle","init","setValue","toggle","useCallback","formContext","createContext","Station","isFirstStaion","isLastStation","useContext","Context","dotColor","undefined","stationName","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","DailyTimeTable","trainNo","stops","StopTimes","Timeline","i","tripLine","0","1","2","wheelChairFlag","packageServiceFlag","diningFlag","bikeFlag","breastFeedingFlag","dailyFlag","serviceAddedFlag","TrainTodayInfo","info","startStationName","StartingStationName","endStationName","EndingStationName","gutterBottom","TripLine","WheelchairFlag","PackageServiceFlag","DiningFlag","BikeFlag","BreastFeedingFlag","DailyFlag","ServiceAddedFlag","Note","TrainTypeName","Transition","forwardRef","ref","Slide","direction","appBar","title","marginLeft","flex","TrainInfoDialog","isOpen","Dialog","fullScreen","open","onClose","TransitionComponent","AppBar","Toolbar","IconButton","edge","DialogContent","trainTypeFilter","shouldFilterByTrainType","includes","TrainTypeCode","TRA","Provider","TabPanel","index","other","hidden","aria-labelledby","pt","useMemo","list","Lists","toggleDrawer","onItemClick","onKeyDown","List","ListItem","button","ListItemText","primary","App","tab","setTab","darkModeEnabled","toggleDarkMode","openDrawer","createMuiTheme","overrides","MuiSvgIcon","verticalAlign","ThemeProvider","CssBaseline","flexGrow","SwipeableDrawer","onOpen","item","GoTop","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f3395293.chunk.js","sourcesContent":["import * as React from 'react';\n\nimport Fab from '@material-ui/core/Fab';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Zoom from '@material-ui/core/Zoom';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(4),\n    right: theme.spacing(2),\n    zIndex: 1200\n  }\n}));\n\nfunction ScrollTop() {\n  const classes = useStyles();\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 100\n  });\n\n  const handleClick = () => {\n    const anchor = document.querySelector('#back-to-top-anchor');\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </div>\n    </Zoom>\n  );\n}\n\nexport default ScrollTop;\n","import ErrorBoundary from './ErrorBoundary';\n\nexport default ErrorBoundary;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n// import styled from 'styled-components';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          {this.props.fallback || <h2>Something went wrong.</h2>}\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","// API spec: https://ptx.transportdata.tw/MOTC?t=Rail&v=2#!/THSR/THSRApi_DailyTimetable\nconst API_BASE = 'https://ptx.transportdata.tw/MOTC';\n\nconst getFetchOptions = () => ({\n  method: 'GET',\n  mode: 'cors',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept-Encoding': 'gzip, deflate'\n  }\n});\n\nexport const fetcher = (url) =>\n  fetch(API_BASE + url, getFetchOptions()).then((r) => r.json());\n\nexport const swrConfig = {\n  suspense: true,\n  revalidateOnFocus: false,\n  revalidateOnReconnect: false,\n  refreshWhenOffline: false,\n  refreshWhenHidden: false,\n  refreshInterval: 0\n};\n","import SortIcon from './SortIcon';\n\nexport default SortIcon;\n","import * as React from 'react';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\ninterface Props {\n  order: 'desc' | 'asc';\n}\n\nconst SortIcon = ({ order }: Props) => {\n  return order === 'desc' ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />;\n};\n\nexport default SortIcon;\n","import styled from 'styled-components';\n\nconst BottomFooter = styled.footer`\n  width: 100vw;\n  position: fixed;\n  bottom: 0;\n  background-color: #424242;\n  color: #fff;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default BottomFooter;\n","import BottomFooter from './BottomFooter';\n\nexport default BottomFooter;\n","import React from 'react';\nimport { parseISO, differenceInMinutes } from 'date-fns';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\n\nexport const NoResults = () => (\n  <TableRow>\n    <TableCell colSpan=\"4\">尚無資料</TableCell>\n  </TableRow>\n);\n\nconst Row = ({ detail, trainDate }) => {\n  const TrainNo = detail.DailyTrainInfo.TrainNo;\n  const DepartureTime = detail.OriginStopTime.DepartureTime;\n  const ArrivalTime = detail.DestinationStopTime.ArrivalTime;\n  const dTime = parseISO(`${trainDate} ${DepartureTime}`);\n  const aTime = parseISO(`${trainDate} ${ArrivalTime}`);\n\n  return (\n    <TableRow>\n      <TableCell>\n        <Typography color=\"primary\">{TrainNo}</Typography>\n      </TableCell>\n      <TableCell>{DepartureTime}</TableCell>\n      <TableCell>{ArrivalTime}</TableCell>\n      <TableCell>{differenceInMinutes(aTime, dTime)} 分</TableCell>\n    </TableRow>\n  );\n};\n\nexport default Row;\n","import * as React from 'react';\nimport useSWR from 'swr';\nimport { parseISO, isBefore, isAfter, compareAsc, compareDesc } from 'date-fns';\n\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\n\nimport { swrConfig, fetcher } from 'apis/config';\nimport APIResponse from 'apis/api';\n\nimport SortIcon from 'components/SortIcon';\nimport BottomFooter from 'components/BottomFooter';\n\nimport Row, { NoResults } from './components/Row';\n\nconst { useState } = React;\n\ninterface Props {\n  departure: string;\n  arrival: string;\n  trainDate: string;\n  departureTime: string;\n  arrivalTime: string;\n}\n\ntype sortBy = 'departure' | 'arrival';\ntype order = 'desc' | 'asc';\n\nconst TrainDetail = ({\n  departure,\n  arrival,\n  trainDate,\n  departureTime,\n  arrivalTime\n}: Props) => {\n  const [sortBy, setSortBy] = useState<sortBy>('departure');\n  const [order, setOrder] = useState<order>('desc');\n\n  const shouldFetch = departure && arrival && trainDate;\n\n  // GET 取得指定[日期],[起迄站間]之時刻表資料\n  const { data } = useSWR<APIResponse[]>(\n    () =>\n      shouldFetch &&\n      `/v2/Rail/THSR/DailyTimetable/OD/${departure}/to/${arrival}/${trainDate}`,\n    fetcher,\n    swrConfig\n  );\n\n  const depFilterTime = parseISO(`${trainDate} ${departureTime}`);\n  const arrFilterTime = parseISO(`${trainDate} ${arrivalTime}`);\n\n  const trainDetails = data\n    ? data.filter((d) => {\n        const depTime = parseISO(\n          `${trainDate} ${d.OriginStopTime.DepartureTime}`\n        );\n        const arrTime = parseISO(\n          `${trainDate} ${d.DestinationStopTime.ArrivalTime}`\n        );\n        return (\n          isAfter(depTime, depFilterTime) && isBefore(arrTime, arrFilterTime)\n        );\n      })\n    : [];\n\n  const onClickDepartureSort = () => {\n    setSortBy('departure');\n    setOrder(order === 'desc' ? 'asc' : 'desc');\n  };\n\n  const onClickArrivalSort = () => {\n    setSortBy('arrival');\n    setOrder(order === 'desc' ? 'asc' : 'desc');\n  };\n\n  const renderList = trainDetails.sort((a, b) => {\n    if (sortBy === 'departure') {\n      const aDepTime = parseISO(\n        `${trainDate} ${a.OriginStopTime.DepartureTime}`\n      );\n      const bDepTime = parseISO(\n        `${trainDate} ${b.OriginStopTime.DepartureTime}`\n      );\n\n      return order === 'desc'\n        ? compareDesc(aDepTime, bDepTime)\n        : compareAsc(aDepTime, bDepTime);\n    } else {\n      const aArrTime = parseISO(\n        `${trainDate} ${a.DestinationStopTime.ArrivalTime}`\n      );\n      const bArrTime = parseISO(\n        `${trainDate} ${b.DestinationStopTime.ArrivalTime}`\n      );\n\n      return order === 'desc'\n        ? compareDesc(aArrTime, bArrTime)\n        : compareAsc(aArrTime, bArrTime);\n    }\n  });\n\n  const updateTime = data?.[0]?.UpdateTime || '---';\n\n  return (\n    <>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>車次</TableCell>\n            <TableCell onClick={onClickDepartureSort}>\n              發車\n              {sortBy === 'departure' ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell onClick={onClickArrivalSort}>\n              到達\n              {sortBy === 'arrival' ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell>總時程</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {renderList.length > 0 ? (\n            renderList.map((detail) => (\n              <Row\n                key={detail.DailyTrainInfo.TrainNo}\n                detail={detail}\n                trainDate={trainDate}\n              />\n            ))\n          ) : (\n            <NoResults />\n          )}\n        </TableBody>\n      </Table>\n      <BottomFooter>\n        <Typography>更新時間: {updateTime}</Typography>\n      </BottomFooter>\n    </>\n  );\n};\n\nexport default TrainDetail;\n","import TrainDetail from './TrainDetail';\n\nexport default TrainDetail;\n","import React from 'react';\nimport useSWR from 'swr';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport { fetcher, swrConfig } from 'apis/config';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nconst PrizeDetail = ({ departure, arrival }) => {\n  const shouldFetch = departure && arrival;\n\n  // GET 取得指定[起訖站間]之票價資料\n  const { data } = useSWR(\n    () => shouldFetch && `/v2/Rail/THSR/ODFare/${departure}/to/${arrival}`,\n    fetcher,\n    swrConfig\n  );\n\n  const prizeList = data?.[0]?.Fares || [];\n\n  if (prizeList.length < 1) return null;\n\n  const departureStation =\n    data[0].OriginStationName.Zh_tw + data[0].OriginStationName.En;\n  const arrivalStation =\n    data[0].DestinationStationName.Zh_tw + data[0].DestinationStationName.En;\n\n  return (\n    <Box mt={2}>\n      <Box mb={1}>\n        <Typography align=\"center\" variant=\"h4\">\n          票價資訊\n        </Typography>\n      </Box>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <StyledTableCell colSpan=\"3\">\n                {departureStation}&nbsp;\n                <ArrowRightAltIcon />\n                &nbsp;{arrivalStation}\n              </StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              {prizeList.map((v) => (\n                <TableCell key={v.Price}>\n                  {v.TicketType}: <strong>{v.Price}</strong> 元\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default PrizeDetail;\n","import PrizeDetail from './PrizeDetail';\n\nexport default PrizeDetail;\n","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nexport const TimeSelect = (props) => (\n  <Select {...props}>\n    <MenuItem value=\"06:00\">06:00</MenuItem>\n    <MenuItem value=\"07:00\">07:00</MenuItem>\n    <MenuItem value=\"08:00\">08:00</MenuItem>\n    <MenuItem value=\"09:00\">09:00</MenuItem>\n    <MenuItem value=\"10:00\">10:00</MenuItem>\n    <MenuItem value=\"11:00\">11:00</MenuItem>\n    <MenuItem value=\"12:00\">12:00</MenuItem>\n    <MenuItem value=\"13:00\">13:00</MenuItem>\n    <MenuItem value=\"14:00\">14:00</MenuItem>\n    <MenuItem value=\"15:00\">15:00</MenuItem>\n    <MenuItem value=\"16:00\">16:00</MenuItem>\n    <MenuItem value=\"17:00\">17:00</MenuItem>\n    <MenuItem value=\"18:00\">18:00</MenuItem>\n    <MenuItem value=\"19:00\">19:00</MenuItem>\n    <MenuItem value=\"20:00\">20:00</MenuItem>\n    <MenuItem value=\"21:00\">21:00</MenuItem>\n    <MenuItem value=\"22:00\">22:00</MenuItem>\n    <MenuItem value=\"23:00\">23:00</MenuItem>\n    <MenuItem value=\"24:00\">24:00</MenuItem>\n  </Select>\n);\n\nconst Selector = ({ options, ...props }) => {\n  return (\n    <Select {...props}>\n      {options.length > 0 ? (\n        options.map((o) => (\n          <MenuItem key={o.value} value={o.value}>\n            {o.Zh_tw + o.En}\n          </MenuItem>\n        ))\n      ) : (\n        <MenuItem value=\"\">無資料</MenuItem>\n      )}\n    </Select>\n  );\n};\n\nexport default Selector;\n","import SearchPanel from './SearchPanel';\n\nexport default SearchPanel;\n","import React, { useState } from 'react';\nimport useSWR from 'swr';\nimport { format, add } from 'date-fns';\n\nimport { TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\nimport Select, { TimeSelect } from 'components/Select';\nimport { swrConfig, fetcher } from 'apis/config';\n\nconst SearchPanel = ({ onSearch, className }) => {\n  const [date, setDate] = useState(format(Date.now(), 'yyyy-MM-dd'));\n  const [departure, setDeparture] = useState('1000'); // 台北\n  const [arrival, setArrival] = useState('1070'); // 左營\n  const [departureTime, setDepartureTime] = useState(\n    format(Date.now(), 'HH:00')\n  );\n  const [arrivalTime, setArriveTime] = useState(\n    format(add(Date.now(), { hours: 3 }), 'HH:00')\n  );\n\n  // GET 取得車站基本資料\n  const { data } = useSWR('/v2/Rail/THSR/Station', fetcher, swrConfig);\n\n  const stations = data\n    ? data.map((val) => ({\n        value: val.StationID,\n        ...val.StationName\n      }))\n    : [];\n\n  const depArrSwitch = () => {\n    setDeparture(arrival);\n    setArrival(departure);\n  };\n\n  const handleSearch = () =>\n    onSearch({\n      date,\n      departure,\n      arrival,\n      departureTime,\n      arrivalTime\n    });\n\n  return (\n    <Box my={2}>\n      <Paper>\n        <Container>\n          <FormControl margin=\"normal\" fullWidth>\n            <TextField\n              type=\"date\"\n              id=\"trip-start\"\n              value={date}\n              onChange={(e) => setDate(e.currentTarget.value)}\n              variant=\"outlined\"\n              label=\"日期\"\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <InputLabel id=\"OrginStation\">起站</InputLabel>\n            <Select\n              label=\"起站\"\n              labelId=\"OrginStation\"\n              options={stations}\n              value={departure}\n              onChange={(e) => setDeparture(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth>\n            <Button\n              style={{ width: 150, margin: '0 auto' }}\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={depArrSwitch}\n            >\n              起迄站交換\n            </Button>\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <InputLabel id=\"DestinationStation\">迄站</InputLabel>\n            <Select\n              label=\"迄站\"\n              labelId=\"DestinationStation\"\n              options={stations}\n              value={arrival}\n              onChange={(e) => setArrival(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <InputLabel id=\"DepartureTime\">最早出發</InputLabel>\n            <TimeSelect\n              label=\"最早出發\"\n              labelId=\"DepartureTime\"\n              value={departureTime}\n              onChange={(e) => setDepartureTime(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <InputLabel id=\"ArrivalTime\">最晚抵達</InputLabel>\n            <TimeSelect\n              label=\"最晚抵達\"\n              labelId=\"ArrivalTime\"\n              value={arrivalTime}\n              onChange={(e) => setArriveTime(e.target.value)}\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSearch}\n              disabled={!departure || !arrival}\n            >\n              查詢\n            </Button>\n          </FormControl>\n        </Container>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default SearchPanel;\n","import React, { useState, Suspense } from 'react';\nimport { Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n\nimport ErrorBoundary from 'components/ErrorBoundary';\nimport TrainDetail from './components/TrainDetail';\nimport PrizeDetail from './components/PrizeDetail';\nimport SearchPanel from './components/SearchPanel';\n\nconst ErrorFallBack = (\n  <Typography align=\"center\" variant=\"h6\" color=\"error\">\n    很抱歉，系統忙碌中\n  </Typography>\n);\n\nconst THSR = () => {\n  const [trainDate, setTrainDate] = useState('');\n  const [departure, setDeparture] = useState('');\n  const [arrival, setArrival] = useState('');\n  const [departureTime, setDepartureTime] = useState('');\n  const [arrivalTime, setArrivalTime] = useState('');\n\n  const searchClick = ({\n    date,\n    departure,\n    arrival,\n    departureTime,\n    arrivalTime\n  }) => {\n    setTrainDate(date);\n    setDeparture(departure);\n    setArrival(arrival);\n    setDepartureTime(departureTime);\n    setArrivalTime(arrivalTime);\n  };\n\n  return (\n    <Box paddingBottom={8}>\n      <Typography align=\"center\" variant=\"h3\">\n        高鐵時刻查詢\n      </Typography>\n      <Suspense fallback={<div>Get stations...</div>}>\n        <SearchPanel onSearch={searchClick} />\n      </Suspense>\n      <Suspense fallback={<div>Get train details...</div>}>\n        <TrainDetail\n          departure={departure}\n          arrival={arrival}\n          trainDate={trainDate}\n          departureTime={departureTime}\n          arrivalTime={arrivalTime}\n        />\n      </Suspense>\n      <ErrorBoundary fallback={ErrorFallBack}>\n        <Suspense fallback={<div>Get prize detail...</div>}>\n          <PrizeDetail departure={departure} arrival={arrival} />\n        </Suspense>\n      </ErrorBoundary>\n    </Box>\n  );\n};\n\nexport default THSR;\n","import THSR from './THSR';\n\nexport default THSR;\n","const toRad = (value) => (value * Math.PI) / 180;\n\nconst robustAcos = (value) => {\n  if (value > 1) {\n    return 1;\n  }\n  if (value < -1) {\n    return -1;\n  }\n\n  return value;\n};\n\nexport const getClosestStation = (myLocation, stations) => {\n  let closest = null;\n  let min = Number.MAX_SAFE_INTEGER;\n\n  if (!myLocation || myLocation.error || !stations.length) return null;\n\n  stations.forEach((station) => {\n    const earthRadius = 6378137;\n    const fromLat = myLocation.latitude;\n    const fromLon = myLocation.longitude;\n    const toLat = station.StationPosition.PositionLat;\n    const toLon = station.StationPosition.PositionLon;\n\n    const distance =\n      Math.acos(\n        robustAcos(\n          Math.sin(toRad(toLat)) * Math.sin(toRad(fromLat)) +\n            Math.cos(toRad(toLat)) *\n              Math.cos(toRad(fromLat)) *\n              Math.cos(toRad(fromLon) - toRad(toLon))\n        )\n      ) * earthRadius;\n\n    if (distance < min) {\n      min = distance;\n      closest = station;\n    }\n  });\n\n  return {\n    ...closest,\n    StationName: {\n      Zh_tw: `最近的車站: ${closest.StationName.Zh_tw}`,\n      En: ''\n    },\n    icon: true,\n    disabled: Boolean(myLocation?.error)\n  };\n};\n","import { useState, useEffect } from 'react';\n\nconst options = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 0\n};\n\nexport default function useGeoLocation() {\n  const [position, setPosition] = useState(null);\n\n  function success(pos) {\n    setPosition(pos.coords);\n  }\n\n  function error(err) {\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n    setPosition({ error: err });\n  }\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(success, error, options);\n    } else {\n      setPosition({ error: \"You device don't support geolocation api\" });\n    }\n  }, []);\n\n  return position;\n}\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst types = [\n  { text: '不限', value: '0' },\n  { text: '太魯閣', value: '1' },\n  { text: '普悠瑪', value: '2' },\n  { text: '自強', value: '3' },\n  { text: '莒光', value: '4' },\n  { text: '復興', value: '5' },\n  { text: '區間', value: '6' },\n  { text: '普快', value: '7' }\n];\n\nconst TrainTypeSelect = (props) => {\n  return (\n    <Autocomplete\n      multiple\n      options={types}\n      disableCloseOnSelect\n      getOptionLabel={(option) => option.text}\n      defaultValue={[types[0]]}\n      limitTags={2}\n      renderOption={(option, { selected }) => (\n        <>\n          <Checkbox\n            icon={icon}\n            checkedIcon={checkedIcon}\n            style={{ marginRight: 8 }}\n            checked={selected}\n          />\n          {option.text}\n        </>\n      )}\n      renderInput={(params) => (\n        <TextField {...params} variant=\"outlined\" label=\"列車種類\" />\n      )}\n      {...props}\n    />\n  );\n};\n\nexport default TrainTypeSelect;\n","import TrainTypeSelect from './TrainTypeSelect';\n\nexport default TrainTypeSelect;\n","import React, { useState } from 'react';\nimport useSWR from 'swr';\nimport { format, add } from 'date-fns';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\nimport { TimeSelect } from 'components/Select';\nimport { swrConfig, fetcher } from 'apis/config';\nimport { getClosestStation } from 'utils';\nimport useGeoLocation from 'hooks/useGeoLocation';\n\nimport TrainTypeSelect from './components/TrainTypeSelect';\n\nconst Option = (option) => {\n  return (\n    <>\n      {option.icon && (\n        <LocationOnIcon color=\"primary\" style={{ marginRight: 8 }} />\n      )}\n      {option.StationName.Zh_tw + ' ' + option.StationName.En}\n    </>\n  );\n};\n\nconst SearchPanel = ({ onSearch }) => {\n  const [date, setDate] = useState(format(Date.now(), 'yyyy-MM-dd'));\n  const [departure, setDeparture] = useState(null);\n  const [arrival, setArrival] = useState(null);\n  const [departureTime, setDepartureTime] = useState(\n    format(Date.now(), 'HH:00')\n  );\n  const [arrivalTime, setArriveTime] = useState(\n    format(add(Date.now(), { hours: 3 }), 'HH:00')\n  );\n  const [trainType, setTrainType] = useState([{ text: '不限', value: '0' }]);\n  const location = useGeoLocation();\n\n  // GET 取得車站基本資料\n  const { data } = useSWR(\n    '/v2/Rail/TRA/Station?$top=500&$format=JSON',\n    fetcher,\n    swrConfig\n  );\n\n  // 過濾掉 台北-環島站\n  const filteredData = data ? data.filter((v) => v.StationID !== '1001') : [];\n\n  const closestStation = getClosestStation(location, filteredData);\n\n  const stations = filteredData\n    ? [closestStation, ...filteredData].filter((v) => v !== null)\n    : [];\n\n  const depArrSwitch = () => {\n    setDeparture(arrival);\n    setArrival(departure);\n  };\n\n  const handleSearch = () =>\n    onSearch({\n      date,\n      departure,\n      arrival,\n      departureTime,\n      arrivalTime,\n      trainType\n    });\n\n  return (\n    <Box my={2}>\n      <Paper>\n        <Container>\n          <FormControl margin=\"normal\" fullWidth>\n            <TextField\n              type=\"date\"\n              id=\"trip-start\"\n              value={date}\n              onChange={(e) => setDate(e.currentTarget.value)}\n              variant=\"outlined\"\n              label=\"日期\"\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <Autocomplete\n              name=\"OrginStation\"\n              id=\"OrginStation\"\n              options={stations}\n              onChange={(e, v) => setDeparture(v)}\n              value={departure}\n              renderInput={(params) => (\n                <TextField {...params} label=\"起站\" variant=\"outlined\" />\n              )}\n              renderOption={Option}\n              getOptionLabel={({ StationName }) =>\n                StationName.Zh_tw + ' ' + StationName.En\n              }\n              getOptionSelected={(o, v) => o.StationUID === v.StationUID}\n              getOptionDisabled={(o) => o.disabled}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth>\n            <Button\n              style={{ width: 150, margin: '0 auto' }}\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={depArrSwitch}\n            >\n              起迄站交換\n            </Button>\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <Autocomplete\n              name=\"DestinationStation\"\n              id=\"DestinationStation\"\n              options={stations}\n              onChange={(e, v) => setArrival(v)}\n              value={arrival}\n              renderInput={(params) => (\n                <TextField {...params} label=\"迄站\" variant=\"outlined\" />\n              )}\n              renderOption={Option}\n              getOptionLabel={(option) =>\n                option.StationName.Zh_tw + ' ' + option.StationName.En\n              }\n              getOptionSelected={(o, v) => o.StationUID === v.StationUID}\n              getOptionDisabled={(o) => o.disabled}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <InputLabel id=\"DepartureTime\">最早出發</InputLabel>\n            <TimeSelect\n              label=\"最早出發\"\n              labelId=\"DepartureTime\"\n              value={departureTime}\n              onChange={(e) => setDepartureTime(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <InputLabel id=\"ArrivalTime\">最晚抵達</InputLabel>\n            <TimeSelect\n              label=\"最晚抵達\"\n              labelId=\"ArrivalTime\"\n              value={arrivalTime}\n              onChange={(e) => setArriveTime(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <TrainTypeSelect\n              name=\"trainType\"\n              id=\"trainType\"\n              onChange={(e, v) => setTrainType(v)}\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n              onClick={handleSearch}\n              disabled={!departure || !arrival || trainType.length < 1}\n            >\n              查詢\n            </Button>\n          </FormControl>\n        </Container>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default SearchPanel;\n","import SearchPanel from './SearchPanel';\n\nexport default SearchPanel;\n","import { useState, useCallback } from 'react';\n\nconst useToggle = (init: boolean = false): [boolean, () => void] => {\n  const [value, setValue] = useState(init);\n  const toggle = useCallback(() => setValue(!value), [value]);\n  return [value, toggle];\n};\n\nexport default useToggle;\n","import React from 'react';\n\nconst formContext = React.createContext({\n  trainDate: '',\n  departure: '',\n  arrival: '',\n  departureTime: '',\n  arrivalTime: ''\n});\n\nexport default formContext;\n","import React, { useContext } from 'react';\nimport useSWR from 'swr';\n\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport { swrConfig, fetcher } from 'apis/config';\nimport Context from 'components/TRA/context';\n\nconst Station = ({ station, isFirstStaion, isLastStation }) => {\n  const { departure, arrival } = useContext(Context);\n  const isTargetStation =\n    station.StationID === departure.StationID ||\n    station.StationID === arrival.StationID;\n\n  const dotColor = isTargetStation\n    ? 'secondary'\n    : isFirstStaion || isLastStation\n    ? 'primary'\n    : undefined;\n\n  const stationName = `${station.StationName.Zh_tw} ${station.StationName.En}`;\n\n  return (\n    <TimelineItem>\n      <TimelineOppositeContent>\n        <Typography color=\"textSecondary\">{station.ArrivalTime}</Typography>\n      </TimelineOppositeContent>\n      <TimelineSeparator>\n        <TimelineDot color={dotColor} />\n        <TimelineConnector />\n      </TimelineSeparator>\n      <TimelineContent>\n        <Typography>{stationName}</Typography>\n      </TimelineContent>\n    </TimelineItem>\n  );\n};\n\nconst DailyTimeTable = ({ trainNo }) => {\n  // GET 取得當天指定[車次]的時刻表資料\n  const { data } = useSWR(\n    () => trainNo && `/v2/Rail/TRA/DailyTimetable/Today/TrainNo/${trainNo}`,\n    fetcher,\n    swrConfig\n  );\n\n  const stops = data ? data[0].StopTimes : [];\n\n  return (\n    <Timeline align=\"right\">\n      {stops.map((v, i) => (\n        <Station\n          key={v.StationID}\n          station={v}\n          isFirstStaion={i === 0}\n          isLastStation={i === stops.length - 1}\n        />\n      ))}\n    </Timeline>\n  );\n};\n\nexport default DailyTimeTable;\n","import DailyTimeTable from './DailyTimeTable';\n\nexport default DailyTimeTable;\n","import React from 'react';\nimport useSWR from 'swr';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nimport { swrConfig, fetcher } from 'apis/config';\n\nconst tripLine = {\n  0: '不經山海線',\n  1: '山線',\n  2: '海線'\n};\n\nconst wheelChairFlag = {\n  0: '否',\n  1: '是'\n};\n\nconst packageServiceFlag = {\n  0: '否',\n  1: '是'\n};\n\nconst diningFlag = {\n  0: '否',\n  1: '是'\n};\n\nconst bikeFlag = {\n  0: '否',\n  1: '是'\n};\n\nconst breastFeedingFlag = {\n  0: '否',\n  1: '是'\n};\n\nconst dailyFlag = {\n  0: '否',\n  1: '是'\n};\n\nconst serviceAddedFlag = {\n  0: '否',\n  1: '是'\n};\n\nconst TrainTodayInfo = ({ trainNo }) => {\n  // GET 取得當天指定[車次]的車次資料\n  const { data } = useSWR(\n    () => trainNo && `/v2/Rail/TRA/DailyTrainInfo/Today/TrainNo/${trainNo}`,\n    fetcher,\n    swrConfig\n  );\n\n  if (!data) return null;\n\n  const info = data[0];\n  const startStationName = `${info.StartingStationName.Zh_tw} ${info.StartingStationName.En}`;\n  const endStationName = `${info.EndingStationName.Zh_tw} ${info.EndingStationName.En}`;\n\n  return (\n    <Box my={2}>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>起站: </strong>\n        {startStationName}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>訖站: </strong>\n        {endStationName}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>山海線類型: </strong>\n        {tripLine[info.TripLine]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否設身障旅客專用座位車: </strong>\n        {wheelChairFlag[info.WheelchairFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否提供行李服務: </strong>\n        {packageServiceFlag[info.PackageServiceFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否提供訂便當服務: </strong>\n        {diningFlag[info.DiningFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否人車同行班次(置於攜車袋之自行車各級列車均可乘車): </strong>\n        {bikeFlag[info.BikeFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否設有哺(集)乳室車廂: </strong>\n        {breastFeedingFlag[info.BreastFeedingFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否每日行駛: </strong>\n        {dailyFlag[info.DailyFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否為加班車: </strong>\n        {serviceAddedFlag[info.ServiceAddedFlag]}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        <strong>其他: </strong>\n        {info.Note.Zh_tw} {info.TrainTypeName.Zh_tw}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default TrainTodayInfo;\n","import TrainTodayInfo from './TrainTodayInfo';\n\nexport default TrainTodayInfo;\n","import React, { Suspense } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport DailyTimeTable from './components/DailyTimeTable';\nimport TrainTodayInfo from './components/TrainTodayInfo';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'static'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}));\n\nconst TrainInfoDialog = ({ isOpen, toggle, trainNo }) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      fullScreen\n      open={isOpen}\n      onClose={toggle}\n      TransitionComponent={Transition}\n    >\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={toggle}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            車號 - {trainNo}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <DialogContent>\n        <Suspense fallback={<div>Get train today info...</div>}>\n          <TrainTodayInfo trainNo={isOpen && trainNo} />\n        </Suspense>\n        <Suspense fallback={<div>Get train time table...</div>}>\n          <DailyTimeTable trainNo={isOpen && trainNo} />\n        </Suspense>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default TrainInfoDialog;\n","import TrainInfoDialog from './TrainInfoDialog';\n\nexport default TrainInfoDialog;\n","import React from 'react';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport useToggle from 'hooks/useToggle';\nimport TrainInfoDialog from './components/TrainInfoDialog';\n\nexport const NoResults = () => (\n  <TableRow>\n    <TableCell colSpan=\"4\">尚無資料</TableCell>\n  </TableRow>\n);\n\nconst Row = ({ detail }) => {\n  const [isOpen, toggle] = useToggle();\n\n  const TrainNo = detail.DailyTrainInfo.TrainNo;\n  const DepartureTime = detail.OriginStopTime.DepartureTime;\n  const ArrivalTime = detail.DestinationStopTime.ArrivalTime;\n\n  return (\n    <TableRow>\n      <TableCell>\n        <Typography color=\"primary\">{TrainNo}</Typography>\n      </TableCell>\n      <TableCell>{DepartureTime}</TableCell>\n      <TableCell>{ArrivalTime}</TableCell>\n      <TableCell>\n        <Button color=\"primary\" onClick={toggle}>\n          查看\n        </Button>\n        <TrainInfoDialog trainNo={TrainNo} isOpen={isOpen} toggle={toggle} />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Row;\n","import Row, { NoResults } from './Row';\n\nexport { NoResults };\nexport default Row;\n","import TrainDetail from './TrainDetail';\n\nexport default TrainDetail;\n","import React, { useState } from 'react';\nimport useSWR from 'swr';\nimport { parseISO, isBefore, isAfter, compareAsc, compareDesc } from 'date-fns';\n\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\n\nimport { swrConfig, fetcher } from 'apis/config';\n\nimport SortIcon from 'components/SortIcon';\nimport BottomFooter from 'components/BottomFooter';\nimport Row, { NoResults } from './components/Row';\n\nconst TrainDetail = ({\n  departure,\n  arrival,\n  trainDate,\n  departureTime,\n  arrivalTime,\n  trainType\n}) => {\n  const [sortBy, setSortBy] = useState();\n  const [order, setOrder] = useState();\n\n  const shouldFetch = departure.StationID && arrival.StationID && trainDate;\n\n  // GET 取得指定[日期],[起迄站間]之時刻表資料\n  const { data } = useSWR(\n    () =>\n      shouldFetch &&\n      `/v2/Rail/TRA/DailyTimetable/OD/${departure.StationID}/to/${arrival.StationID}/${trainDate}?format=JSON`,\n    fetcher,\n    swrConfig\n  );\n\n  const depFilterTime = parseISO(`${trainDate} ${departureTime}`);\n  const arrFilterTime = parseISO(`${trainDate} ${arrivalTime}`);\n\n  const onClickDepartureSort = () => {\n    setSortBy('departure');\n    setOrder(order === 'desc' ? 'asc' : 'desc');\n  };\n\n  const onClickArrivalSort = () => {\n    setSortBy('arrival');\n    setOrder(order === 'desc' ? 'asc' : 'desc');\n  };\n\n  const trainTypeFilter = trainType.map((v) => v.value);\n  const shouldFilterByTrainType = !trainTypeFilter.includes('0');\n\n  const trainDetails = data\n    ? data\n        .filter((d) => {\n          const depTime = parseISO(\n            `${trainDate} ${d.OriginStopTime.DepartureTime}`\n          );\n          const arrTime = parseISO(\n            `${trainDate} ${d.DestinationStopTime.ArrivalTime}`\n          );\n          return (\n            isAfter(depTime, depFilterTime) && isBefore(arrTime, arrFilterTime)\n          );\n        })\n        .filter((d) => {\n          if (!shouldFilterByTrainType) return true;\n          return trainTypeFilter.includes(d.DailyTrainInfo.TrainTypeCode);\n        })\n    : [];\n\n  const renderList = trainDetails.sort((a, b) => {\n    if (sortBy === 'departure') {\n      const aDepTime = parseISO(\n        `${trainDate} ${a.OriginStopTime.DepartureTime}`\n      );\n      const bDepTime = parseISO(\n        `${trainDate} ${b.OriginStopTime.DepartureTime}`\n      );\n\n      return order === 'desc'\n        ? compareDesc(aDepTime, bDepTime)\n        : compareAsc(aDepTime, bDepTime);\n    } else if (sortBy === 'arrival') {\n      const aArrTime = parseISO(\n        `${trainDate} ${a.DestinationStopTime.ArrivalTime}`\n      );\n      const bArrTime = parseISO(\n        `${trainDate} ${b.DestinationStopTime.ArrivalTime}`\n      );\n\n      return order === 'desc'\n        ? compareDesc(aArrTime, bArrTime)\n        : compareAsc(aArrTime, bArrTime);\n    } else {\n      return true;\n    }\n  });\n\n  return (\n    <>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>車號</TableCell>\n            <TableCell onClick={onClickDepartureSort}>\n              發車\n              {sortBy === 'departure' ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell onClick={onClickArrivalSort}>\n              到達\n              {sortBy === 'arrival' ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell>詳細資訊</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {renderList.length > 0 ? (\n            renderList.map((detail) => (\n              <Row key={detail.DailyTrainInfo.TrainNo} detail={detail} />\n            ))\n          ) : (\n            <NoResults />\n          )}\n        </TableBody>\n      </Table>\n      <BottomFooter>\n        <Typography>更新時間: {data?.[0]?.UpdateTime || '---'}</Typography>\n      </BottomFooter>\n    </>\n  );\n};\n\nexport default TrainDetail;\n","import TRA from './TRA';\n\nexport default TRA;\n","import React, { Suspense, useState } from 'react';\nimport { Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\n\nimport SearchPanel from './components/SearchPanel';\nimport TrainDetail from './components/TrainDetail';\nimport Context from './context';\n\nconst TRA = () => {\n  const [trainDate, setTrainDate] = useState('');\n  const [departure, setDeparture] = useState('');\n  const [arrival, setArrival] = useState('');\n  const [departureTime, setDepartureTime] = useState('');\n  const [arrivalTime, setArrivalTime] = useState('');\n  const [trainType, setTrainType] = useState([]);\n\n  const onSearch = ({\n    date,\n    departure,\n    arrival,\n    departureTime,\n    arrivalTime,\n    trainType\n  }) => {\n    setTrainDate(date);\n    setDeparture(departure);\n    setArrival(arrival);\n    setDepartureTime(departureTime);\n    setArrivalTime(arrivalTime);\n    setTrainType(trainType);\n  };\n\n  return (\n    <Box paddingBottom={8}>\n      <Typography align=\"center\" variant=\"h3\">\n        台鐵時刻查詢\n      </Typography>\n      <Suspense fallback={<div>Get stations...</div>}>\n        <SearchPanel onSearch={onSearch} />\n      </Suspense>\n      <Context.Provider value={{ trainDate, departure, arrival }}>\n        <Suspense fallback={<div>Get train details...</div>}>\n          <TrainDetail\n            departure={departure}\n            arrival={arrival}\n            trainDate={trainDate}\n            departureTime={departureTime}\n            arrivalTime={arrivalTime}\n            trainType={trainType}\n          />\n        </Suspense>\n      </Context.Provider>\n    </Box>\n  );\n};\n\nexport default TRA;\n","import * as React from 'react';\nimport Box from '@material-ui/core/Box';\n\ninterface Props {\n  value: number;\n  index: number;\n  children: any;\n}\n\nfunction TabPanel({ children, value, index, ...other }: Props) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box pt={2}>{children}</Box>}\n    </div>\n  );\n}\n\nexport default TabPanel;\n","import TabPanel from './TabPanel';\n\nexport default TabPanel;\n","import * as React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport {\n  createMuiTheme,\n  makeStyles,\n  ThemeProvider\n} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport GoTop from './components/GoTop';\nimport THSR from './components/THSR';\nimport TRA from './components/TRA';\nimport TabPanel from './components/TabPanel';\n\nimport useToggle from './hooks/useToggle';\n\nconst { useState, useMemo } = React;\n\nconst useStyles = makeStyles({\n  list: {\n    width: 150\n  }\n});\n\ninterface Props {\n  toggleDrawer: () => void;\n  onItemClick: (index: number) => void;\n}\n\nconst Lists = ({ toggleDrawer, onItemClick }: Props) => {\n  const classes = useStyles();\n  return (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={() => toggleDrawer()}\n      onKeyDown={() => toggleDrawer()}\n    >\n      <List>\n        <ListItem button onClick={() => onItemClick(0)}>\n          <ListItemText primary=\"THSR\" />\n        </ListItem>\n        <ListItem button onClick={() => onItemClick(1)}>\n          <ListItemText primary=\"TRA\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nfunction App() {\n  const [tab, setTab] = useState(0);\n  const [darkModeEnabled, toggleDarkMode] = useToggle();\n  const [openDrawer, toggleDrawer] = useToggle();\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: darkModeEnabled ? 'dark' : 'light'\n        },\n        overrides: {\n          MuiSvgIcon: {\n            root: {\n              verticalAlign: 'middle'\n            }\n          }\n        }\n      }),\n    [darkModeEnabled]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position=\"static\" id=\"back-to-top-anchor\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer}\n          >\n            <MenuIcon />\n          </IconButton>\n          <div style={{ flexGrow: 1 }} />\n          <IconButton\n            aria-label=\"switchDarkMode\"\n            onClick={toggleDarkMode}\n            color=\"inherit\"\n          >\n            {darkModeEnabled ? <Brightness7Icon /> : <Brightness4Icon />}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <SwipeableDrawer\n        anchor=\"left\"\n        open={openDrawer}\n        onClose={toggleDrawer}\n        onOpen={toggleDrawer}\n      >\n        <Lists\n          toggleDrawer={toggleDrawer}\n          onItemClick={(item) => setTab(item)}\n        />\n      </SwipeableDrawer>\n      <TabPanel value={tab} index={0}>\n        <THSR />\n      </TabPanel>\n      <TabPanel value={tab} index={1}>\n        <TRA />\n      </TabPanel>\n      <GoTop />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}