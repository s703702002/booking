{"version":3,"sources":["components/GoTop.jsx","apis/config.js","apis/THSR.js","utils.js","components/SortIcon/SortIcon.jsx","components/SortIcon/index.js","components/THSR/components/TrainDetail/components/Row.jsx","components/THSR/components/TrainDetail/TrainDetail.jsx","components/THSR/components/TrainDetail/index.js","components/THSR/components/PrizeDetail/PrizeDetail.jsx","components/THSR/components/PrizeDetail/index.js","components/Grid.jsx","components/Select.jsx","components/THSR/components/SearchPanel/SearchPanel.jsx","components/THSR/components/SearchPanel/index.js","components/THSR/THSR.jsx","components/THSR/index.js","apis/TRA.js","components/TRA/components/SearchPanel/SearchPanel.jsx","components/TRA/components/SearchPanel/index.js","components/TRA/context.js","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/DailyTimeTable/DailyTimeTable.jsx","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/DailyTimeTable/index.js","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/TrainTodayInfo/TrainTodayInfo.jsx","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/TrainTodayInfo/index.js","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/TrainInfoDialog.jsx","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/index.js","components/TRA/components/TrainDetail/components/Row/Row.jsx","components/TRA/components/TrainDetail/components/Row/index.js","hooks/useToggle.js","components/TRA/components/TrainDetail/TrainDetail.jsx","components/TRA/components/TrainDetail/index.js","components/TRA/TRA.jsx","components/TRA/index.js","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","bottom","spacing","right","zIndex","ScrollTop","classes","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","onClick","event","anchor","target","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","className","Fab","color","size","aria-label","swrConfig","suspense","revalidateOnFocus","revalidateOnReconnect","refreshWhenOffline","refreshWhenHidden","refreshInterval","fetcher","url","fetch","method","mode","headers","then","r","json","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","timesToMins","times","arr","split","parseInt","prefixZero","str","getDefaultHour","dep","getHours","toString","defaultDepTime","defaultArrTime","SortIcon","order","NoResults","colSpan","Row","detail","TrainNo","DailyTrainInfo","DepartureTime","OriginStopTime","ArrivalTime","DestinationStopTime","Dmins","Amins","mins","h","minsToTimes","StyledTable","styled","table","StyledTh","th","props","pointer","TrainDetail","departure","arrival","trainDate","departureTime","arrivalTime","useState","sortBy","setSortBy","setOrder","shouldFetch","data","useSWR","depFilterTime","arrFilterTime","trainDetails","filter","depTime","arrTime","renderList","sort","a","b","aDepTimeMins","bDepTimeMins","aArrTimeMins","bArrTimeMins","map","key","UpdateTime","PrizeDetail","prizeList","Fares","departureStation","OriginStationName","Zh_tw","En","arrivalStation","DestinationStationName","v","Price","TicketType","children","Label","htmlFor","FormField","React","memo","Selector","forwardRef","ref","options","e","value","StyledSelect","withStyles","textAlign","Select","TimeSelect","MenuItem","StyledSeachForm","SearchPanel","onSearch","now","setDate","setDeparture","setArrival","setDepartureTime","setArriveTime","stations","val","StationID","StationName","type","id","onChange","currentTarget","name","THSR","setTrainDate","setArrivalTime","fallback","Container","div","SearchForm","TextField","fullWidth","variant","Autocomplete","renderInput","params","label","getOptionLabel","option","getOptionSelected","o","StationUID","Button","disabled","formContext","createContext","Station","station","isFirstStaion","isLastStation","useContext","Context","dotColor","undefined","stationName","TimelineItem","TimelineOppositeContent","Typography","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","DailyTimeTable","trainNo","stops","StopTimes","Timeline","align","i","tripLine","0","1","2","wheelChairFlag","packageServiceFlag","diningFlag","bikeFlag","breastFeedingFlag","dailyFlag","serviceAddedFlag","TrainTodayInfo","info","startStationName","StartingStationName","endStationName","EndingStationName","Box","my","gutterBottom","TripLine","WheelchairFlag","PackageServiceFlag","DiningFlag","BikeFlag","BreastFeedingFlag","DailyFlag","ServiceAddedFlag","Note","TrainTypeName","Transition","Slide","direction","appBar","title","marginLeft","flex","TrainInfoDialog","isOpen","toggle","Dialog","fullScreen","open","onClose","TransitionComponent","AppBar","Toolbar","IconButton","edge","DialogContent","TableRow","TableCell","init","setValue","useCallback","useToggle","Table","TableHead","TableBody","TRA","Provider","TabPanel","index","other","hidden","aria-labelledby","pt","a11yProps","App","transportation","setTransportation","Tabs","newValue","Tab","GoTop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bdc9340a.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Fab from \"@material-ui/core/Fab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 1200\n  }\n}));\n\nfunction ScrollTop() {\n  const classes = useStyles();\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 100\n  });\n\n  const handleClick = event => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </div>\n    </Zoom>\n  );\n}\n\nexport default ScrollTop;\n","export default function getFetchOptions() {\n  return {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept-Encoding\": \"gzip, deflate\"\n    }\n  };\n}\n\nexport const swrConfig = {\n  suspense: true,\n  revalidateOnFocus: false,\n  revalidateOnReconnect: false,\n  refreshWhenOffline: false,\n  refreshWhenHidden: false,\n  refreshInterval: 0\n};\n","import getFetchOptions from \"./config\";\n\n// API spec: https://ptx.transportdata.tw/MOTC?t=Rail&v=2#!/THSR/THSRApi_DailyTimetable\nconst API_BASE = \"https://ptx.transportdata.tw/MOTC\";\n\nexport const fetcher = url =>\n  fetch(API_BASE + url, getFetchOptions()).then(r => r.json());\n","export function formatDate(date) {\n  let d = new Date(date),\n    month = \"\" + (d.getMonth() + 1),\n    day = \"\" + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = \"0\" + month;\n  if (day.length < 2) day = \"0\" + day;\n\n  return [year, month, day].join(\"-\");\n}\n\nexport function timesToMins(times) {\n  const arr = times.split(\":\");\n  return parseInt(arr[0], 10) * 60 + parseInt(arr[1], 10);\n}\n\nfunction prefixZero(str) {\n  return str.length < 2 ? \"0\" + str : str;\n}\n\nexport function minsToTimes(mins) {\n  let h = 0;\n  while (mins >= 60) {\n    mins -= 60;\n    h += 1;\n  }\n  h = prefixZero(h.toString());\n  mins = prefixZero(mins.toString());\n  return h + \":\" + mins;\n}\n\nexport function getDefaultHour() {\n  let dep = new Date().getHours() + 1;\n  let arr = dep + 3;\n  dep = prefixZero(dep.toString()) + \":00\";\n  arr = prefixZero(arr.toString()) + \":00\";\n  return {\n    defaultDepTime: dep,\n    defaultArrTime: arr\n  };\n}\n","import React from \"react\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\n\nconst SortIcon = ({ order }) => {\n  return order === \"desc\" ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />;\n};\n\nexport default SortIcon;\n","import SortIcon from \"./SortIcon\";\n\nexport default SortIcon;\n","import React from \"react\";\nimport { minsToTimes, timesToMins } from \"utils\";\n\nexport const NoResults = () => (\n  <tr>\n    <td colSpan=\"4\">尚無資料</td>\n  </tr>\n);\n\nconst Row = ({ detail }) => {\n  const TrainNo = detail.DailyTrainInfo.TrainNo;\n  const DepartureTime = detail.OriginStopTime.DepartureTime;\n  const ArrivalTime = detail.DestinationStopTime.ArrivalTime;\n  const Dmins = timesToMins(DepartureTime);\n  const Amins = timesToMins(ArrivalTime);\n\n  return (\n    <tr>\n      <td className=\"text-info font-weight-bold\">{TrainNo}</td>\n      <td>{DepartureTime}</td>\n      <td>{ArrivalTime}</td>\n      <td>{minsToTimes(Amins - Dmins)}</td>\n    </tr>\n  );\n};\n\nexport default Row;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\n\nimport { fetcher } from \"apis/THSR\";\nimport { timesToMins } from \"utils\";\nimport SortIcon from \"components/SortIcon\";\n\nimport Row, { NoResults } from \"./components/Row\";\n\nconst StyledTable = styled.table`\n  width: 100%;\n  box-shadow: 0px 3px 10px #ddd;\n  thead {\n    background-color: #eee;\n  }\n  td {\n    padding: 0.3em;\n    vertical-align: middle;\n  }\n  tr:nth-child(even) {\n    background-color: #eee;\n  }\n`;\n\nconst StyledTh = styled.th`\n  padding: 0.3em;\n  vertical-align: middle;\n  font-weight: bold;\n  cursor: ${props => (props.pointer ? \"pointer\" : \"initial\")};\n  > span {\n    display: inline-block;\n    margin-right: 2px;\n    vertical-align: middle;\n  }\n`;\n\nconst TrainDetail = ({\n  departure,\n  arrival,\n  trainDate,\n  departureTime,\n  arrivalTime\n}) => {\n  const [sortBy, setSortBy] = useState();\n  const [order, setOrder] = useState();\n\n  const shouldFetch = departure && arrival && trainDate;\n\n  // GET 取得指定[日期],[起迄站間]之時刻表資料\n  const { data } = useSWR(\n    () =>\n      shouldFetch &&\n      `/v2/Rail/THSR/DailyTimetable/OD/${departure}/to/${arrival}/${trainDate}`,\n    fetcher,\n    { suspense: true }\n  );\n\n  const depFilterTime = timesToMins(departureTime);\n  const arrFilterTime = timesToMins(arrivalTime);\n\n  const trainDetails = data\n    ? data.filter(d => {\n        const depTime = timesToMins(d.OriginStopTime.DepartureTime);\n        const arrTime = timesToMins(d.DestinationStopTime.ArrivalTime);\n        return depTime > depFilterTime && arrTime < arrFilterTime;\n      })\n    : [];\n\n  if (trainDetails.length < 1) return null;\n\n  const onClickDepartureSort = () => {\n    setSortBy(\"departure\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const onClickArrivalSort = () => {\n    setSortBy(\"arrival\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const renderList = trainDetails.sort((a, b) => {\n    if (sortBy === \"departure\") {\n      const aDepTimeMins = timesToMins(a.OriginStopTime.DepartureTime);\n      const bDepTimeMins = timesToMins(b.OriginStopTime.DepartureTime);\n\n      return order === \"desc\"\n        ? bDepTimeMins - aDepTimeMins\n        : aDepTimeMins - bDepTimeMins;\n    } else if (sortBy === \"arrival\") {\n      const aArrTimeMins = timesToMins(a.DestinationStopTime.ArrivalTime);\n      const bArrTimeMins = timesToMins(b.DestinationStopTime.ArrivalTime);\n\n      return order === \"desc\"\n        ? bArrTimeMins - aArrTimeMins\n        : aArrTimeMins - bArrTimeMins;\n    } else {\n      return true;\n    }\n  });\n\n  return (\n    <div>\n      <StyledTable>\n        <thead>\n          <tr>\n            <StyledTh>車次</StyledTh>\n            <StyledTh pointer onClick={onClickDepartureSort}>\n              <span>發車</span>\n              {sortBy === \"departure\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </StyledTh>\n            <StyledTh pointer onClick={onClickArrivalSort}>\n              <span>到達</span>\n              {sortBy === \"arrival\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </StyledTh>\n            <StyledTh>總時程</StyledTh>\n          </tr>\n        </thead>\n        <tbody>\n          {renderList.length > 0 ? (\n            renderList.map(detail => (\n              <Row key={detail.DailyTrainInfo.TrainNo} detail={detail} />\n            ))\n          ) : (\n            <NoResults />\n          )}\n        </tbody>\n      </StyledTable>\n      <footer className=\"fixed-bottom\">\n        <p>更新時間: {data[0].UpdateTime}</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default TrainDetail;\n","import TrainDetail from \"./TrainDetail\";\n\nexport default TrainDetail;\n","import React from \"react\";\nimport useSWR from \"swr\";\nimport styled from \"styled-components\";\nimport { fetcher } from \"apis/THSR\";\n\nconst StyledTable = styled.table`\n  width: 100%;\n  background-color: #aeeff9;\n  th,\n  td {\n    padding: 0.3em;\n  }\n`;\n\nconst PrizeDetail = ({ departure, arrival }) => {\n  const shouldFetch = departure && arrival;\n\n  // GET 取得指定[起訖站間]之票價資料\n  const { data } = useSWR(\n    () => shouldFetch && `/v2/Rail/THSR/ODFare/${departure}/to/${arrival}`,\n    fetcher,\n    { suspense: true }\n  );\n\n  const prizeList = data ? data[0].Fares : [];\n\n  if (prizeList.length < 1) return null;\n\n  const departureStation =\n    data[0].OriginStationName.Zh_tw + data[0].OriginStationName.En;\n  const arrivalStation =\n    data[0].DestinationStationName.Zh_tw + data[0].DestinationStationName.En;\n\n  return (\n    <div className=\"mt-3 mb-3\">\n      <h3>票價資訊</h3>\n      <StyledTable>\n        <thead>\n          <tr>\n            <th colSpan=\"3\">\n              {departureStation}\n              <span className=\"ml-2 mr-2\">&rarr;</span>\n              {arrivalStation}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {prizeList.map(v => (\n              <td key={v.Price}>\n                {v.TicketType}:<strong>&#36;{v.Price}</strong>\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </StyledTable>\n    </div>\n  );\n};\n\nexport default PrizeDetail;\n","import PrizeDetail from \"./PrizeDetail\";\n\nexport default PrizeDetail;\n","import React from \"react\";\n\nexport function Row({ children }) {\n  return <div className=\"row form-group\">{children}</div>;\n}\n\nexport function Label({ htmlFor, children }) {\n  return (\n    <label htmlFor={htmlFor} className=\"col-4 col-form-label text-left\">\n      {children}\n    </label>\n  );\n}\n\nexport const FormField = React.memo(({ children }) => {\n  return <div className=\"col\">{children}</div>;\n});\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst Selector = React.memo(\n  React.forwardRef(({ options, ...props }, ref) => {\n    return (\n      <select {...props} ref={ref}>\n        {options.length > 0 ? (\n          options.map(e => (\n            <option key={e.value} value={e.value}>\n              {e.Zh_tw + e.En}\n            </option>\n          ))\n        ) : (\n          <option value=\"\">請選擇</option>\n        )}\n      </select>\n    );\n  })\n);\n\nconst StyledSelect = withStyles({\n  root: {\n    textAlign: \"left\"\n  }\n})(Select);\n\nexport const TimeSelect = ({ ...props }) => (\n  <StyledSelect {...props}>\n    <MenuItem value=\"06:00\">06:00</MenuItem>\n    <MenuItem value=\"07:00\">07:00</MenuItem>\n    <MenuItem value=\"08:00\">08:00</MenuItem>\n    <MenuItem value=\"09:00\">09:00</MenuItem>\n    <MenuItem value=\"10:00\">10:00</MenuItem>\n    <MenuItem value=\"11:00\">11:00</MenuItem>\n    <MenuItem value=\"12:00\">12:00</MenuItem>\n    <MenuItem value=\"13:00\">13:00</MenuItem>\n    <MenuItem value=\"14:00\">14:00</MenuItem>\n    <MenuItem value=\"15:00\">15:00</MenuItem>\n    <MenuItem value=\"16:00\">16:00</MenuItem>\n    <MenuItem value=\"17:00\">17:00</MenuItem>\n    <MenuItem value=\"18:00\">18:00</MenuItem>\n    <MenuItem value=\"19:00\">19:00</MenuItem>\n    <MenuItem value=\"20:00\">20:00</MenuItem>\n    <MenuItem value=\"21:00\">21:00</MenuItem>\n    <MenuItem value=\"22:00\">22:00</MenuItem>\n    <MenuItem value=\"23:00\">23:00</MenuItem>\n    <MenuItem value=\"24:00\">24:00</MenuItem>\n  </StyledSelect>\n);\n\nexport default Selector;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\n\nimport { Row, Label, FormField } from \"components/Grid\";\nimport Select, { TimeSelect } from \"components/Select\";\nimport { fetcher } from \"apis/THSR\";\nimport { formatDate, getDefaultHour } from \"utils\";\n\nconst { defaultDepTime, defaultArrTime } = getDefaultHour();\n\nconst SearchForm = ({ onSearch, className }) => {\n  const [date, setDate] = useState(formatDate(Date.now()));\n  const [departure, setDeparture] = useState(\"1000\"); // 台北\n  const [arrival, setArrival] = useState(\"1070\"); // 左營\n  const [departureTime, setDepartureTime] = useState(defaultDepTime);\n  const [arrivalTime, setArriveTime] = useState(defaultArrTime);\n\n  // GET 取得車站基本資料\n  const { data } = useSWR(\"/v2/Rail/THSR/Station\", fetcher, {\n    suspense: true,\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n    refreshWhenOffline: false,\n    refreshWhenHidden: false,\n    refreshInterval: 0\n  });\n\n  const stations = data\n    ? data.map(val => ({\n        value: val.StationID,\n        ...val.StationName\n      }))\n    : [];\n\n  const depArrSwitch = () => {\n    setDeparture(arrival);\n    setArrival(departure);\n  };\n\n  const handleSearch = () =>\n    onSearch({\n      date,\n      departure,\n      arrival,\n      departureTime,\n      arrivalTime\n    });\n\n  return (\n    <div className={`container ${className}`}>\n      <Row>\n        <Label htmlFor=\"trip-start\">日期</Label>\n        <FormField>\n          <input\n            className=\"form-control\"\n            type=\"date\"\n            id=\"trip-start\"\n            value={date}\n            onChange={e => setDate(e.currentTarget.value)}\n          />\n        </FormField>\n      </Row>\n      <Row>\n        <Label htmlFor=\"OrginStation\">起站</Label>\n        <FormField>\n          <Select\n            className=\"form-control\"\n            name=\"OrginStation\"\n            id=\"OrginStation\"\n            options={stations}\n            value={departure}\n            onChange={e => setDeparture(e.currentTarget.value)}\n          />\n        </FormField>\n      </Row>\n      <div className=\"row justify-content-center form-group\">\n        <button\n          onClick={depArrSwitch}\n          type=\"button\"\n          className=\"btn btn-outline-primary\"\n        >\n          起迄站交換\n        </button>\n      </div>\n      <Row>\n        <Label htmlFor=\"DestinationStation\">迄站</Label>\n        <FormField>\n          <Select\n            className=\"form-control\"\n            name=\"DestinationStation\"\n            id=\"DestinationStation\"\n            options={stations}\n            value={arrival}\n            onChange={e => setArrival(e.currentTarget.value)}\n          />\n        </FormField>\n      </Row>\n      <Row>\n        <Label htmlFor=\"DepartureTime\">最早出發</Label>\n        <FormField>\n          <TimeSelect\n            className=\"form-control\"\n            name=\"DepartureTime\"\n            id=\"DepartureTime\"\n            value={departureTime}\n            onChange={e => setDepartureTime(e.target.value)}\n          />\n        </FormField>\n      </Row>\n      <Row>\n        <Label htmlFor=\"ArriveTime\">最晚抵達</Label>\n        <FormField>\n          <TimeSelect\n            className=\"form-control\"\n            name=\"ArriveTime\"\n            id=\"ArriveTime\"\n            value={arrivalTime}\n            onChange={e => setArriveTime(e.target.value)}\n          />\n        </FormField>\n      </Row>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary btn-lg btn-block\"\n        onClick={handleSearch}\n      >\n        查詢\n      </button>\n    </div>\n  );\n};\n\nconst StyledSeachForm = styled(SearchForm)`\n  box-shadow: 1px 1px 5px #ddd;\n  background-color: #f3f3f3;\n  border-color: #ddd;\n  color: #333;\n  text-shadow: 0 1px 0 #eee;\n  padding-top: 0.5em;\n  padding-bottom: 0.5em;\n  margin-bottom: 0.5em;\n  .col-form-label {\n    max-width: 7em;\n  }\n`;\n\nexport default StyledSeachForm;\n","import SearchPanel from \"./SearchPanel\";\n\nexport default SearchPanel;\n","import React, { useState, Suspense } from \"react\";\nimport TrainDetail from \"./components/TrainDetail\";\nimport PrizeDetail from \"./components/PrizeDetail\";\nimport SearchPanel from \"./components/SearchPanel\";\n\nconst THSR = () => {\n  const [trainDate, setTrainDate] = useState(\"\");\n  const [departure, setDeparture] = useState(\"\");\n  const [arrival, setArrival] = useState(\"\");\n  const [departureTime, setDepartureTime] = useState(\"\");\n  const [arrivalTime, setArrivalTime] = useState(\"\");\n\n  const searchClick = ({\n    date,\n    departure,\n    arrival,\n    departureTime,\n    arrivalTime\n  }) => {\n    setTrainDate(date);\n    setDeparture(departure);\n    setArrival(arrival);\n    setDepartureTime(departureTime);\n    setArrivalTime(arrivalTime);\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>高鐵時刻查詢</h1>\n      </header>\n      <Suspense fallback={<div>Loading stations...</div>}>\n        <SearchPanel onSearch={searchClick} />\n      </Suspense>\n      <div className=\"container\">\n        <Suspense fallback={<div>Get train details...</div>}>\n          <TrainDetail\n            departure={departure}\n            arrival={arrival}\n            trainDate={trainDate}\n            departureTime={departureTime}\n            arrivalTime={arrivalTime}\n          />\n        </Suspense>\n        <Suspense fallback={<div>Get prize detail...</div>}>\n          <PrizeDetail departure={departure} arrival={arrival} />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default THSR;\n","import THSR from \"./THSR\";\n\nexport default THSR;\n","import getFetchOptions from \"./config\";\n\n// API spec: https://ptx.transportdata.tw/MOTC?t=Rail&v=2#!/TRA/TRAApi_ODDailyTimetable\nconst API_BASE = \"https://ptx.transportdata.tw/MOTC\";\n\nexport const fetcher = url =>\n  fetch(API_BASE + url, getFetchOptions()).then(r => r.json());\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Row, Label, FormField } from \"components/Grid\";\nimport { TimeSelect } from \"components/Select\";\n\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/TRA\";\nimport { formatDate, getDefaultHour } from \"utils\";\n\nconst Container = styled.div`\n  box-shadow: 1px 1px 5px #ddd;\n  background-color: #f3f3f3;\n  border-color: #ddd;\n  color: #333;\n  text-shadow: 0 1px 0 #eee;\n  padding-top: 0.5em;\n  padding-bottom: 0.5em;\n  margin-bottom: 0.5em;\n  .col-form-label {\n    max-width: 7em;\n  }\n`;\n\nconst { defaultDepTime, defaultArrTime } = getDefaultHour();\n\nconst SearchForm = ({ onSearch }) => {\n  const [date, setDate] = useState(formatDate(Date.now()));\n  const [departure, setDeparture] = useState(null);\n  const [arrival, setArrival] = useState(null);\n  const [departureTime, setDepartureTime] = useState(defaultDepTime);\n  const [arrivalTime, setArriveTime] = useState(defaultArrTime);\n\n  // GET 取得車站基本資料\n  const { data } = useSWR(\n    \"/v2/Rail/TRA/Station?$top=500&$format=JSON\",\n    fetcher,\n    swrConfig\n  );\n\n  const stations = data ? data : [];\n\n  const depArrSwitch = () => {\n    setDeparture(arrival);\n    setArrival(departure);\n  };\n\n  const handleSearch = () =>\n    onSearch({\n      date,\n      departure,\n      arrival,\n      departureTime,\n      arrivalTime\n    });\n\n  return (\n    <Container>\n      <div className=\"container\">\n        <Row>\n          <Label htmlFor=\"trip-start\">日期</Label>\n          <FormField>\n            <TextField\n              type=\"date\"\n              id=\"trip-start\"\n              value={date}\n              onChange={e => setDate(e.currentTarget.value)}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </FormField>\n        </Row>\n        <Row>\n          <Label htmlFor=\"OrginStation\">起站</Label>\n          <FormField>\n            <Autocomplete\n              name=\"OrginStation\"\n              id=\"OrginStation\"\n              options={stations}\n              onChange={(e, v) => setDeparture(v)}\n              value={departure}\n              renderInput={params => (\n                <TextField {...params} label=\"起站\" variant=\"outlined\" />\n              )}\n              getOptionLabel={option =>\n                option.StationName.Zh_tw + \" \" + option.StationName.En\n              }\n              getOptionSelected={(o, v) => o.StationUID === v.StationUID}\n            />\n          </FormField>\n        </Row>\n        <div className=\"row justify-content-center form-group\">\n          <Button variant=\"contained\" color=\"primary\" onClick={depArrSwitch}>\n            起迄站交換\n          </Button>\n        </div>\n        <Row>\n          <Label htmlFor=\"DestinationStation\">迄站</Label>\n          <FormField>\n            <Autocomplete\n              name=\"DestinationStation\"\n              id=\"DestinationStation\"\n              options={stations}\n              onChange={(e, v) => setArrival(v)}\n              value={arrival}\n              renderInput={params => (\n                <TextField {...params} label=\"迄站\" variant=\"outlined\" />\n              )}\n              getOptionLabel={option =>\n                option.StationName.Zh_tw + \" \" + option.StationName.En\n              }\n              getOptionSelected={(o, v) => o.StationUID === v.StationUID}\n            />\n          </FormField>\n        </Row>\n        <Row>\n          <Label htmlFor=\"DepartureTime\">最早出發</Label>\n          <FormField>\n            <TimeSelect\n              name=\"DepartureTime\"\n              id=\"DepartureTime\"\n              value={departureTime}\n              onChange={e => setDepartureTime(e.target.value)}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </FormField>\n        </Row>\n        <Row>\n          <Label htmlFor=\"ArriveTime\">最晚抵達</Label>\n          <FormField>\n            <TimeSelect\n              name=\"ArriveTime\"\n              id=\"ArriveTime\"\n              value={arrivalTime}\n              onChange={e => setArriveTime(e.target.value)}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </FormField>\n        </Row>\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          onClick={handleSearch}\n          disabled={!departure || !arrival}\n        >\n          查詢\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default SearchForm;\n","import SearchPanel from \"./SearchPanel\";\n\nexport default SearchPanel;\n","import React from \"react\";\n\nconst formContext = React.createContext({\n  trainDate: \"\",\n  departure: \"\",\n  arrival: \"\",\n  departureTime: \"\",\n  arrivalTime: \"\"\n});\n\nexport default formContext;\n","import React, { useContext } from \"react\";\nimport useSWR from \"swr\";\n\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/TRA\";\nimport Context from \"components/TRA/context\";\n\nconst Station = ({ station, isFirstStaion, isLastStation }) => {\n  const { departure, arrival } = useContext(Context);\n  const isTargetStation =\n    station.StationID === departure.StationID ||\n    station.StationID === arrival.StationID;\n\n  const dotColor = isTargetStation\n    ? \"secondary\"\n    : isFirstStaion || isLastStation\n    ? \"primary\"\n    : undefined;\n\n  const stationName = `${station.StationName.Zh_tw} ${station.StationName.En}`;\n\n  return (\n    <TimelineItem>\n      <TimelineOppositeContent>\n        <Typography color=\"textSecondary\">{station.ArrivalTime}</Typography>\n      </TimelineOppositeContent>\n      <TimelineSeparator>\n        <TimelineDot color={dotColor} />\n        <TimelineConnector />\n      </TimelineSeparator>\n      <TimelineContent>\n        <Typography>{stationName}</Typography>\n      </TimelineContent>\n    </TimelineItem>\n  );\n};\n\nconst DailyTimeTable = ({ trainNo }) => {\n  // GET 取得當天指定[車次]的時刻表資料\n  const { data } = useSWR(\n    () => trainNo && `/v2/Rail/TRA/DailyTimetable/Today/TrainNo/${trainNo}`,\n    fetcher,\n    swrConfig\n  );\n\n  const stops = data ? data[0].StopTimes : [];\n\n  return (\n    <Timeline align=\"right\">\n      {stops.map((v, i) => (\n        <Station\n          key={v.StationID}\n          station={v}\n          isFirstStaion={i === 0}\n          isLastStation={i === stops.length - 1}\n        />\n      ))}\n    </Timeline>\n  );\n};\n\nexport default DailyTimeTable;\n","import DailyTimeTable from \"./DailyTimeTable\";\n\nexport default DailyTimeTable;\n","import React from \"react\";\nimport useSWR from \"swr\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { fetcher } from \"apis/TRA\";\nimport { swrConfig } from \"apis/config\";\n\nconst tripLine = {\n  0: \"不經山海線\",\n  1: \"山線\",\n  2: \"海線\"\n};\n\nconst wheelChairFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst packageServiceFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst diningFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst bikeFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst breastFeedingFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst dailyFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst serviceAddedFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst TrainTodayInfo = ({ trainNo }) => {\n  // GET 取得當天指定[車次]的車次資料\n  const { data } = useSWR(\n    () => trainNo && `/v2/Rail/TRA/DailyTrainInfo/Today/TrainNo/${trainNo}`,\n    fetcher,\n    swrConfig\n  );\n\n  if (!data) return null;\n\n  const info = data[0];\n  const startStationName = `${info.StartingStationName.Zh_tw} ${info.StartingStationName.En}`;\n  const endStationName = `${info.EndingStationName.Zh_tw} ${info.EndingStationName.En}`;\n\n  return (\n    <Box my={2}>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>起站: </strong>\n        {startStationName}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>訖站: </strong>\n        {endStationName}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>山海線類型: </strong>\n        {tripLine[info.TripLine]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否設身障旅客專用座位車: </strong>\n        {wheelChairFlag[info.WheelchairFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否提供行李服務: </strong>\n        {packageServiceFlag[info.PackageServiceFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否提供訂便當服務: </strong>\n        {diningFlag[info.DiningFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否人車同行班次(置於攜車袋之自行車各級列車均可乘車): </strong>\n        {bikeFlag[info.BikeFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否設有哺(集)乳室車廂: </strong>\n        {breastFeedingFlag[info.BreastFeedingFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否每日行駛: </strong>\n        {dailyFlag[info.DailyFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否為加班車: </strong>\n        {serviceAddedFlag[info.ServiceAddedFlag]}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        <strong>其他: </strong>\n        {info.Note.Zh_tw} {info.TrainTypeName.Zh_tw}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default TrainTodayInfo;\n","import TrainTodayInfo from \"./TrainTodayInfo\";\n\nexport default TrainTodayInfo;\n","import React, { Suspense } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport DailyTimeTable from \"./components/DailyTimeTable\";\nimport TrainTodayInfo from \"./components/TrainTodayInfo\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"static\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}));\n\nconst TrainInfoDialog = ({ isOpen, toggle, trainNo }) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      fullScreen\n      open={isOpen}\n      onClose={toggle}\n      TransitionComponent={Transition}\n    >\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={toggle}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            車號 - {trainNo}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <DialogContent>\n        <Suspense fallback={<div>Get train today info...</div>}>\n          <TrainTodayInfo trainNo={isOpen && trainNo} />\n        </Suspense>\n        <Suspense fallback={<div>Get train time table...</div>}>\n          <DailyTimeTable trainNo={isOpen && trainNo} />\n        </Suspense>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default TrainInfoDialog;\n","import TrainInfoDialog from \"./TrainInfoDialog\";\n\nexport default TrainInfoDialog;\n","import React from \"react\";\n\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\n\nimport useToggle from \"hooks/useToggle\";\nimport TrainInfoDialog from \"./components/TrainInfoDialog\";\n\nexport const NoResults = () => (\n  <TableRow>\n    <TableCell colSpan=\"4\">尚無資料</TableCell>\n  </TableRow>\n);\n\nconst Row = ({ detail }) => {\n  const [isOpen, toggle] = useToggle();\n\n  const TrainNo = detail.DailyTrainInfo.TrainNo;\n  const DepartureTime = detail.OriginStopTime.DepartureTime;\n  const ArrivalTime = detail.DestinationStopTime.ArrivalTime;\n\n  return (\n    <TableRow>\n      <TableCell className=\"text-info font-weight-bold\">{TrainNo}</TableCell>\n      <TableCell>{DepartureTime}</TableCell>\n      <TableCell>{ArrivalTime}</TableCell>\n      <TableCell>\n        <Button color=\"primary\" onClick={toggle}>\n          查看\n        </Button>\n        <TrainInfoDialog trainNo={TrainNo} isOpen={isOpen} toggle={toggle} />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Row;\n","import Row, { NoResults } from \"./Row\";\n\nexport { NoResults };\nexport default Row;\n","import { useState, useCallback } from \"react\";\n\nexport default function useToggle(init = false) {\n  const [value, setValue] = useState(init);\n  const toggle = useCallback(() => setValue(!value), [value]);\n  return [value, toggle];\n}\n","import React, { useState } from \"react\";\nimport useSWR from \"swr\";\n\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/THSR\";\nimport { timesToMins } from \"utils\";\n\nimport Row, { NoResults } from \"./components/Row\";\nimport SortIcon from \"components/SortIcon\";\n\nconst TrainDetail = ({ departure, arrival, trainDate }) => {\n  const [sortBy, setSortBy] = useState();\n  const [order, setOrder] = useState();\n\n  const shouldFetch = departure.StationID && arrival.StationID && trainDate;\n\n  // GET 取得指定[日期],[起迄站間]之時刻表資料\n  const { data } = useSWR(\n    () =>\n      shouldFetch &&\n      `/v2/Rail/TRA/DailyTimetable/OD/${departure.StationID}/to/${arrival.StationID}/${trainDate}?format=JSON`,\n    fetcher,\n    swrConfig\n  );\n\n  const onClickDepartureSort = () => {\n    setSortBy(\"departure\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const onClickArrivalSort = () => {\n    setSortBy(\"arrival\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const trainDetails = data ? data : [];\n\n  const renderList = trainDetails.sort((a, b) => {\n    if (sortBy === \"departure\") {\n      const aDepTimeMins = timesToMins(a.OriginStopTime.DepartureTime);\n      const bDepTimeMins = timesToMins(b.OriginStopTime.DepartureTime);\n\n      return order === \"desc\"\n        ? bDepTimeMins - aDepTimeMins\n        : aDepTimeMins - bDepTimeMins;\n    } else if (sortBy === \"arrival\") {\n      const aArrTimeMins = timesToMins(a.DestinationStopTime.ArrivalTime);\n      const bArrTimeMins = timesToMins(b.DestinationStopTime.ArrivalTime);\n\n      return order === \"desc\"\n        ? bArrTimeMins - aArrTimeMins\n        : aArrTimeMins - bArrTimeMins;\n    } else {\n      return true;\n    }\n  });\n\n  return (\n    <div>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>車號</TableCell>\n            <TableCell onClick={onClickDepartureSort}>\n              <span>發車</span>\n              {sortBy === \"departure\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell onClick={onClickArrivalSort}>\n              <span>到達</span>\n              {sortBy === \"arrival\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell>詳細資訊</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {renderList.length > 0 ? (\n            renderList.map(detail => (\n              <Row key={detail.DailyTrainInfo.TrainNo} detail={detail} />\n            ))\n          ) : (\n            <NoResults />\n          )}\n        </TableBody>\n      </Table>\n      <footer className=\"fixed-bottom\">\n        <p>更新時間: {data?.[0]?.UpdateTime || \"---\"}</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default TrainDetail;\n","import TrainDetail from \"./TrainDetail\";\n\nexport default TrainDetail;\n","import React, { Suspense, useState } from \"react\";\nimport SearchPanel from \"./components/SearchPanel\";\nimport TrainDetail from \"./components/TrainDetail\";\nimport Context from \"./context\";\n\nconst TRA = () => {\n  const [trainDate, setTrainDate] = useState(\"\");\n  const [departure, setDeparture] = useState(\"\");\n  const [arrival, setArrival] = useState(\"\");\n  const [departureTime, setDepartureTime] = useState(\"\");\n  const [arrivalTime, setArrivalTime] = useState(\"\");\n\n  const onSearch = ({\n    date,\n    departure,\n    arrival,\n    departureTime,\n    arrivalTime\n  }) => {\n    setTrainDate(date);\n    setDeparture(departure);\n    setArrival(arrival);\n    setDepartureTime(departureTime);\n    setArrivalTime(arrivalTime);\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>台鐵時刻查詢</h1>\n      </header>\n      <Suspense fallback={<div>Get stations...</div>}>\n        <SearchPanel onSearch={onSearch} />\n      </Suspense>\n      <Context.Provider\n        value={{ trainDate, departure, arrival, departureTime, arrivalTime }}\n      >\n        <Suspense fallback={<div>Get train details...</div>}>\n          <TrainDetail\n            departure={departure}\n            arrival={arrival}\n            trainDate={trainDate}\n          />\n        </Suspense>\n      </Context.Provider>\n    </div>\n  );\n};\n\nexport default TRA;\n","import TRA from \"./TRA\";\n\nexport default TRA;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport GoTop from \"./components/GoTop\";\nimport THSR from \"./components/THSR\";\nimport TRA from \"./components/TRA\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box pt={2}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nfunction App() {\n  const [transportation, setTransportation] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setTransportation(newValue);\n  };\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\" id=\"back-to-top-anchor\">\n        <Tabs\n          value={transportation}\n          onChange={handleChange}\n          aria-label=\"App tabs\"\n        >\n          <Tab label=\"THSR\" {...a11yProps(0)} />\n          <Tab label=\"TRA\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={transportation} index={0}>\n        <THSR />\n      </TabPanel>\n      <TabPanel value={transportation} index={1}>\n        <TRA />\n      </TabPanel>\n      <GoTop />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}