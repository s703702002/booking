{"version":3,"sources":["components/GoTop.jsx","apis/config.js","apis/THSR.js","utils.js","components/SortIcon/SortIcon.jsx","components/SortIcon/index.js","components/THSR/components/TrainDetail/components/Row.jsx","components/THSR/components/TrainDetail/TrainDetail.jsx","components/THSR/components/TrainDetail/index.js","components/THSR/components/PrizeDetail/PrizeDetail.jsx","components/THSR/components/PrizeDetail/index.js","components/Grid.jsx","components/Select.jsx","components/THSR/components/SearchPanel/SearchPanel.jsx","components/THSR/components/SearchPanel/index.js","components/THSR/THSR.jsx","components/THSR/index.js","apis/TRA.js","components/TRA/components/SearchPanel/SearchPanel.jsx","components/TRA/components/SearchPanel/index.js","components/TRA/context.js","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/DailyTimeTable/DailyTimeTable.jsx","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/DailyTimeTable/index.js","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/TrainTodayInfo/TrainTodayInfo.jsx","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/TrainTodayInfo/index.js","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/TrainInfoDialog.jsx","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/index.js","components/TRA/components/TrainDetail/components/Row/Row.jsx","components/TRA/components/TrainDetail/components/Row/index.js","hooks/useToggle.js","components/TRA/components/TrainDetail/TrainDetail.jsx","components/TRA/components/TrainDetail/index.js","components/TRA/TRA.jsx","components/TRA/index.js","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","bottom","spacing","right","zIndex","ScrollTop","classes","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","onClick","event","anchor","target","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","className","Fab","color","size","aria-label","swrConfig","suspense","revalidateOnFocus","revalidateOnReconnect","refreshWhenOffline","refreshWhenHidden","refreshInterval","fetcher","url","fetch","method","mode","headers","then","r","json","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","timesToMins","times","arr","split","parseInt","prefixZero","str","SortIcon","order","NoResults","TableRow","TableCell","colSpan","Row","detail","TrainNo","DailyTrainInfo","DepartureTime","OriginStopTime","ArrivalTime","DestinationStopTime","Dmins","Amins","Typography","mins","h","toString","minsToTimes","TrainDetail","departure","arrival","trainDate","departureTime","arrivalTime","useState","sortBy","setSortBy","setOrder","shouldFetch","data","useSWR","depFilterTime","arrFilterTime","renderList","filter","depTime","arrTime","sort","a","b","aDepTimeMins","bDepTimeMins","aArrTimeMins","bArrTimeMins","Table","TableHead","pointer","TableBody","map","key","UpdateTime","StyledTable","styled","table","PrizeDetail","prizeList","Fares","departureStation","OriginStationName","Zh_tw","En","arrivalStation","DestinationStationName","v","Price","TicketType","children","Label","htmlFor","FormField","React","memo","StyledSelect","withStyles","textAlign","Select","TimeSelect","props","MenuItem","value","Selector","options","o","Container","div","dep","getHours","defaultDepTime","defaultArrTime","getDefaultHour","SearchForm","SearchPanel","onSearch","now","setDate","setDeparture","setArrival","setDepartureTime","setArriveTime","stations","val","StationID","StationName","TextField","type","id","onChange","e","currentTarget","fullWidth","variant","name","Button","disabled","THSR","setTrainDate","setArrivalTime","fallback","Autocomplete","renderInput","params","label","getOptionLabel","option","getOptionSelected","StationUID","formContext","createContext","Station","station","isFirstStaion","isLastStation","useContext","Context","dotColor","undefined","stationName","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","DailyTimeTable","trainNo","stops","StopTimes","Timeline","align","i","tripLine","0","1","2","wheelChairFlag","packageServiceFlag","diningFlag","bikeFlag","breastFeedingFlag","dailyFlag","serviceAddedFlag","TrainTodayInfo","info","startStationName","StartingStationName","endStationName","EndingStationName","Box","my","gutterBottom","TripLine","WheelchairFlag","PackageServiceFlag","DiningFlag","BikeFlag","BreastFeedingFlag","DailyFlag","ServiceAddedFlag","Note","TrainTypeName","Transition","forwardRef","ref","Slide","direction","appBar","title","marginLeft","flex","TrainInfoDialog","isOpen","toggle","Dialog","fullScreen","open","onClose","TransitionComponent","AppBar","Toolbar","IconButton","edge","DialogContent","init","setValue","useCallback","useToggle","TRA","Provider","TabPanel","index","other","hidden","aria-labelledby","pt","a11yProps","App","transportation","setTransportation","Tabs","newValue","Tab","GoTop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ca8584f6.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Fab from \"@material-ui/core/Fab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 1200\n  }\n}));\n\nfunction ScrollTop() {\n  const classes = useStyles();\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 100\n  });\n\n  const handleClick = event => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </div>\n    </Zoom>\n  );\n}\n\nexport default ScrollTop;\n","export default function getFetchOptions() {\n  return {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept-Encoding\": \"gzip, deflate\"\n    }\n  };\n}\n\nexport const swrConfig = {\n  suspense: true,\n  revalidateOnFocus: false,\n  revalidateOnReconnect: false,\n  refreshWhenOffline: false,\n  refreshWhenHidden: false,\n  refreshInterval: 0\n};\n","import getFetchOptions from \"./config\";\n\n// API spec: https://ptx.transportdata.tw/MOTC?t=Rail&v=2#!/THSR/THSRApi_DailyTimetable\nconst API_BASE = \"https://ptx.transportdata.tw/MOTC\";\n\nexport const fetcher = url =>\n  fetch(API_BASE + url, getFetchOptions()).then(r => r.json());\n","export function formatDate(date) {\n  let d = new Date(date),\n    month = \"\" + (d.getMonth() + 1),\n    day = \"\" + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = \"0\" + month;\n  if (day.length < 2) day = \"0\" + day;\n\n  return [year, month, day].join(\"-\");\n}\n\nexport function timesToMins(times) {\n  const arr = times.split(\":\");\n  return parseInt(arr[0], 10) * 60 + parseInt(arr[1], 10);\n}\n\nfunction prefixZero(str) {\n  return str.length < 2 ? \"0\" + str : str;\n}\n\nexport function minsToTimes(mins) {\n  let h = 0;\n  while (mins >= 60) {\n    mins -= 60;\n    h += 1;\n  }\n  h = prefixZero(h.toString());\n  mins = prefixZero(mins.toString());\n  return h + \":\" + mins;\n}\n\nexport function getDefaultHour() {\n  let dep = new Date().getHours() + 1;\n  let arr = dep + 3;\n  dep = prefixZero(dep.toString()) + \":00\";\n  arr = prefixZero(arr.toString()) + \":00\";\n  return {\n    defaultDepTime: dep,\n    defaultArrTime: arr\n  };\n}\n","import React from \"react\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\n\nconst SortIcon = ({ order }) => {\n  return order === \"desc\" ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />;\n};\n\nexport default SortIcon;\n","import SortIcon from \"./SortIcon\";\n\nexport default SortIcon;\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { minsToTimes, timesToMins } from \"utils\";\n\nexport const NoResults = () => (\n  <TableRow>\n    <TableCell colSpan=\"4\">尚無資料</TableCell>\n  </TableRow>\n);\n\nconst Row = ({ detail }) => {\n  const TrainNo = detail.DailyTrainInfo.TrainNo;\n  const DepartureTime = detail.OriginStopTime.DepartureTime;\n  const ArrivalTime = detail.DestinationStopTime.ArrivalTime;\n  const Dmins = timesToMins(DepartureTime);\n  const Amins = timesToMins(ArrivalTime);\n\n  return (\n    <TableRow>\n      <TableCell>\n        <Typography color=\"primary\">{TrainNo}</Typography>\n      </TableCell>\n      <TableCell>{DepartureTime}</TableCell>\n      <TableCell>{ArrivalTime}</TableCell>\n      <TableCell>{minsToTimes(Amins - Dmins)}</TableCell>\n    </TableRow>\n  );\n};\n\nexport default Row;\n","import React, { useState } from \"react\";\nimport useSWR from \"swr\";\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/THSR\";\nimport { timesToMins } from \"utils\";\nimport SortIcon from \"components/SortIcon\";\n\nimport Row, { NoResults } from \"./components/Row\";\n\nconst TrainDetail = ({\n  departure,\n  arrival,\n  trainDate,\n  departureTime,\n  arrivalTime\n}) => {\n  const [sortBy, setSortBy] = useState();\n  const [order, setOrder] = useState();\n\n  const shouldFetch = departure && arrival && trainDate;\n\n  // GET 取得指定[日期],[起迄站間]之時刻表資料\n  const { data } = useSWR(\n    () =>\n      shouldFetch &&\n      `/v2/Rail/THSR/DailyTimetable/OD/${departure}/to/${arrival}/${trainDate}`,\n    fetcher,\n    swrConfig\n  );\n\n  const depFilterTime = timesToMins(departureTime);\n  const arrFilterTime = timesToMins(arrivalTime);\n\n  const trainDetails = data\n    ? data.filter(d => {\n        const depTime = timesToMins(d.OriginStopTime.DepartureTime);\n        const arrTime = timesToMins(d.DestinationStopTime.ArrivalTime);\n        return depTime > depFilterTime && arrTime < arrFilterTime;\n      })\n    : [];\n\n  const onClickDepartureSort = () => {\n    setSortBy(\"departure\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const onClickArrivalSort = () => {\n    setSortBy(\"arrival\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const renderList = trainDetails.sort((a, b) => {\n    if (sortBy === \"departure\") {\n      const aDepTimeMins = timesToMins(a.OriginStopTime.DepartureTime);\n      const bDepTimeMins = timesToMins(b.OriginStopTime.DepartureTime);\n\n      return order === \"desc\"\n        ? bDepTimeMins - aDepTimeMins\n        : aDepTimeMins - bDepTimeMins;\n    } else if (sortBy === \"arrival\") {\n      const aArrTimeMins = timesToMins(a.DestinationStopTime.ArrivalTime);\n      const bArrTimeMins = timesToMins(b.DestinationStopTime.ArrivalTime);\n\n      return order === \"desc\"\n        ? bArrTimeMins - aArrTimeMins\n        : aArrTimeMins - bArrTimeMins;\n    } else {\n      return true;\n    }\n  });\n\n  return (\n    <div>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>車次</TableCell>\n            <TableCell pointer onClick={onClickDepartureSort}>\n              <span>發車</span>\n              {sortBy === \"departure\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell pointer onClick={onClickArrivalSort}>\n              <span>到達</span>\n              {sortBy === \"arrival\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell>總時程</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {renderList.length > 0 ? (\n            renderList.map(detail => (\n              <Row key={detail.DailyTrainInfo.TrainNo} detail={detail} />\n            ))\n          ) : (\n            <NoResults />\n          )}\n        </TableBody>\n      </Table>\n      <footer className=\"fixed-bottom\">\n        <p>更新時間: {data?.[0]?.UpdateTime || \"---\"}</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default TrainDetail;\n","import TrainDetail from \"./TrainDetail\";\n\nexport default TrainDetail;\n","import React from \"react\";\nimport useSWR from \"swr\";\n\nimport styled from \"styled-components\";\nimport { fetcher } from \"apis/THSR\";\nimport { swrConfig } from \"apis/config\";\n\nconst StyledTable = styled.table`\n  width: 100%;\n  background-color: #aeeff9;\n  th,\n  td {\n    padding: 0.3em;\n  }\n`;\n\nconst PrizeDetail = ({ departure, arrival }) => {\n  const shouldFetch = departure && arrival;\n\n  // GET 取得指定[起訖站間]之票價資料\n  const { data } = useSWR(\n    () => shouldFetch && `/v2/Rail/THSR/ODFare/${departure}/to/${arrival}`,\n    fetcher,\n    swrConfig\n  );\n\n  const prizeList = data ? data[0].Fares : [];\n\n  if (prizeList.length < 1) return null;\n\n  const departureStation =\n    data[0].OriginStationName.Zh_tw + data[0].OriginStationName.En;\n  const arrivalStation =\n    data[0].DestinationStationName.Zh_tw + data[0].DestinationStationName.En;\n\n  return (\n    <div className=\"mt-3 mb-3\">\n      <h3>票價資訊</h3>\n      <StyledTable>\n        <thead>\n          <tr>\n            <th colSpan=\"3\">\n              {departureStation}\n              <span className=\"ml-2 mr-2\">&rarr;</span>\n              {arrivalStation}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {prizeList.map(v => (\n              <td key={v.Price}>\n                {v.TicketType}:<strong>&#36;{v.Price}</strong>\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </StyledTable>\n    </div>\n  );\n};\n\nexport default PrizeDetail;\n","import PrizeDetail from \"./PrizeDetail\";\n\nexport default PrizeDetail;\n","import React from \"react\";\n\nexport function Row({ children }) {\n  return <div className=\"row form-group\">{children}</div>;\n}\n\nexport function Label({ htmlFor, children }) {\n  return (\n    <label htmlFor={htmlFor} className=\"col-4 col-form-label text-left\">\n      {children}\n    </label>\n  );\n}\n\nexport const FormField = React.memo(({ children }) => {\n  return <div className=\"col\">{children}</div>;\n});\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst StyledSelect = withStyles({\n  root: {\n    textAlign: \"left\"\n  }\n})(Select);\n\nconst Selector = ({ options, ...props }) => {\n  return (\n    <StyledSelect {...props}>\n      {options.length > 0 ? (\n        options.map(o => (\n          <MenuItem key={o.value} value={o.value}>\n            {o.Zh_tw + o.En}\n          </MenuItem>\n        ))\n      ) : (\n        <MenuItem value=\"\">無資料</MenuItem>\n      )}\n    </StyledSelect>\n  );\n};\n\nexport const TimeSelect = props => (\n  <StyledSelect {...props}>\n    <MenuItem value=\"06:00\">06:00</MenuItem>\n    <MenuItem value=\"07:00\">07:00</MenuItem>\n    <MenuItem value=\"08:00\">08:00</MenuItem>\n    <MenuItem value=\"09:00\">09:00</MenuItem>\n    <MenuItem value=\"10:00\">10:00</MenuItem>\n    <MenuItem value=\"11:00\">11:00</MenuItem>\n    <MenuItem value=\"12:00\">12:00</MenuItem>\n    <MenuItem value=\"13:00\">13:00</MenuItem>\n    <MenuItem value=\"14:00\">14:00</MenuItem>\n    <MenuItem value=\"15:00\">15:00</MenuItem>\n    <MenuItem value=\"16:00\">16:00</MenuItem>\n    <MenuItem value=\"17:00\">17:00</MenuItem>\n    <MenuItem value=\"18:00\">18:00</MenuItem>\n    <MenuItem value=\"19:00\">19:00</MenuItem>\n    <MenuItem value=\"20:00\">20:00</MenuItem>\n    <MenuItem value=\"21:00\">21:00</MenuItem>\n    <MenuItem value=\"22:00\">22:00</MenuItem>\n    <MenuItem value=\"23:00\">23:00</MenuItem>\n    <MenuItem value=\"24:00\">24:00</MenuItem>\n  </StyledSelect>\n);\n\nexport default Selector;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { Row, Label, FormField } from \"components/Grid\";\nimport Select, { TimeSelect } from \"components/Select\";\nimport { fetcher } from \"apis/THSR\";\nimport { formatDate, getDefaultHour } from \"utils\";\n\nconst Container = styled.div`\n  box-shadow: 1px 1px 5px #ddd;\n  background-color: #f3f3f3;\n  border-color: #ddd;\n  color: #333;\n  text-shadow: 0 1px 0 #eee;\n  padding-top: 0.5em;\n  padding-bottom: 0.5em;\n  margin-bottom: 0.5em;\n  .col-form-label {\n    max-width: 7em;\n  }\n`;\n\nconst { defaultDepTime, defaultArrTime } = getDefaultHour();\n\nconst SearchForm = ({ onSearch, className }) => {\n  const [date, setDate] = useState(formatDate(Date.now()));\n  const [departure, setDeparture] = useState(\"1000\"); // 台北\n  const [arrival, setArrival] = useState(\"1070\"); // 左營\n  const [departureTime, setDepartureTime] = useState(defaultDepTime);\n  const [arrivalTime, setArriveTime] = useState(defaultArrTime);\n\n  // GET 取得車站基本資料\n  const { data } = useSWR(\"/v2/Rail/THSR/Station\", fetcher, {\n    suspense: true,\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n    refreshWhenOffline: false,\n    refreshWhenHidden: false,\n    refreshInterval: 0\n  });\n\n  const stations = data\n    ? data.map(val => ({\n        value: val.StationID,\n        ...val.StationName\n      }))\n    : [];\n\n  const depArrSwitch = () => {\n    setDeparture(arrival);\n    setArrival(departure);\n  };\n\n  const handleSearch = () =>\n    onSearch({\n      date,\n      departure,\n      arrival,\n      departureTime,\n      arrivalTime\n    });\n\n  return (\n    <Container>\n      <div className=\"container\">\n        <Row>\n          <Label htmlFor=\"trip-start\">日期</Label>\n          <FormField>\n            <TextField\n              type=\"date\"\n              id=\"trip-start\"\n              value={date}\n              onChange={e => setDate(e.currentTarget.value)}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </FormField>\n        </Row>\n        <Row>\n          <Label htmlFor=\"OrginStation\">起站</Label>\n          <FormField>\n            <Select\n              name=\"OrginStation\"\n              id=\"OrginStation\"\n              options={stations}\n              value={departure}\n              onChange={e => setDeparture(e.target.value)}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </FormField>\n        </Row>\n        <div className=\"row justify-content-center form-group\">\n          <Button variant=\"contained\" color=\"primary\" onClick={depArrSwitch}>\n            起迄站交換\n          </Button>\n        </div>\n        <Row>\n          <Label htmlFor=\"DestinationStation\">迄站</Label>\n          <FormField>\n            <Select\n              name=\"DestinationStation\"\n              id=\"DestinationStation\"\n              options={stations}\n              value={arrival}\n              onChange={e => setArrival(e.target.value)}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </FormField>\n        </Row>\n        <Row>\n          <Label htmlFor=\"DepartureTime\">最早出發</Label>\n          <FormField>\n            <TimeSelect\n              name=\"DepartureTime\"\n              id=\"DepartureTime\"\n              value={departureTime}\n              onChange={e => setDepartureTime(e.target.value)}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </FormField>\n        </Row>\n        <Row>\n          <Label htmlFor=\"ArriveTime\">最晚抵達</Label>\n          <FormField>\n            <TimeSelect\n              name=\"ArriveTime\"\n              id=\"ArriveTime\"\n              value={arrivalTime}\n              onChange={e => setArriveTime(e.target.value)}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </FormField>\n        </Row>\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          onClick={handleSearch}\n          disabled={!departure || !arrival}\n        >\n          查詢\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default SearchForm;\n","import SearchPanel from \"./SearchPanel\";\n\nexport default SearchPanel;\n","import React, { useState, Suspense } from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nimport TrainDetail from \"./components/TrainDetail\";\nimport PrizeDetail from \"./components/PrizeDetail\";\nimport SearchPanel from \"./components/SearchPanel\";\n\nconst THSR = () => {\n  const [trainDate, setTrainDate] = useState(\"\");\n  const [departure, setDeparture] = useState(\"\");\n  const [arrival, setArrival] = useState(\"\");\n  const [departureTime, setDepartureTime] = useState(\"\");\n  const [arrivalTime, setArrivalTime] = useState(\"\");\n\n  const searchClick = ({\n    date,\n    departure,\n    arrival,\n    departureTime,\n    arrivalTime\n  }) => {\n    setTrainDate(date);\n    setDeparture(departure);\n    setArrival(arrival);\n    setDepartureTime(departureTime);\n    setArrivalTime(arrivalTime);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h3\">高鐵時刻查詢</Typography>\n      <Suspense fallback={<div>Get stations...</div>}>\n        <SearchPanel onSearch={searchClick} />\n      </Suspense>\n      <Suspense fallback={<div>Get train details...</div>}>\n        <TrainDetail\n          departure={departure}\n          arrival={arrival}\n          trainDate={trainDate}\n          departureTime={departureTime}\n          arrivalTime={arrivalTime}\n        />\n      </Suspense>\n      <Suspense fallback={<div>Get prize detail...</div>}>\n        <PrizeDetail departure={departure} arrival={arrival} />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default THSR;\n","import THSR from \"./THSR\";\n\nexport default THSR;\n","import getFetchOptions from \"./config\";\n\n// API spec: https://ptx.transportdata.tw/MOTC?t=Rail&v=2#!/TRA/TRAApi_ODDailyTimetable\nconst API_BASE = \"https://ptx.transportdata.tw/MOTC\";\n\nexport const fetcher = url =>\n  fetch(API_BASE + url, getFetchOptions()).then(r => r.json());\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Row, Label, FormField } from \"components/Grid\";\n\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/TRA\";\nimport { formatDate } from \"utils\";\n\nconst Container = styled.div`\n  box-shadow: 1px 1px 5px #ddd;\n  background-color: #f3f3f3;\n  border-color: #ddd;\n  color: #333;\n  text-shadow: 0 1px 0 #eee;\n  padding-top: 0.5em;\n  padding-bottom: 0.5em;\n  margin-bottom: 0.5em;\n  .col-form-label {\n    max-width: 7em;\n  }\n`;\n\nconst SearchForm = ({ onSearch }) => {\n  const [date, setDate] = useState(formatDate(Date.now()));\n  const [departure, setDeparture] = useState(null);\n  const [arrival, setArrival] = useState(null);\n\n  // GET 取得車站基本資料\n  const { data } = useSWR(\n    \"/v2/Rail/TRA/Station?$top=500&$format=JSON\",\n    fetcher,\n    swrConfig\n  );\n\n  const stations = data ? data : [];\n\n  const depArrSwitch = () => {\n    setDeparture(arrival);\n    setArrival(departure);\n  };\n\n  const handleSearch = () =>\n    onSearch({\n      date,\n      departure,\n      arrival\n    });\n\n  return (\n    <Container>\n      <div className=\"container\">\n        <Row>\n          <Label htmlFor=\"trip-start\">日期</Label>\n          <FormField>\n            <TextField\n              type=\"date\"\n              id=\"trip-start\"\n              value={date}\n              onChange={e => setDate(e.currentTarget.value)}\n              fullWidth\n              variant=\"outlined\"\n            />\n          </FormField>\n        </Row>\n        <Row>\n          <Label htmlFor=\"OrginStation\">起站</Label>\n          <FormField>\n            <Autocomplete\n              name=\"OrginStation\"\n              id=\"OrginStation\"\n              options={stations}\n              onChange={(e, v) => setDeparture(v)}\n              value={departure}\n              renderInput={params => (\n                <TextField {...params} label=\"起站\" variant=\"outlined\" />\n              )}\n              getOptionLabel={option =>\n                option.StationName.Zh_tw + \" \" + option.StationName.En\n              }\n              getOptionSelected={(o, v) => o.StationUID === v.StationUID}\n            />\n          </FormField>\n        </Row>\n        <div className=\"row justify-content-center form-group\">\n          <Button variant=\"contained\" color=\"primary\" onClick={depArrSwitch}>\n            起迄站交換\n          </Button>\n        </div>\n        <Row>\n          <Label htmlFor=\"DestinationStation\">迄站</Label>\n          <FormField>\n            <Autocomplete\n              name=\"DestinationStation\"\n              id=\"DestinationStation\"\n              options={stations}\n              onChange={(e, v) => setArrival(v)}\n              value={arrival}\n              renderInput={params => (\n                <TextField {...params} label=\"迄站\" variant=\"outlined\" />\n              )}\n              getOptionLabel={option =>\n                option.StationName.Zh_tw + \" \" + option.StationName.En\n              }\n              getOptionSelected={(o, v) => o.StationUID === v.StationUID}\n            />\n          </FormField>\n        </Row>\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          onClick={handleSearch}\n          disabled={!departure || !arrival}\n        >\n          查詢\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default SearchForm;\n","import SearchPanel from \"./SearchPanel\";\n\nexport default SearchPanel;\n","import React from \"react\";\n\nconst formContext = React.createContext({\n  trainDate: \"\",\n  departure: \"\",\n  arrival: \"\",\n  departureTime: \"\",\n  arrivalTime: \"\"\n});\n\nexport default formContext;\n","import React, { useContext } from \"react\";\nimport useSWR from \"swr\";\n\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/TRA\";\nimport Context from \"components/TRA/context\";\n\nconst Station = ({ station, isFirstStaion, isLastStation }) => {\n  const { departure, arrival } = useContext(Context);\n  const isTargetStation =\n    station.StationID === departure.StationID ||\n    station.StationID === arrival.StationID;\n\n  const dotColor = isTargetStation\n    ? \"secondary\"\n    : isFirstStaion || isLastStation\n    ? \"primary\"\n    : undefined;\n\n  const stationName = `${station.StationName.Zh_tw} ${station.StationName.En}`;\n\n  return (\n    <TimelineItem>\n      <TimelineOppositeContent>\n        <Typography color=\"textSecondary\">{station.ArrivalTime}</Typography>\n      </TimelineOppositeContent>\n      <TimelineSeparator>\n        <TimelineDot color={dotColor} />\n        <TimelineConnector />\n      </TimelineSeparator>\n      <TimelineContent>\n        <Typography>{stationName}</Typography>\n      </TimelineContent>\n    </TimelineItem>\n  );\n};\n\nconst DailyTimeTable = ({ trainNo }) => {\n  // GET 取得當天指定[車次]的時刻表資料\n  const { data } = useSWR(\n    () => trainNo && `/v2/Rail/TRA/DailyTimetable/Today/TrainNo/${trainNo}`,\n    fetcher,\n    swrConfig\n  );\n\n  const stops = data ? data[0].StopTimes : [];\n\n  return (\n    <Timeline align=\"right\">\n      {stops.map((v, i) => (\n        <Station\n          key={v.StationID}\n          station={v}\n          isFirstStaion={i === 0}\n          isLastStation={i === stops.length - 1}\n        />\n      ))}\n    </Timeline>\n  );\n};\n\nexport default DailyTimeTable;\n","import DailyTimeTable from \"./DailyTimeTable\";\n\nexport default DailyTimeTable;\n","import React from \"react\";\nimport useSWR from \"swr\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { fetcher } from \"apis/TRA\";\nimport { swrConfig } from \"apis/config\";\n\nconst tripLine = {\n  0: \"不經山海線\",\n  1: \"山線\",\n  2: \"海線\"\n};\n\nconst wheelChairFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst packageServiceFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst diningFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst bikeFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst breastFeedingFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst dailyFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst serviceAddedFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst TrainTodayInfo = ({ trainNo }) => {\n  // GET 取得當天指定[車次]的車次資料\n  const { data } = useSWR(\n    () => trainNo && `/v2/Rail/TRA/DailyTrainInfo/Today/TrainNo/${trainNo}`,\n    fetcher,\n    swrConfig\n  );\n\n  if (!data) return null;\n\n  const info = data[0];\n  const startStationName = `${info.StartingStationName.Zh_tw} ${info.StartingStationName.En}`;\n  const endStationName = `${info.EndingStationName.Zh_tw} ${info.EndingStationName.En}`;\n\n  return (\n    <Box my={2}>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>起站: </strong>\n        {startStationName}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>訖站: </strong>\n        {endStationName}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>山海線類型: </strong>\n        {tripLine[info.TripLine]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否設身障旅客專用座位車: </strong>\n        {wheelChairFlag[info.WheelchairFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否提供行李服務: </strong>\n        {packageServiceFlag[info.PackageServiceFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否提供訂便當服務: </strong>\n        {diningFlag[info.DiningFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否人車同行班次(置於攜車袋之自行車各級列車均可乘車): </strong>\n        {bikeFlag[info.BikeFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否設有哺(集)乳室車廂: </strong>\n        {breastFeedingFlag[info.BreastFeedingFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否每日行駛: </strong>\n        {dailyFlag[info.DailyFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否為加班車: </strong>\n        {serviceAddedFlag[info.ServiceAddedFlag]}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        <strong>其他: </strong>\n        {info.Note.Zh_tw} {info.TrainTypeName.Zh_tw}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default TrainTodayInfo;\n","import TrainTodayInfo from \"./TrainTodayInfo\";\n\nexport default TrainTodayInfo;\n","import React, { Suspense } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport DailyTimeTable from \"./components/DailyTimeTable\";\nimport TrainTodayInfo from \"./components/TrainTodayInfo\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"static\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}));\n\nconst TrainInfoDialog = ({ isOpen, toggle, trainNo }) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      fullScreen\n      open={isOpen}\n      onClose={toggle}\n      TransitionComponent={Transition}\n    >\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={toggle}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            車號 - {trainNo}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <DialogContent>\n        <Suspense fallback={<div>Get train today info...</div>}>\n          <TrainTodayInfo trainNo={isOpen && trainNo} />\n        </Suspense>\n        <Suspense fallback={<div>Get train time table...</div>}>\n          <DailyTimeTable trainNo={isOpen && trainNo} />\n        </Suspense>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default TrainInfoDialog;\n","import TrainInfoDialog from \"./TrainInfoDialog\";\n\nexport default TrainInfoDialog;\n","import React from \"react\";\n\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport useToggle from \"hooks/useToggle\";\nimport TrainInfoDialog from \"./components/TrainInfoDialog\";\n\nexport const NoResults = () => (\n  <TableRow>\n    <TableCell colSpan=\"4\">尚無資料</TableCell>\n  </TableRow>\n);\n\nconst Row = ({ detail }) => {\n  const [isOpen, toggle] = useToggle();\n\n  const TrainNo = detail.DailyTrainInfo.TrainNo;\n  const DepartureTime = detail.OriginStopTime.DepartureTime;\n  const ArrivalTime = detail.DestinationStopTime.ArrivalTime;\n\n  return (\n    <TableRow>\n      <TableCell>\n        <Typography color=\"primary\">{TrainNo}</Typography>\n      </TableCell>\n      <TableCell>{DepartureTime}</TableCell>\n      <TableCell>{ArrivalTime}</TableCell>\n      <TableCell>\n        <Button color=\"primary\" onClick={toggle}>\n          查看\n        </Button>\n        <TrainInfoDialog trainNo={TrainNo} isOpen={isOpen} toggle={toggle} />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Row;\n","import Row, { NoResults } from \"./Row\";\n\nexport { NoResults };\nexport default Row;\n","import { useState, useCallback } from \"react\";\n\nexport default function useToggle(init = false) {\n  const [value, setValue] = useState(init);\n  const toggle = useCallback(() => setValue(!value), [value]);\n  return [value, toggle];\n}\n","import React, { useState } from \"react\";\nimport useSWR from \"swr\";\n\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/THSR\";\nimport { timesToMins } from \"utils\";\n\nimport Row, { NoResults } from \"./components/Row\";\nimport SortIcon from \"components/SortIcon\";\n\nconst TrainDetail = ({ departure, arrival, trainDate }) => {\n  const [sortBy, setSortBy] = useState();\n  const [order, setOrder] = useState();\n\n  const shouldFetch = departure.StationID && arrival.StationID && trainDate;\n\n  // GET 取得指定[日期],[起迄站間]之時刻表資料\n  const { data } = useSWR(\n    () =>\n      shouldFetch &&\n      `/v2/Rail/TRA/DailyTimetable/OD/${departure.StationID}/to/${arrival.StationID}/${trainDate}?format=JSON`,\n    fetcher,\n    swrConfig\n  );\n\n  const onClickDepartureSort = () => {\n    setSortBy(\"departure\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const onClickArrivalSort = () => {\n    setSortBy(\"arrival\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const trainDetails = data ? data : [];\n\n  const renderList = trainDetails.sort((a, b) => {\n    if (sortBy === \"departure\") {\n      const aDepTimeMins = timesToMins(a.OriginStopTime.DepartureTime);\n      const bDepTimeMins = timesToMins(b.OriginStopTime.DepartureTime);\n\n      return order === \"desc\"\n        ? bDepTimeMins - aDepTimeMins\n        : aDepTimeMins - bDepTimeMins;\n    } else if (sortBy === \"arrival\") {\n      const aArrTimeMins = timesToMins(a.DestinationStopTime.ArrivalTime);\n      const bArrTimeMins = timesToMins(b.DestinationStopTime.ArrivalTime);\n\n      return order === \"desc\"\n        ? bArrTimeMins - aArrTimeMins\n        : aArrTimeMins - bArrTimeMins;\n    } else {\n      return true;\n    }\n  });\n\n  return (\n    <div>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>車號</TableCell>\n            <TableCell onClick={onClickDepartureSort}>\n              <span>發車</span>\n              {sortBy === \"departure\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell onClick={onClickArrivalSort}>\n              <span>到達</span>\n              {sortBy === \"arrival\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell>詳細資訊</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {renderList.length > 0 ? (\n            renderList.map(detail => (\n              <Row key={detail.DailyTrainInfo.TrainNo} detail={detail} />\n            ))\n          ) : (\n            <NoResults />\n          )}\n        </TableBody>\n      </Table>\n      <footer className=\"fixed-bottom\">\n        <p>更新時間: {data?.[0]?.UpdateTime || \"---\"}</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default TrainDetail;\n","import TrainDetail from \"./TrainDetail\";\n\nexport default TrainDetail;\n","import React, { Suspense, useState } from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nimport SearchPanel from \"./components/SearchPanel\";\nimport TrainDetail from \"./components/TrainDetail\";\nimport Context from \"./context\";\n\nconst TRA = () => {\n  const [trainDate, setTrainDate] = useState(\"\");\n  const [departure, setDeparture] = useState(\"\");\n  const [arrival, setArrival] = useState(\"\");\n\n  const onSearch = ({ date, departure, arrival }) => {\n    setTrainDate(date);\n    setDeparture(departure);\n    setArrival(arrival);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h3\">台鐵時刻查詢</Typography>\n      <Suspense fallback={<div>Get stations...</div>}>\n        <SearchPanel onSearch={onSearch} />\n      </Suspense>\n      <Context.Provider value={{ trainDate, departure, arrival }}>\n        <Suspense fallback={<div>Get train details...</div>}>\n          <TrainDetail\n            departure={departure}\n            arrival={arrival}\n            trainDate={trainDate}\n          />\n        </Suspense>\n      </Context.Provider>\n    </div>\n  );\n};\n\nexport default TRA;\n","import TRA from \"./TRA\";\n\nexport default TRA;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport GoTop from \"./components/GoTop\";\nimport THSR from \"./components/THSR\";\nimport TRA from \"./components/TRA\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box pt={2}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nfunction App() {\n  const [transportation, setTransportation] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setTransportation(newValue);\n  };\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\" id=\"back-to-top-anchor\">\n        <Tabs\n          value={transportation}\n          onChange={handleChange}\n          aria-label=\"App tabs\"\n        >\n          <Tab label=\"THSR\" {...a11yProps(0)} />\n          <Tab label=\"TRA\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={transportation} index={0}>\n        <THSR />\n      </TabPanel>\n      <TabPanel value={transportation} index={1}>\n        <TRA />\n      </TabPanel>\n      <GoTop />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}