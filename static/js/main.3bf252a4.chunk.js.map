{"version":3,"sources":["components/GoTop/GoTop.jsx","apis/config.js","apis/THSR.js","utils.js","components/SortIcon/SortIcon.jsx","components/SortIcon/index.js","components/THSR/components/TrainDetail/components/Row.jsx","components/THSR/components/TrainDetail/TrainDetail.jsx","components/THSR/components/TrainDetail/index.js","components/THSR/components/PrizeDetail/PrizeDetail.jsx","components/THSR/components/PrizeDetail/index.js","components/Select/Select.jsx","components/THSR/components/SearchPanel/SearchPanel.jsx","components/THSR/components/SearchPanel/index.js","components/THSR/THSR.jsx","components/THSR/index.js","apis/TRA.js","hooks/useGeoLocation.js","components/TRA/components/SearchPanel/SearchPanel.jsx","components/TRA/components/SearchPanel/index.js","components/TRA/context.js","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/DailyTimeTable/DailyTimeTable.jsx","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/DailyTimeTable/index.js","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/TrainTodayInfo/TrainTodayInfo.jsx","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/TrainTodayInfo/index.js","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/TrainInfoDialog.jsx","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/index.js","components/TRA/components/TrainDetail/components/Row/Row.jsx","components/TRA/components/TrainDetail/components/Row/index.js","hooks/useToggle.js","components/TRA/components/TrainDetail/TrainDetail.jsx","components/TRA/components/TrainDetail/index.js","components/TRA/TRA.jsx","components/TRA/index.js","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","bottom","spacing","right","zIndex","ScrollTop","classes","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","onClick","event","anchor","target","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","className","Fab","color","size","aria-label","swrConfig","suspense","revalidateOnFocus","revalidateOnReconnect","refreshWhenOffline","refreshWhenHidden","refreshInterval","fetcher","url","fetch","method","mode","headers","then","r","json","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","timesToMins","times","arr","split","parseInt","prefixZero","str","toRad","value","Math","PI","SortIcon","order","NoResults","TableRow","TableCell","colSpan","Row","detail","TrainNo","DailyTrainInfo","DepartureTime","OriginStopTime","ArrivalTime","DestinationStopTime","Dmins","Amins","Typography","mins","h","toString","minsToTimes","TrainDetail","departure","arrival","trainDate","departureTime","arrivalTime","useState","sortBy","setSortBy","setOrder","shouldFetch","data","useSWR","depFilterTime","arrFilterTime","renderList","filter","depTime","arrTime","sort","a","b","aDepTimeMins","bDepTimeMins","aArrTimeMins","bArrTimeMins","Table","TableHead","TableBody","map","key","UpdateTime","StyledTable","styled","table","PrizeDetail","prizeList","Fares","departureStation","OriginStationName","Zh_tw","En","arrivalStation","DestinationStationName","v","Price","TicketType","StyledSelect","withStyles","textAlign","Select","TimeSelect","props","MenuItem","Selector","options","o","dep","getHours","defaultDepTime","defaultArrTime","getDefaultHour","SearchForm","SearchPanel","onSearch","now","setDate","setDeparture","setArrival","setDepartureTime","setArriveTime","stations","val","StationID","StationName","Box","my","Paper","Container","FormControl","margin","fullWidth","TextField","type","id","onChange","e","currentTarget","variant","label","InputLabel","labelId","Button","disabled","THSR","setTrainDate","setArrivalTime","fallback","enableHighAccuracy","timeout","maximumAge","Option","option","icon","style","marginRight","location","setPosition","success","pos","coords","error","err","console","warn","code","message","useEffect","navigator","geolocation","getCurrentPosition","useGeoLocation","closestStation","myLocation","closest","min","Number","MAX_SAFE_INTEGER","forEach","station","fromLat","latitude","fromLon","longitude","toLat","StationPosition","PositionLat","toLon","PositionLon","distance","acos","sin","cos","Boolean","getClosestStation","Autocomplete","name","renderInput","params","renderOption","getOptionLabel","getOptionSelected","StationUID","getOptionDisabled","formContext","React","createContext","Station","isFirstStaion","isLastStation","useContext","Context","dotColor","undefined","stationName","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","DailyTimeTable","trainNo","stops","StopTimes","Timeline","align","i","tripLine","0","1","2","wheelChairFlag","packageServiceFlag","diningFlag","bikeFlag","breastFeedingFlag","dailyFlag","serviceAddedFlag","TrainTodayInfo","info","startStationName","StartingStationName","endStationName","EndingStationName","gutterBottom","TripLine","WheelchairFlag","PackageServiceFlag","DiningFlag","BikeFlag","BreastFeedingFlag","DailyFlag","ServiceAddedFlag","Note","TrainTypeName","Transition","forwardRef","ref","Slide","direction","appBar","title","marginLeft","flex","TrainInfoDialog","isOpen","toggle","Dialog","fullScreen","open","onClose","TransitionComponent","AppBar","Toolbar","IconButton","edge","DialogContent","init","setValue","useCallback","useToggle","TRA","Provider","TabPanel","children","index","other","hidden","aria-labelledby","pt","a11yProps","App","transportation","setTransportation","Tabs","newValue","Tab","GoTop","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3bf252a4.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Fab from \"@material-ui/core/Fab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(6),\n    right: theme.spacing(2),\n    zIndex: 1200\n  }\n}));\n\nfunction ScrollTop() {\n  const classes = useStyles();\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 100\n  });\n\n  const handleClick = event => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </div>\n    </Zoom>\n  );\n}\n\nexport default ScrollTop;\n","export default function getFetchOptions() {\n  return {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept-Encoding\": \"gzip, deflate\"\n    }\n  };\n}\n\nexport const swrConfig = {\n  suspense: true,\n  revalidateOnFocus: false,\n  revalidateOnReconnect: false,\n  refreshWhenOffline: false,\n  refreshWhenHidden: false,\n  refreshInterval: 0\n};\n","import getFetchOptions from \"./config\";\n\n// API spec: https://ptx.transportdata.tw/MOTC?t=Rail&v=2#!/THSR/THSRApi_DailyTimetable\nconst API_BASE = \"https://ptx.transportdata.tw/MOTC\";\n\nexport const fetcher = url =>\n  fetch(API_BASE + url, getFetchOptions()).then(r => r.json());\n","export function formatDate(date) {\n  let d = new Date(date),\n    month = \"\" + (d.getMonth() + 1),\n    day = \"\" + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = \"0\" + month;\n  if (day.length < 2) day = \"0\" + day;\n\n  return [year, month, day].join(\"-\");\n}\n\nexport function timesToMins(times) {\n  const arr = times.split(\":\");\n  return parseInt(arr[0], 10) * 60 + parseInt(arr[1], 10);\n}\n\nfunction prefixZero(str) {\n  return str.length < 2 ? \"0\" + str : str;\n}\n\nexport function minsToTimes(mins) {\n  let h = 0;\n  while (mins >= 60) {\n    mins -= 60;\n    h += 1;\n  }\n  h = prefixZero(h.toString());\n  mins = prefixZero(mins.toString());\n  return h + \":\" + mins;\n}\n\nexport function getDefaultHour() {\n  let dep = new Date().getHours() + 1;\n  let arr = dep + 3;\n  dep = prefixZero(dep.toString()) + \":00\";\n  arr = prefixZero(arr.toString()) + \":00\";\n  return {\n    defaultDepTime: dep,\n    defaultArrTime: arr\n  };\n}\n\nconst toRad = value => (value * Math.PI) / 180;\n\nconst robustAcos = value => {\n  if (value > 1) {\n    return 1;\n  }\n  if (value < -1) {\n    return -1;\n  }\n\n  return value;\n};\n\nexport const getClosestStation = (myLocation, stations) => {\n  let closest = null;\n  let min = Number.MAX_SAFE_INTEGER;\n\n  if (!myLocation || myLocation.error || !stations.length) return null;\n\n  stations.forEach(station => {\n    const earthRadius = 6378137;\n    const fromLat = myLocation.latitude;\n    const fromLon = myLocation.longitude;\n    const toLat = station.StationPosition.PositionLat;\n    const toLon = station.StationPosition.PositionLon;\n\n    const distance =\n      Math.acos(\n        robustAcos(\n          Math.sin(toRad(toLat)) * Math.sin(toRad(fromLat)) +\n            Math.cos(toRad(toLat)) *\n              Math.cos(toRad(fromLat)) *\n              Math.cos(toRad(fromLon) - toRad(toLon))\n        )\n      ) * earthRadius;\n\n    if (distance < min) {\n      min = distance;\n      closest = station;\n    }\n  });\n\n  return {\n    ...closest,\n    StationName: {\n      Zh_tw: `最近的車站: ${closest.StationName.Zh_tw}`,\n      En: \"\"\n    },\n    icon: true,\n    disabled: Boolean(myLocation?.error)\n  };\n};\n","import React from \"react\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\n\nconst SortIcon = ({ order }) => {\n  return order === \"desc\" ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />;\n};\n\nexport default SortIcon;\n","import SortIcon from \"./SortIcon\";\n\nexport default SortIcon;\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { minsToTimes, timesToMins } from \"utils\";\n\nexport const NoResults = () => (\n  <TableRow>\n    <TableCell colSpan=\"4\">尚無資料</TableCell>\n  </TableRow>\n);\n\nconst Row = ({ detail }) => {\n  const TrainNo = detail.DailyTrainInfo.TrainNo;\n  const DepartureTime = detail.OriginStopTime.DepartureTime;\n  const ArrivalTime = detail.DestinationStopTime.ArrivalTime;\n  const Dmins = timesToMins(DepartureTime);\n  const Amins = timesToMins(ArrivalTime);\n\n  return (\n    <TableRow>\n      <TableCell>\n        <Typography color=\"primary\">{TrainNo}</Typography>\n      </TableCell>\n      <TableCell>{DepartureTime}</TableCell>\n      <TableCell>{ArrivalTime}</TableCell>\n      <TableCell>{minsToTimes(Amins - Dmins)}</TableCell>\n    </TableRow>\n  );\n};\n\nexport default Row;\n","import React, { useState } from \"react\";\nimport useSWR from \"swr\";\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/THSR\";\nimport { timesToMins } from \"utils\";\nimport SortIcon from \"components/SortIcon\";\n\nimport Row, { NoResults } from \"./components/Row\";\n\nconst TrainDetail = ({\n  departure,\n  arrival,\n  trainDate,\n  departureTime,\n  arrivalTime\n}) => {\n  const [sortBy, setSortBy] = useState();\n  const [order, setOrder] = useState();\n\n  const shouldFetch = departure && arrival && trainDate;\n\n  // GET 取得指定[日期],[起迄站間]之時刻表資料\n  const { data } = useSWR(\n    () =>\n      shouldFetch &&\n      `/v2/Rail/THSR/DailyTimetable/OD/${departure}/to/${arrival}/${trainDate}`,\n    fetcher,\n    swrConfig\n  );\n\n  const depFilterTime = timesToMins(departureTime);\n  const arrFilterTime = timesToMins(arrivalTime);\n\n  const trainDetails = data\n    ? data.filter(d => {\n        const depTime = timesToMins(d.OriginStopTime.DepartureTime);\n        const arrTime = timesToMins(d.DestinationStopTime.ArrivalTime);\n        return depTime > depFilterTime && arrTime < arrFilterTime;\n      })\n    : [];\n\n  const onClickDepartureSort = () => {\n    setSortBy(\"departure\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const onClickArrivalSort = () => {\n    setSortBy(\"arrival\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const renderList = trainDetails.sort((a, b) => {\n    if (sortBy === \"departure\") {\n      const aDepTimeMins = timesToMins(a.OriginStopTime.DepartureTime);\n      const bDepTimeMins = timesToMins(b.OriginStopTime.DepartureTime);\n\n      return order === \"desc\"\n        ? bDepTimeMins - aDepTimeMins\n        : aDepTimeMins - bDepTimeMins;\n    } else if (sortBy === \"arrival\") {\n      const aArrTimeMins = timesToMins(a.DestinationStopTime.ArrivalTime);\n      const bArrTimeMins = timesToMins(b.DestinationStopTime.ArrivalTime);\n\n      return order === \"desc\"\n        ? bArrTimeMins - aArrTimeMins\n        : aArrTimeMins - bArrTimeMins;\n    } else {\n      return true;\n    }\n  });\n\n  return (\n    <div>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>車次</TableCell>\n            <TableCell onClick={onClickDepartureSort}>\n              <span>發車</span>\n              {sortBy === \"departure\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell onClick={onClickArrivalSort}>\n              <span>到達</span>\n              {sortBy === \"arrival\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell>總時程</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {renderList.length > 0 ? (\n            renderList.map(detail => (\n              <Row key={detail.DailyTrainInfo.TrainNo} detail={detail} />\n            ))\n          ) : (\n            <NoResults />\n          )}\n        </TableBody>\n      </Table>\n      <footer className=\"fixed-bottom\">\n        <p>更新時間: {data?.[0]?.UpdateTime || \"---\"}</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default TrainDetail;\n","import TrainDetail from \"./TrainDetail\";\n\nexport default TrainDetail;\n","import React from \"react\";\nimport useSWR from \"swr\";\n\nimport styled from \"styled-components\";\nimport { fetcher } from \"apis/THSR\";\nimport { swrConfig } from \"apis/config\";\n\nconst StyledTable = styled.table`\n  width: 100%;\n  background-color: #aeeff9;\n  th,\n  td {\n    padding: 0.3em;\n  }\n`;\n\nconst PrizeDetail = ({ departure, arrival }) => {\n  const shouldFetch = departure && arrival;\n\n  // GET 取得指定[起訖站間]之票價資料\n  const { data } = useSWR(\n    () => shouldFetch && `/v2/Rail/THSR/ODFare/${departure}/to/${arrival}`,\n    fetcher,\n    swrConfig\n  );\n\n  const prizeList = data ? data[0].Fares : [];\n\n  if (prizeList.length < 1) return null;\n\n  const departureStation =\n    data[0].OriginStationName.Zh_tw + data[0].OriginStationName.En;\n  const arrivalStation =\n    data[0].DestinationStationName.Zh_tw + data[0].DestinationStationName.En;\n\n  return (\n    <div className=\"mt-3 mb-3\">\n      <h3>票價資訊</h3>\n      <StyledTable>\n        <thead>\n          <tr>\n            <th colSpan=\"3\">\n              {departureStation}\n              <span className=\"ml-2 mr-2\">&rarr;</span>\n              {arrivalStation}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {prizeList.map(v => (\n              <td key={v.Price}>\n                {v.TicketType}:<strong>&#36;{v.Price}</strong>\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </StyledTable>\n    </div>\n  );\n};\n\nexport default PrizeDetail;\n","import PrizeDetail from \"./PrizeDetail\";\n\nexport default PrizeDetail;\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst StyledSelect = withStyles({\n  root: {\n    textAlign: \"left\"\n  }\n})(Select);\n\nconst Selector = ({ options, ...props }) => {\n  return (\n    <StyledSelect {...props}>\n      {options.length > 0 ? (\n        options.map(o => (\n          <MenuItem key={o.value} value={o.value}>\n            {o.Zh_tw + o.En}\n          </MenuItem>\n        ))\n      ) : (\n        <MenuItem value=\"\">無資料</MenuItem>\n      )}\n    </StyledSelect>\n  );\n};\n\nexport const TimeSelect = props => (\n  <StyledSelect {...props}>\n    <MenuItem value=\"06:00\">06:00</MenuItem>\n    <MenuItem value=\"07:00\">07:00</MenuItem>\n    <MenuItem value=\"08:00\">08:00</MenuItem>\n    <MenuItem value=\"09:00\">09:00</MenuItem>\n    <MenuItem value=\"10:00\">10:00</MenuItem>\n    <MenuItem value=\"11:00\">11:00</MenuItem>\n    <MenuItem value=\"12:00\">12:00</MenuItem>\n    <MenuItem value=\"13:00\">13:00</MenuItem>\n    <MenuItem value=\"14:00\">14:00</MenuItem>\n    <MenuItem value=\"15:00\">15:00</MenuItem>\n    <MenuItem value=\"16:00\">16:00</MenuItem>\n    <MenuItem value=\"17:00\">17:00</MenuItem>\n    <MenuItem value=\"18:00\">18:00</MenuItem>\n    <MenuItem value=\"19:00\">19:00</MenuItem>\n    <MenuItem value=\"20:00\">20:00</MenuItem>\n    <MenuItem value=\"21:00\">21:00</MenuItem>\n    <MenuItem value=\"22:00\">22:00</MenuItem>\n    <MenuItem value=\"23:00\">23:00</MenuItem>\n    <MenuItem value=\"24:00\">24:00</MenuItem>\n  </StyledSelect>\n);\n\nexport default Selector;\n","import React, { useState } from \"react\";\nimport useSWR from \"swr\";\n\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Select, { TimeSelect } from \"components/Select\";\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/THSR\";\nimport { formatDate, getDefaultHour } from \"utils\";\n\nconst { defaultDepTime, defaultArrTime } = getDefaultHour();\n\nconst SearchForm = ({ onSearch, className }) => {\n  const [date, setDate] = useState(() => formatDate(Date.now()));\n  const [departure, setDeparture] = useState(\"1000\"); // 台北\n  const [arrival, setArrival] = useState(\"1070\"); // 左營\n  const [departureTime, setDepartureTime] = useState(defaultDepTime);\n  const [arrivalTime, setArriveTime] = useState(defaultArrTime);\n\n  // GET 取得車站基本資料\n  const { data } = useSWR(\"/v2/Rail/THSR/Station\", fetcher, swrConfig);\n\n  const stations = data\n    ? data.map(val => ({\n        value: val.StationID,\n        ...val.StationName\n      }))\n    : [];\n\n  const depArrSwitch = () => {\n    setDeparture(arrival);\n    setArrival(departure);\n  };\n\n  const handleSearch = () =>\n    onSearch({\n      date,\n      departure,\n      arrival,\n      departureTime,\n      arrivalTime\n    });\n\n  return (\n    <Box my={2}>\n      <Paper>\n        <Container>\n          <FormControl margin=\"normal\" fullWidth>\n            <TextField\n              type=\"date\"\n              id=\"trip-start\"\n              value={date}\n              onChange={e => setDate(e.currentTarget.value)}\n              variant=\"outlined\"\n              label=\"日期\"\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <InputLabel id=\"OrginStation\">起站</InputLabel>\n            <Select\n              label=\"起站\"\n              labelId=\"OrginStation\"\n              options={stations}\n              value={departure}\n              onChange={e => setDeparture(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\">\n            <Button variant=\"contained\" color=\"primary\" onClick={depArrSwitch}>\n              起迄站交換\n            </Button>\n          </FormControl>\n          <FormControl fullWidth variant=\"outlined\">\n            <InputLabel id=\"DestinationStation\">迄站</InputLabel>\n            <Select\n              label=\"迄站\"\n              labelId=\"DestinationStation\"\n              options={stations}\n              value={arrival}\n              onChange={e => setArrival(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <InputLabel id=\"DepartureTime\">最早出發</InputLabel>\n            <TimeSelect\n              label=\"最早出發\"\n              labelId=\"DepartureTime\"\n              value={departureTime}\n              onChange={e => setDepartureTime(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <InputLabel id=\"ArrivalTime\">最晚抵達</InputLabel>\n            <TimeSelect\n              label=\"最晚抵達\"\n              labelId=\"ArrivalTime\"\n              value={arrivalTime}\n              onChange={e => setArriveTime(e.target.value)}\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSearch}\n              disabled={!departure || !arrival}\n            >\n              查詢\n            </Button>\n          </FormControl>\n        </Container>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default SearchForm;\n","import SearchPanel from \"./SearchPanel\";\n\nexport default SearchPanel;\n","import React, { useState, Suspense } from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nimport TrainDetail from \"./components/TrainDetail\";\nimport PrizeDetail from \"./components/PrizeDetail\";\nimport SearchPanel from \"./components/SearchPanel\";\n\nconst THSR = () => {\n  const [trainDate, setTrainDate] = useState(\"\");\n  const [departure, setDeparture] = useState(\"\");\n  const [arrival, setArrival] = useState(\"\");\n  const [departureTime, setDepartureTime] = useState(\"\");\n  const [arrivalTime, setArrivalTime] = useState(\"\");\n\n  const searchClick = ({\n    date,\n    departure,\n    arrival,\n    departureTime,\n    arrivalTime\n  }) => {\n    setTrainDate(date);\n    setDeparture(departure);\n    setArrival(arrival);\n    setDepartureTime(departureTime);\n    setArrivalTime(arrivalTime);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h3\">高鐵時刻查詢</Typography>\n      <Suspense fallback={<div>Get stations...</div>}>\n        <SearchPanel onSearch={searchClick} />\n      </Suspense>\n      <Suspense fallback={<div>Get train details...</div>}>\n        <TrainDetail\n          departure={departure}\n          arrival={arrival}\n          trainDate={trainDate}\n          departureTime={departureTime}\n          arrivalTime={arrivalTime}\n        />\n      </Suspense>\n      <Suspense fallback={<div>Get prize detail...</div>}>\n        <PrizeDetail departure={departure} arrival={arrival} />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default THSR;\n","import THSR from \"./THSR\";\n\nexport default THSR;\n","import getFetchOptions from \"./config\";\n\n// API spec: https://ptx.transportdata.tw/MOTC?t=Rail&v=2#!/TRA/TRAApi_ODDailyTimetable\nconst API_BASE = \"https://ptx.transportdata.tw/MOTC\";\n\nexport const fetcher = url =>\n  fetch(API_BASE + url, getFetchOptions()).then(r => r.json());\n","import { useState, useEffect } from \"react\";\n\nconst options = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 0\n};\n\nexport default function useGeoLocation() {\n  const [position, setPosition] = useState(null);\n\n  function success(pos) {\n    setPosition(pos.coords);\n  }\n\n  function error(err) {\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n    setPosition({ error: err });\n  }\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(success, error, options);\n    } else {\n      setPosition({ error: \"You device don't support geolocation api\" });\n    }\n  }, []);\n\n  return position;\n}\n","import React, { useState } from \"react\";\n\nimport useSWR from \"swr\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\n\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/TRA\";\nimport { formatDate, getClosestStation } from \"utils\";\nimport useGeoLocation from \"hooks/useGeoLocation\";\n\nconst Option = option => {\n  return (\n    <>\n      {option.icon && (\n        <LocationOnIcon color=\"primary\" style={{ marginRight: 8 }} />\n      )}\n      {option.StationName.Zh_tw + \" \" + option.StationName.En}\n    </>\n  );\n};\n\nconst SearchForm = ({ onSearch }) => {\n  const [date, setDate] = useState(() => formatDate(Date.now()));\n  const [departure, setDeparture] = useState(null);\n  const [arrival, setArrival] = useState(null);\n  const location = useGeoLocation();\n\n  // GET 取得車站基本資料\n  const { data } = useSWR(\n    \"/v2/Rail/TRA/Station?$top=500&$format=JSON\",\n    fetcher,\n    swrConfig\n  );\n\n  const closestStation = getClosestStation(location, data);\n\n  const stations = data\n    ? [closestStation, ...data].filter(v => v !== null)\n    : [];\n\n  const depArrSwitch = () => {\n    setDeparture(arrival);\n    setArrival(departure);\n  };\n\n  const handleSearch = () =>\n    onSearch({\n      date,\n      departure,\n      arrival\n    });\n\n  return (\n    <Box my={2}>\n      <Paper>\n        <Container>\n          <FormControl margin=\"normal\" fullWidth>\n            <TextField\n              type=\"date\"\n              id=\"trip-start\"\n              value={date}\n              onChange={e => setDate(e.currentTarget.value)}\n              variant=\"outlined\"\n              label=\"日期\"\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <Autocomplete\n              name=\"OrginStation\"\n              id=\"OrginStation\"\n              options={stations}\n              onChange={(e, v) => setDeparture(v)}\n              value={departure}\n              renderInput={params => (\n                <TextField {...params} label=\"起站\" variant=\"outlined\" />\n              )}\n              renderOption={Option}\n              getOptionLabel={({ StationName }) =>\n                StationName.Zh_tw + \" \" + StationName.En\n              }\n              getOptionSelected={(o, v) => o.StationUID === v.StationUID}\n              getOptionDisabled={o => o.disabled}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\">\n            <Button variant=\"contained\" color=\"primary\" onClick={depArrSwitch}>\n              起迄站交換\n            </Button>\n          </FormControl>\n          <FormControl fullWidth variant=\"outlined\">\n            <Autocomplete\n              name=\"DestinationStation\"\n              id=\"DestinationStation\"\n              options={stations}\n              onChange={(e, v) => setArrival(v)}\n              value={arrival}\n              renderInput={params => (\n                <TextField {...params} label=\"迄站\" variant=\"outlined\" />\n              )}\n              renderOption={Option}\n              getOptionLabel={option =>\n                option.StationName.Zh_tw + \" \" + option.StationName.En\n              }\n              getOptionSelected={(o, v) => o.StationUID === v.StationUID}\n              getOptionDisabled={o => o.disabled}\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n              onClick={handleSearch}\n              disabled={!departure || !arrival}\n            >\n              查詢\n            </Button>\n          </FormControl>\n        </Container>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default SearchForm;\n","import SearchPanel from \"./SearchPanel\";\n\nexport default SearchPanel;\n","import React from \"react\";\n\nconst formContext = React.createContext({\n  trainDate: \"\",\n  departure: \"\",\n  arrival: \"\",\n  departureTime: \"\",\n  arrivalTime: \"\"\n});\n\nexport default formContext;\n","import React, { useContext } from \"react\";\nimport useSWR from \"swr\";\n\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/TRA\";\nimport Context from \"components/TRA/context\";\n\nconst Station = ({ station, isFirstStaion, isLastStation }) => {\n  const { departure, arrival } = useContext(Context);\n  const isTargetStation =\n    station.StationID === departure.StationID ||\n    station.StationID === arrival.StationID;\n\n  const dotColor = isTargetStation\n    ? \"secondary\"\n    : isFirstStaion || isLastStation\n    ? \"primary\"\n    : undefined;\n\n  const stationName = `${station.StationName.Zh_tw} ${station.StationName.En}`;\n\n  return (\n    <TimelineItem>\n      <TimelineOppositeContent>\n        <Typography color=\"textSecondary\">{station.ArrivalTime}</Typography>\n      </TimelineOppositeContent>\n      <TimelineSeparator>\n        <TimelineDot color={dotColor} />\n        <TimelineConnector />\n      </TimelineSeparator>\n      <TimelineContent>\n        <Typography>{stationName}</Typography>\n      </TimelineContent>\n    </TimelineItem>\n  );\n};\n\nconst DailyTimeTable = ({ trainNo }) => {\n  // GET 取得當天指定[車次]的時刻表資料\n  const { data } = useSWR(\n    () => trainNo && `/v2/Rail/TRA/DailyTimetable/Today/TrainNo/${trainNo}`,\n    fetcher,\n    swrConfig\n  );\n\n  const stops = data ? data[0].StopTimes : [];\n\n  return (\n    <Timeline align=\"right\">\n      {stops.map((v, i) => (\n        <Station\n          key={v.StationID}\n          station={v}\n          isFirstStaion={i === 0}\n          isLastStation={i === stops.length - 1}\n        />\n      ))}\n    </Timeline>\n  );\n};\n\nexport default DailyTimeTable;\n","import DailyTimeTable from \"./DailyTimeTable\";\n\nexport default DailyTimeTable;\n","import React from \"react\";\nimport useSWR from \"swr\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { fetcher } from \"apis/TRA\";\nimport { swrConfig } from \"apis/config\";\n\nconst tripLine = {\n  0: \"不經山海線\",\n  1: \"山線\",\n  2: \"海線\"\n};\n\nconst wheelChairFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst packageServiceFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst diningFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst bikeFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst breastFeedingFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst dailyFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst serviceAddedFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst TrainTodayInfo = ({ trainNo }) => {\n  // GET 取得當天指定[車次]的車次資料\n  const { data } = useSWR(\n    () => trainNo && `/v2/Rail/TRA/DailyTrainInfo/Today/TrainNo/${trainNo}`,\n    fetcher,\n    swrConfig\n  );\n\n  if (!data) return null;\n\n  const info = data[0];\n  const startStationName = `${info.StartingStationName.Zh_tw} ${info.StartingStationName.En}`;\n  const endStationName = `${info.EndingStationName.Zh_tw} ${info.EndingStationName.En}`;\n\n  return (\n    <Box my={2}>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>起站: </strong>\n        {startStationName}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>訖站: </strong>\n        {endStationName}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>山海線類型: </strong>\n        {tripLine[info.TripLine]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否設身障旅客專用座位車: </strong>\n        {wheelChairFlag[info.WheelchairFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否提供行李服務: </strong>\n        {packageServiceFlag[info.PackageServiceFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否提供訂便當服務: </strong>\n        {diningFlag[info.DiningFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否人車同行班次(置於攜車袋之自行車各級列車均可乘車): </strong>\n        {bikeFlag[info.BikeFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否設有哺(集)乳室車廂: </strong>\n        {breastFeedingFlag[info.BreastFeedingFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否每日行駛: </strong>\n        {dailyFlag[info.DailyFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否為加班車: </strong>\n        {serviceAddedFlag[info.ServiceAddedFlag]}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        <strong>其他: </strong>\n        {info.Note.Zh_tw} {info.TrainTypeName.Zh_tw}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default TrainTodayInfo;\n","import TrainTodayInfo from \"./TrainTodayInfo\";\n\nexport default TrainTodayInfo;\n","import React, { Suspense } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport DailyTimeTable from \"./components/DailyTimeTable\";\nimport TrainTodayInfo from \"./components/TrainTodayInfo\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"static\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}));\n\nconst TrainInfoDialog = ({ isOpen, toggle, trainNo }) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      fullScreen\n      open={isOpen}\n      onClose={toggle}\n      TransitionComponent={Transition}\n    >\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={toggle}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            車號 - {trainNo}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <DialogContent>\n        <Suspense fallback={<div>Get train today info...</div>}>\n          <TrainTodayInfo trainNo={isOpen && trainNo} />\n        </Suspense>\n        <Suspense fallback={<div>Get train time table...</div>}>\n          <DailyTimeTable trainNo={isOpen && trainNo} />\n        </Suspense>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default TrainInfoDialog;\n","import TrainInfoDialog from \"./TrainInfoDialog\";\n\nexport default TrainInfoDialog;\n","import React from \"react\";\n\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport useToggle from \"hooks/useToggle\";\nimport TrainInfoDialog from \"./components/TrainInfoDialog\";\n\nexport const NoResults = () => (\n  <TableRow>\n    <TableCell colSpan=\"4\">尚無資料</TableCell>\n  </TableRow>\n);\n\nconst Row = ({ detail }) => {\n  const [isOpen, toggle] = useToggle();\n\n  const TrainNo = detail.DailyTrainInfo.TrainNo;\n  const DepartureTime = detail.OriginStopTime.DepartureTime;\n  const ArrivalTime = detail.DestinationStopTime.ArrivalTime;\n\n  return (\n    <TableRow>\n      <TableCell>\n        <Typography color=\"primary\">{TrainNo}</Typography>\n      </TableCell>\n      <TableCell>{DepartureTime}</TableCell>\n      <TableCell>{ArrivalTime}</TableCell>\n      <TableCell>\n        <Button color=\"primary\" onClick={toggle}>\n          查看\n        </Button>\n        <TrainInfoDialog trainNo={TrainNo} isOpen={isOpen} toggle={toggle} />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Row;\n","import Row, { NoResults } from \"./Row\";\n\nexport { NoResults };\nexport default Row;\n","import { useState, useCallback } from \"react\";\n\nexport default function useToggle(init = false) {\n  const [value, setValue] = useState(init);\n  const toggle = useCallback(() => setValue(!value), [value]);\n  return [value, toggle];\n}\n","import React, { useState } from \"react\";\nimport useSWR from \"swr\";\n\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/THSR\";\nimport { timesToMins } from \"utils\";\n\nimport Row, { NoResults } from \"./components/Row\";\nimport SortIcon from \"components/SortIcon\";\n\nconst TrainDetail = ({ departure, arrival, trainDate }) => {\n  const [sortBy, setSortBy] = useState();\n  const [order, setOrder] = useState();\n\n  const shouldFetch = departure.StationID && arrival.StationID && trainDate;\n\n  // GET 取得指定[日期],[起迄站間]之時刻表資料\n  const { data } = useSWR(\n    () =>\n      shouldFetch &&\n      `/v2/Rail/TRA/DailyTimetable/OD/${departure.StationID}/to/${arrival.StationID}/${trainDate}?format=JSON`,\n    fetcher,\n    swrConfig\n  );\n\n  const onClickDepartureSort = () => {\n    setSortBy(\"departure\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const onClickArrivalSort = () => {\n    setSortBy(\"arrival\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const trainDetails = data ? data : [];\n\n  const renderList = trainDetails.sort((a, b) => {\n    if (sortBy === \"departure\") {\n      const aDepTimeMins = timesToMins(a.OriginStopTime.DepartureTime);\n      const bDepTimeMins = timesToMins(b.OriginStopTime.DepartureTime);\n\n      return order === \"desc\"\n        ? bDepTimeMins - aDepTimeMins\n        : aDepTimeMins - bDepTimeMins;\n    } else if (sortBy === \"arrival\") {\n      const aArrTimeMins = timesToMins(a.DestinationStopTime.ArrivalTime);\n      const bArrTimeMins = timesToMins(b.DestinationStopTime.ArrivalTime);\n\n      return order === \"desc\"\n        ? bArrTimeMins - aArrTimeMins\n        : aArrTimeMins - bArrTimeMins;\n    } else {\n      return true;\n    }\n  });\n\n  return (\n    <div>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>車號</TableCell>\n            <TableCell onClick={onClickDepartureSort}>\n              <span>發車</span>\n              {sortBy === \"departure\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell onClick={onClickArrivalSort}>\n              <span>到達</span>\n              {sortBy === \"arrival\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell>詳細資訊</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {renderList.length > 0 ? (\n            renderList.map(detail => (\n              <Row key={detail.DailyTrainInfo.TrainNo} detail={detail} />\n            ))\n          ) : (\n            <NoResults />\n          )}\n        </TableBody>\n      </Table>\n      <footer className=\"fixed-bottom\">\n        <p>更新時間: {data?.[0]?.UpdateTime || \"---\"}</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default TrainDetail;\n","import TrainDetail from \"./TrainDetail\";\n\nexport default TrainDetail;\n","import React, { Suspense, useState } from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nimport SearchPanel from \"./components/SearchPanel\";\nimport TrainDetail from \"./components/TrainDetail\";\nimport Context from \"./context\";\n\nconst TRA = () => {\n  const [trainDate, setTrainDate] = useState(\"\");\n  const [departure, setDeparture] = useState(\"\");\n  const [arrival, setArrival] = useState(\"\");\n\n  const onSearch = ({ date, departure, arrival }) => {\n    setTrainDate(date);\n    setDeparture(departure);\n    setArrival(arrival);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h3\">台鐵時刻查詢</Typography>\n      <Suspense fallback={<div>Get stations...</div>}>\n        <SearchPanel onSearch={onSearch} />\n      </Suspense>\n      <Context.Provider value={{ trainDate, departure, arrival }}>\n        <Suspense fallback={<div>Get train details...</div>}>\n          <TrainDetail\n            departure={departure}\n            arrival={arrival}\n            trainDate={trainDate}\n          />\n        </Suspense>\n      </Context.Provider>\n    </div>\n  );\n};\n\nexport default TRA;\n","import TRA from \"./TRA\";\n\nexport default TRA;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport GoTop from \"./components/GoTop\";\nimport THSR from \"./components/THSR\";\nimport TRA from \"./components/TRA\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box pt={2}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nfunction App() {\n  const [transportation, setTransportation] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setTransportation(newValue);\n  };\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\" id=\"back-to-top-anchor\">\n        <Tabs\n          value={transportation}\n          onChange={handleChange}\n          aria-label=\"App tabs\"\n        >\n          <Tab label=\"THSR\" {...a11yProps(0)} />\n          <Tab label=\"TRA\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={transportation} index={0}>\n        <THSR />\n      </TabPanel>\n      <TabPanel value={transportation} index={1}>\n        <TRA />\n      </TabPanel>\n      <GoTop />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}