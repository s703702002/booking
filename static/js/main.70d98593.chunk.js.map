{"version":3,"sources":["components/GoTop/GoTop.jsx","apis/config.js","apis/THSR.js","components/SortIcon/SortIcon.jsx","components/SortIcon/index.js","components/BottomFooter/BottomFooter.jsx","components/BottomFooter/index.js","components/THSR/components/TrainDetail/components/Row.jsx","components/THSR/components/TrainDetail/TrainDetail.jsx","components/THSR/components/TrainDetail/index.js","components/THSR/components/PrizeDetail/PrizeDetail.jsx","components/THSR/components/PrizeDetail/index.js","components/Select/Select.jsx","components/THSR/components/SearchPanel/SearchPanel.jsx","components/THSR/components/SearchPanel/index.js","components/THSR/THSR.jsx","components/THSR/index.js","apis/TRA.js","utils.js","hooks/useGeoLocation.js","components/TRA/components/SearchPanel/components/TrainTypeSelect/TrainTypeSelect.jsx","components/TRA/components/SearchPanel/components/TrainTypeSelect/index.js","components/TRA/components/SearchPanel/SearchPanel.jsx","components/TRA/components/SearchPanel/index.js","hooks/useToggle.js","components/TRA/context.js","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/DailyTimeTable/DailyTimeTable.jsx","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/DailyTimeTable/index.js","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/TrainTodayInfo/TrainTodayInfo.jsx","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/components/TrainTodayInfo/index.js","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/TrainInfoDialog.jsx","components/TRA/components/TrainDetail/components/Row/components/TrainInfoDialog/index.js","components/TRA/components/TrainDetail/components/Row/Row.jsx","components/TRA/components/TrainDetail/components/Row/index.js","components/TRA/components/TrainDetail/TrainDetail.jsx","components/TRA/components/TrainDetail/index.js","components/TRA/TRA.jsx","components/TRA/index.js","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","bottom","spacing","right","zIndex","ScrollTop","classes","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","onClick","event","anchor","target","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","className","Fab","color","size","aria-label","swrConfig","suspense","revalidateOnFocus","revalidateOnReconnect","refreshWhenOffline","refreshWhenHidden","refreshInterval","fetcher","url","fetch","method","mode","headers","then","r","json","SortIcon","order","BottomFooter","styled","footer","NoResults","TableRow","TableCell","colSpan","Row","detail","trainDate","TrainNo","DailyTrainInfo","DepartureTime","OriginStopTime","ArrivalTime","DestinationStopTime","dTime","parseISO","aTime","Typography","differenceInMinutes","TrainDetail","departure","arrival","departureTime","arrivalTime","useState","sortBy","setSortBy","setOrder","shouldFetch","data","useSWR","depFilterTime","arrFilterTime","renderList","filter","d","depTime","arrTime","isAfter","isBefore","sort","a","b","aDepTime","bDepTime","compareDesc","compareAsc","aArrTime","bArrTime","Table","TableHead","TableBody","length","map","key","UpdateTime","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","white","body","fontSize","PrizeDetail","prizeList","Fares","departureStation","OriginStationName","Zh_tw","En","arrivalStation","DestinationStationName","Box","mt","mb","align","variant","TableContainer","component","Paper","v","Price","TicketType","TimeSelect","props","Select","MenuItem","value","Selector","options","o","SearchPanel","onSearch","format","Date","now","date","setDate","setDeparture","setArrival","setDepartureTime","add","hours","setArriveTime","stations","val","StationID","StationName","my","Container","FormControl","margin","fullWidth","TextField","type","id","onChange","e","currentTarget","label","InputLabel","labelId","Button","style","width","disabled","THSR","setTrainDate","setArrivalTime","paddingBottom","fallback","toRad","Math","PI","enableHighAccuracy","timeout","maximumAge","icon","checkedIcon","types","text","TrainTypeSelect","Autocomplete","multiple","disableCloseOnSelect","getOptionLabel","option","defaultValue","limitTags","renderOption","selected","Checkbox","marginRight","checked","renderInput","params","Option","trainType","setTrainType","location","setPosition","success","pos","coords","error","err","console","warn","code","message","useEffect","navigator","geolocation","getCurrentPosition","useGeoLocation","filteredData","closestStation","myLocation","closest","min","Number","MAX_SAFE_INTEGER","forEach","station","fromLat","latitude","fromLon","longitude","toLat","StationPosition","PositionLat","toLon","PositionLon","distance","acos","sin","cos","Boolean","getClosestStation","name","getOptionSelected","StationUID","getOptionDisabled","useToggle","init","setValue","toggle","useCallback","formContext","React","createContext","Station","isFirstStaion","isLastStation","useContext","Context","dotColor","undefined","stationName","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","DailyTimeTable","trainNo","stops","StopTimes","Timeline","i","tripLine","0","1","2","wheelChairFlag","packageServiceFlag","diningFlag","bikeFlag","breastFeedingFlag","dailyFlag","serviceAddedFlag","TrainTodayInfo","info","startStationName","StartingStationName","endStationName","EndingStationName","gutterBottom","TripLine","WheelchairFlag","PackageServiceFlag","DiningFlag","BikeFlag","BreastFeedingFlag","DailyFlag","ServiceAddedFlag","Note","TrainTypeName","Transition","forwardRef","ref","Slide","direction","appBar","title","marginLeft","flex","TrainInfoDialog","isOpen","Dialog","fullScreen","open","onClose","TransitionComponent","AppBar","Toolbar","IconButton","edge","DialogContent","trainTypeFilter","shouldFilterByTrainType","includes","TrainTypeCode","TRA","Provider","TabPanel","children","index","other","hidden","aria-labelledby","pt","list","Lists","toggleDrawer","onItemClick","onKeyDown","List","ListItem","button","ListItemText","primary","App","tab","setTab","darkModeEnabled","toggleDarkMode","openDrawer","useMemo","createMuiTheme","overrides","MuiSvgIcon","verticalAlign","ThemeProvider","CssBaseline","flexGrow","SwipeableDrawer","onOpen","item","GoTop","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"kbAQA,MAAMA,EAAYC,YAAWC,IAAK,CAChCC,KAAM,CACJC,SAAU,QACVC,OAAQH,EAAMI,QAAQ,GACtBC,MAAOL,EAAMI,QAAQ,GACrBE,OAAQ,SAgCGC,MA5Bf,WACE,MAAMC,EAAUV,IACVW,EAAUC,YAAiB,CAC/BC,mBAAmB,EACnBC,UAAW,MAab,OACE,kBAACC,EAAA,EAAD,CAAMC,GAAIL,GACR,yBAAKM,QAZWC,IAClB,MAAMC,GAAUD,EAAME,OAAOC,eAAiBC,UAAUC,cACtD,uBAGEJ,GACFA,EAAOK,eAAe,CAAEC,SAAU,SAAUC,MAAO,YAMxBC,KAAK,eAAeC,UAAWlB,EAAQP,MAChE,kBAAC0B,EAAA,EAAD,CAAKC,MAAM,YAAYC,KAAK,QAAQC,aAAW,sBAC7C,kBAAC,IAAD,U,2HC3BH,MAAMC,EAAY,CACvBC,UAAU,EACVC,mBAAmB,EACnBC,uBAAuB,EACvBC,oBAAoB,EACpBC,mBAAmB,EACnBC,gBAAiB,GCZNC,EAAUC,GACrBC,MAHe,oCAGED,EDLV,CACLE,OAAQ,MACRC,KAAM,OACNC,QAAS,CACP,eAAgB,mBAChB,kBAAmB,mBCAkBC,KAAKC,GAAKA,EAAEC,Q,qBCExCC,ICNAA,EDEE,EAAGC,WACD,SAAVA,EAAmB,kBAAC,IAAD,MAA4B,kBAAC,IAAD,M,2QESzCC,ICZAA,G,ODAMC,EAAOC,OAAV,M,UEKX,MAAMC,GAAY,IACvB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,QAAQ,KAAnB,6BAuBWC,OAnBH,EAAGC,SAAQC,gBACrB,MAAMC,EAAUF,EAAOG,eAAeD,QAChCE,EAAgBJ,EAAOK,eAAeD,cACtCE,EAAcN,EAAOO,oBAAoBD,YACzCE,EAAQC,YAAS,GAAD,OAAIR,EAAJ,YAAiBG,IACjCM,EAAQD,YAAS,GAAD,OAAIR,EAAJ,YAAiBK,IAEvC,OACE,kBAACV,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CAAYxC,MAAM,WAAW+B,IAE/B,kBAACL,EAAA,EAAD,KAAYO,GACZ,kBAACP,EAAA,EAAD,KAAYS,GACZ,kBAACT,EAAA,EAAD,KAAYe,aAAoBF,EAAOF,GAAvC,aCkHSK,IC3IAA,GDiBK,EAClBC,YACAC,UACAd,YACAe,gBACAC,kBACK,IAAD,UACwBC,qBADxB,mBACGC,EADH,KACWC,EADX,OAEsBF,qBAFtB,mBAEG3B,EAFH,KAEU8B,EAFV,KAIEC,EAAcR,GAAaC,GAAWd,EAGpCsB,EAASC,YACf,IACEF,GAAW,0CACwBR,EADxB,eACwCC,EADxC,YACmDd,GAChEpB,EACAP,GALMiD,KAQFE,EAAgBhB,YAAS,GAAD,OAAIR,EAAJ,YAAiBe,IACzCU,EAAgBjB,YAAS,GAAD,OAAIR,EAAJ,YAAiBgB,IA0BzCU,GAxBeJ,EACjBA,EAAKK,OAAOC,IACV,MAAMC,EAAUrB,YAAS,GAAD,OACnBR,EADmB,YACN4B,EAAExB,eAAeD,gBAE7B2B,EAAUtB,YAAS,GAAD,OACnBR,EADmB,YACN4B,EAAEtB,oBAAoBD,cAExC,OACE0B,YAAQF,EAASL,IAAkBQ,YAASF,EAASL,KAGzD,IAY4BQ,KAAK,CAACC,EAAGC,KACvC,GAAe,cAAXjB,EAAwB,CAC1B,MAAMkB,EAAW5B,YAAS,GAAD,OACpBR,EADoB,YACPkC,EAAE9B,eAAeD,gBAE7BkC,EAAW7B,YAAS,GAAD,OACpBR,EADoB,YACPmC,EAAE/B,eAAeD,gBAGnC,MAAiB,SAAVb,EACHgD,YAAYF,EAAUC,GACtBE,YAAWH,EAAUC,GACpB,GAAe,YAAXnB,EAAsB,CAC/B,MAAMsB,EAAWhC,YAAS,GAAD,OACpBR,EADoB,YACPkC,EAAE5B,oBAAoBD,cAElCoC,EAAWjC,YAAS,GAAD,OACpBR,EADoB,YACPmC,EAAE7B,oBAAoBD,cAGxC,MAAiB,SAAVf,EACHgD,YAAYE,EAAUC,GACtBF,YAAWC,EAAUC,GAEzB,OAAO,IAIX,OACE,oCACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAChD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,qBACA,kBAACA,EAAA,EAAD,CAAWvC,QA5CQ,KAC3B8D,EAAU,aACVC,EAAmB,SAAV9B,EAAmB,MAAQ,UA0C5B,eAEc,cAAX4B,EACC,kBAAC,EAAD,CAAU5B,MAAOA,IAEjB,kBAAC,IAAD,OAGJ,kBAACM,EAAA,EAAD,CAAWvC,QA/CM,KACzB8D,EAAU,WACVC,EAAmB,SAAV9B,EAAmB,MAAQ,UA6C5B,eAEc,YAAX4B,EACC,kBAAC,EAAD,CAAU5B,MAAOA,IAEjB,kBAAC,IAAD,OAGJ,kBAACM,EAAA,EAAD,6BAGJ,kBAACgD,EAAA,EAAD,KACGlB,EAAWmB,OAAS,EACnBnB,EAAWoB,IAAI/C,GACb,kBAAC,GAAD,CACEgD,IAAKhD,EAAOG,eAAeD,QAC3BF,OAAQA,EACRC,UAAWA,KAIf,kBAACN,GAAD,QAIN,kBAAC,GAAD,KACE,kBAACgB,EAAA,EAAD,mCAAuB,OAAJY,QAAI,IAAJA,GAAA,UAAAA,EAAO,UAAP,eAAW0B,aAAc,U,iDErHpD,MAAMC,GAAkBC,aAAW5G,IAAK,CACtC6G,KAAM,CACJC,gBAAiB9G,EAAM+G,QAAQC,OAAOC,MACtCrF,MAAO5B,EAAM+G,QAAQC,OAAOE,OAE9BC,KAAM,CACJC,SAAU,MANUR,CAQpBtD,KAsDW+D,IC9EAA,GD0BK,EAAG9C,YAAWC,cAChC,MAAMO,EAAcR,GAAaC,EAGzBQ,EAASC,YACf,IAAMF,GAAW,+BAA4BR,EAA5B,eAA4CC,GAC7DlC,EACAP,GAHMiD,KAMFsC,EAAYtC,EAAOA,EAAK,GAAGuC,MAAQ,GAEzC,GAAID,EAAUf,OAAS,EAAG,OAAO,KAEjC,MAAMiB,EACJxC,EAAK,GAAGyC,kBAAkBC,MAAQ1C,EAAK,GAAGyC,kBAAkBE,GACxDC,EACJ5C,EAAK,GAAG6C,uBAAuBH,MAAQ1C,EAAK,GAAG6C,uBAAuBF,GAExE,OACE,kBAACG,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACD,EAAA,EAAD,CAAKE,GAAI,GACP,kBAAC5D,EAAA,EAAD,CAAY6D,MAAM,SAASC,QAAQ,MAAnC,6BAIF,kBAACC,GAAA,EAAD,CAAgBC,UAAWC,MACzB,kBAACjC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAChD,EAAA,EAAD,KACE,kBAACsD,GAAD,CAAiBpD,QAAQ,KACtBiE,EADH,OAEE,kBAAC,KAAD,MAFF,OAGSI,KAIb,kBAACtB,EAAA,EAAD,KACE,kBAACjD,EAAA,EAAD,KACGiE,EAAUd,IAAI8B,GACb,kBAAChF,EAAA,EAAD,CAAWmD,IAAK6B,EAAEC,OACfD,EAAEE,WADL,KACkB,gCAASF,EAAEC,OAD7B,kB,mGEhET,MAAME,GAAaC,GACxB,kBAACC,GAAA,EAAWD,EACV,kBAACE,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,SACA,kBAACD,GAAA,EAAD,CAAUC,MAAM,SAAhB,UAoBWC,OAhBG,IAA2B,IAAzBC,EAAwB,EAAxBA,QAAYL,EAAY,2BAC1C,OACE,kBAACC,GAAA,EAAWD,EACTK,EAAQxC,OAAS,EAChBwC,EAAQvC,IAAIwC,GACV,kBAACJ,GAAA,EAAD,CAAUnC,IAAKuC,EAAEH,MAAOA,MAAOG,EAAEH,OAC9BG,EAAEtB,MAAQsB,EAAErB,KAIjB,kBAACiB,GAAA,EAAD,CAAUC,MAAM,IAAhB,wBC6FOI,ICjIAA,GDcK,EAAGC,WAAUxH,gBAAiB,MAAD,EACvBiD,mBAASwE,aAAOC,KAAKC,MAAO,eADL,mBACxCC,EADwC,KAClCC,EADkC,OAEb5E,mBAAS,QAFI,mBAExCJ,EAFwC,KAE7BiF,EAF6B,OAGjB7E,mBAAS,QAHQ,mBAGxCH,EAHwC,KAG/BiF,EAH+B,OAIL9E,mBACxCwE,aAAOC,KAAKC,MAAO,UAL0B,mBAIxC5E,EAJwC,KAIzBiF,EAJyB,OAOV/E,mBACnCwE,aAAOQ,aAAIP,KAAKC,MAAO,CAAEO,MAAO,IAAM,UARO,mBAOxClF,EAPwC,KAO3BmF,EAP2B,KAYvC7E,EAASC,YAAO,wBAAyB3C,EAASP,GAAlDiD,KAEF8E,EAAW9E,EACbA,EAAKwB,IAAIuD,GAAG,cACVlB,MAAOkB,EAAIC,WACRD,EAAIE,cAET,GAgBJ,OACE,kBAACnC,EAAA,EAAD,CAAKoC,GAAI,GACP,kBAAC7B,GAAA,EAAD,KACE,kBAAC8B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAaC,OAAO,SAASC,WAAS,GACpC,kBAACC,GAAA,EAAD,CACEC,KAAK,OACLC,GAAG,aACH5B,MAAOS,EACPoB,SAAUC,GAAKpB,EAAQoB,EAAEC,cAAc/B,OACvCX,QAAQ,WACR2C,MAAM,kBAGV,kBAACT,GAAA,EAAD,CAAaC,OAAO,SAASC,WAAS,EAACpC,QAAQ,YAC7C,kBAAC4C,GAAA,EAAD,CAAYL,GAAG,gBAAf,gBACA,kBAAC,GAAD,CACEI,MAAM,eACNE,QAAQ,eACRhC,QAASe,EACTjB,MAAOtE,EACPmG,SAAUC,GAAKnB,EAAamB,EAAEzJ,OAAO2H,UAGzC,kBAACuB,GAAA,EAAD,CAAaC,OAAO,SAASC,WAAS,GACpC,kBAACU,GAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,IAAKb,OAAQ,UAC7BxI,KAAK,QACLqG,QAAQ,YACRtG,MAAM,UACNb,QA5CS,KACnByI,EAAahF,GACbiF,EAAWlF,KAqCH,mCAUF,kBAAC6F,GAAA,EAAD,CAAaC,OAAO,SAASC,WAAS,EAACpC,QAAQ,YAC7C,kBAAC4C,GAAA,EAAD,CAAYL,GAAG,sBAAf,gBACA,kBAAC,GAAD,CACEI,MAAM,eACNE,QAAQ,qBACRhC,QAASe,EACTjB,MAAOrE,EACPkG,SAAUC,GAAKlB,EAAWkB,EAAEzJ,OAAO2H,UAGvC,kBAACuB,GAAA,EAAD,CAAaC,OAAO,SAASC,WAAS,EAACpC,QAAQ,YAC7C,kBAAC4C,GAAA,EAAD,CAAYL,GAAG,iBAAf,4BACA,kBAAChC,GAAD,CACEoC,MAAM,2BACNE,QAAQ,gBACRlC,MAAOpE,EACPiG,SAAUC,GAAKjB,EAAiBiB,EAAEzJ,OAAO2H,UAG7C,kBAACuB,GAAA,EAAD,CAAaC,OAAO,SAASC,WAAS,EAACpC,QAAQ,YAC7C,kBAAC4C,GAAA,EAAD,CAAYL,GAAG,eAAf,4BACA,kBAAChC,GAAD,CACEoC,MAAM,2BACNE,QAAQ,cACRlC,MAAOnE,EACPgG,SAAUC,GAAKd,EAAcc,EAAEzJ,OAAO2H,UAG1C,kBAACuB,GAAA,EAAD,CAAaE,WAAS,EAACD,OAAO,UAC5B,kBAACW,GAAA,EAAD,CACEnJ,KAAK,QACLqG,QAAQ,YACRtG,MAAM,UACNb,QA7ES,IACnBmI,EAAS,CACPI,OACA/E,YACAC,UACAC,gBACAC,gBAwEQyG,UAAW5G,IAAcC,GAL3B,qBE9DG4G,ICnDAA,GDMF,KAAO,MAAD,EACiBzG,mBAAS,IAD1B,mBACVjB,EADU,KACC2H,EADD,OAEiB1G,mBAAS,IAF1B,mBAEVJ,EAFU,KAECiF,EAFD,OAGa7E,mBAAS,IAHtB,mBAGVH,EAHU,KAGDiF,EAHC,OAIyB9E,mBAAS,IAJlC,mBAIVF,EAJU,KAIKiF,EAJL,OAKqB/E,mBAAS,IAL9B,mBAKVD,EALU,KAKG4G,EALH,KAqBjB,OACE,kBAACxD,EAAA,EAAD,CAAKyD,cAAe,GAClB,kBAACnH,EAAA,EAAD,CAAY6D,MAAM,SAASC,QAAQ,MAAnC,wCAGA,kBAAC,WAAD,CAAUsD,SAAU,iDAClB,kBAAC,GAAD,CAAatC,SApBC,EAClBI,OACA/E,YACAC,UACAC,gBACAC,kBAEA2G,EAAa/B,GACbE,EAAajF,GACbkF,EAAWjF,GACXkF,EAAiBjF,GACjB6G,EAAe5G,OAWb,kBAAC,WAAD,CAAU8G,SAAU,sDAClB,kBAAC,GAAD,CACEjH,UAAWA,EACXC,QAASA,EACTd,UAAWA,EACXe,cAAeA,EACfC,YAAaA,KAGjB,kBAAC,WAAD,CAAU8G,SAAU,qDAClB,kBAAC,GAAD,CAAajH,UAAWA,EAAWC,QAASA,O,+BE5CpD,MAEalC,GAAUC,GACrBC,MAHe,oCAGED,EhBLV,CACLE,OAAQ,MACRC,KAAM,OACNC,QAAS,CACP,eAAgB,mBAChB,kBAAmB,mBgBAkBC,KAAKC,GAAKA,EAAEC,QCNjD2I,GAAQ5C,GAAUA,EAAQ6C,KAAKC,GAAM,ICErC5C,GAAU,CACd6C,oBAAoB,EACpBC,QAAS,IACTC,WAAY,G,wDCEd,MAAMC,GAAO,kBAAC,KAAD,CAA0B3E,SAAS,UAC1C4E,GAAc,kBAAC,KAAD,CAAc5E,SAAS,UAErC6E,GAAQ,CACZ,CAAEC,KAAM,eAAMrD,MAAO,KACrB,CAAEqD,KAAM,qBAAOrD,MAAO,KACtB,CAAEqD,KAAM,qBAAOrD,MAAO,KACtB,CAAEqD,KAAM,eAAMrD,MAAO,KACrB,CAAEqD,KAAM,eAAMrD,MAAO,KACrB,CAAEqD,KAAM,eAAMrD,MAAO,KACrB,CAAEqD,KAAM,eAAMrD,MAAO,KACrB,CAAEqD,KAAM,eAAMrD,MAAO,MA+BRsD,IC/CAA,GDmBSzD,GAEpB,kBAAC0D,GAAA,EAAD,eACEC,UAAQ,EACRtD,QAASkD,GACTK,sBAAoB,EACpBC,eAAgBC,GAAUA,EAAON,KACjCO,aAAc,CAACR,GAAM,IACrBS,UAAW,EACXC,aAAc,CAACH,GAAUI,cACvB,oCACE,kBAACC,GAAA,EAAD,CACEd,KAAMA,GACNC,YAAaA,GACbf,MAAO,CAAE6B,YAAa,GACtBC,QAASH,IAEVJ,EAAON,MAGZc,YAAaC,GACX,kBAAC1C,GAAA,EAAD,iBAAe0C,EAAf,CAAuB/E,QAAQ,WAAW2C,MAAM,+BAE9CnC,IEtBV,MAAMwE,GAASV,GAEX,oCACGA,EAAOT,MACN,kBAAC,KAAD,CAAgBnK,MAAM,UAAUqJ,MAAO,CAAE6B,YAAa,KAEvDN,EAAOvC,YAAYvC,MAAQ,IAAM8E,EAAOvC,YAAYtC,IAyJ5CsB,ICnLAA,GD+BK,EAAGC,eAAgB,MAAD,EACZvE,mBAASwE,aAAOC,KAAKC,MAAO,eADhB,mBAC7BC,EAD6B,KACvBC,EADuB,OAEF5E,mBAAS,MAFP,mBAE7BJ,EAF6B,KAElBiF,EAFkB,OAGN7E,mBAAS,MAHH,mBAG7BH,EAH6B,KAGpBiF,EAHoB,OAIM9E,mBACxCwE,aAAOC,KAAKC,MAAO,UALe,mBAI7B5E,EAJ6B,KAIdiF,EAJc,OAOC/E,mBACnCwE,aAAOQ,aAAIP,KAAKC,MAAO,CAAEO,MAAO,IAAM,UARJ,mBAO7BlF,EAP6B,KAOhBmF,EAPgB,OAUFlF,mBAAS,CAAC,CAAEuH,KAAM,eAAMrD,MAAO,OAV7B,mBAU7BsE,EAV6B,KAUlBC,EAVkB,KAW9BC,EHpCO,WAA2B,MAAD,EACP1I,mBAAS,MADF,mBAChCzE,EADgC,KACtBoN,EADsB,KAGvC,SAASC,EAAQC,GACfF,EAAYE,EAAIC,QAGlB,SAASC,EAAMC,GACbC,QAAQC,KAAR,gBAAsBF,EAAIG,KAA1B,cAAoCH,EAAII,UACxCT,EAAY,CAAEI,MAAOC,IAWvB,OARAK,oBAAU,KACJC,UAAUC,YACZD,UAAUC,YAAYC,mBAAmBZ,EAASG,EAAO3E,IAEzDuE,EAAY,CAAEI,MAAO,8CAEtB,IAEIxN,EGgBUkO,GAGTpJ,EAASC,YACf,6CACA3C,GACAP,GAHMiD,KAOFqJ,EAAerJ,EAAOA,EAAKK,OAAOiD,GAAqB,SAAhBA,EAAE0B,WAAwB,GAEjEsE,EJ3CyB,EAACC,EAAYzE,KAC5C,IAAI0E,EAAU,KACVC,EAAMC,OAAOC,iBAEjB,OAAKJ,IAAcA,EAAWb,OAAU5D,EAASvD,QAEjDuD,EAAS8E,QAAQC,IACf,MACMC,EAAUP,EAAWQ,SACrBC,EAAUT,EAAWU,UACrBC,EAAQL,EAAQM,gBAAgBC,YAChCC,EAAQR,EAAQM,gBAAgBG,YAEhCC,EANc,QAOlB7D,KAAK8D,MAzBQ3G,EA2BT6C,KAAK+D,IAAIhE,GAAMyD,IAAUxD,KAAK+D,IAAIhE,GAAMqD,IACtCpD,KAAKgE,IAAIjE,GAAMyD,IACbxD,KAAKgE,IAAIjE,GAAMqD,IACfpD,KAAKgE,IAAIjE,GAAMuD,GAAWvD,GAAM4D,KA7BhC,EACH,EAELxG,GAAS,GACH,EAGHA,GARUA,MAkCX0G,EAAWd,IACbA,EAAMc,EACNf,EAAUK,KAIP,6BACFL,GADL,IAEEvE,YAAa,CACXvC,MAAM,mCAAD,OAAY8G,EAAQvE,YAAYvC,OACrCC,GAAI,IAENoE,MAAM,EACNZ,SAAUwE,QAAO,OAACpB,QAAD,IAACA,OAAD,EAACA,EAAYb,UAhCgC,MIuCzCkC,CAAkBvC,EAAUgB,GAE7CvE,EAAWuE,EACb,CAACC,KAAmBD,GAAchJ,OAAOiD,GAAW,OAANA,GAC9C,GAiBJ,OACE,kBAACR,EAAA,EAAD,CAAKoC,GAAI,GACP,kBAAC7B,GAAA,EAAD,KACE,kBAAC8B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAaC,OAAO,SAASC,WAAS,GACpC,kBAACC,GAAA,EAAD,CACEC,KAAK,OACLC,GAAG,aACH5B,MAAOS,EACPoB,SAAUC,GAAKpB,EAAQoB,EAAEC,cAAc/B,OACvCX,QAAQ,WACR2C,MAAM,kBAGV,kBAACT,GAAA,EAAD,CAAaC,OAAO,SAASC,WAAS,EAACpC,QAAQ,YAC7C,kBAACkE,GAAA,EAAD,CACEyD,KAAK,eACLpF,GAAG,eACH1B,QAASe,EACTY,SAAU,CAACC,EAAGrC,IAAMkB,EAAalB,GACjCO,MAAOtE,EACPyI,YAAaC,GACX,kBAAC1C,GAAA,EAAD,iBAAe0C,EAAf,CAAuBpC,MAAM,eAAK3C,QAAQ,cAE5CyE,aAAcO,GACdX,eAAgB,EAAGtC,iBACjBA,EAAYvC,MAAQ,IAAMuC,EAAYtC,GAExCmI,kBAAmB,CAAC9G,EAAGV,IAAMU,EAAE+G,aAAezH,EAAEyH,WAChDC,kBAAmBhH,GAAKA,EAAEmC,YAG9B,kBAACf,GAAA,EAAD,CAAaC,OAAO,SAASC,WAAS,GACpC,kBAACU,GAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,IAAKb,OAAQ,UAC7BxI,KAAK,QACLqG,QAAQ,YACRtG,MAAM,UACNb,QArDS,KACnByI,EAAahF,GACbiF,EAAWlF,KA8CH,mCAUF,kBAAC6F,GAAA,EAAD,CAAaC,OAAO,SAASC,WAAS,EAACpC,QAAQ,YAC7C,kBAACkE,GAAA,EAAD,CACEyD,KAAK,qBACLpF,GAAG,qBACH1B,QAASe,EACTY,SAAU,CAACC,EAAGrC,IAAMmB,EAAWnB,GAC/BO,MAAOrE,EACPwI,YAAaC,GACX,kBAAC1C,GAAA,EAAD,iBAAe0C,EAAf,CAAuBpC,MAAM,eAAK3C,QAAQ,cAE5CyE,aAAcO,GACdX,eAAgBC,GACdA,EAAOvC,YAAYvC,MAAQ,IAAM8E,EAAOvC,YAAYtC,GAEtDmI,kBAAmB,CAAC9G,EAAGV,IAAMU,EAAE+G,aAAezH,EAAEyH,WAChDC,kBAAmBhH,GAAKA,EAAEmC,YAG9B,kBAACf,GAAA,EAAD,CAAaC,OAAO,SAASC,WAAS,EAACpC,QAAQ,YAC7C,kBAAC4C,GAAA,EAAD,CAAYL,GAAG,iBAAf,4BACA,kBAAChC,GAAD,CACEoC,MAAM,2BACNE,QAAQ,gBACRlC,MAAOpE,EACPiG,SAAUC,GAAKjB,EAAiBiB,EAAEzJ,OAAO2H,UAG7C,kBAACuB,GAAA,EAAD,CAAaC,OAAO,SAASC,WAAS,EAACpC,QAAQ,YAC7C,kBAAC4C,GAAA,EAAD,CAAYL,GAAG,eAAf,4BACA,kBAAChC,GAAD,CACEoC,MAAM,2BACNE,QAAQ,cACRlC,MAAOnE,EACPgG,SAAUC,GAAKd,EAAcc,EAAEzJ,OAAO2H,UAG1C,kBAACuB,GAAA,EAAD,CAAaC,OAAO,SAASC,WAAS,EAACpC,QAAQ,YAC7C,kBAAC,GAAD,CACE2H,KAAK,YACLpF,GAAG,YACHC,SAAU,CAACC,EAAGrC,IAAM8E,EAAa9E,MAGrC,kBAAC8B,GAAA,EAAD,CAAaE,WAAS,EAACD,OAAO,UAC5B,kBAACW,GAAA,EAAD,CACEnJ,KAAK,QACLqG,QAAQ,YACRtG,MAAM,UACN0I,WAAS,EACTvJ,QAtGS,IACnBmI,EAAS,CACPI,OACA/E,YACAC,UACAC,gBACAC,cACAyI,cAgGQhC,UAAW5G,IAAcC,GAAW2I,EAAU5G,OAAS,GANzD,qBElKG,SAAS0J,GAAUC,GAAO,GAAQ,MAAD,EACpBvL,mBAASuL,GADW,mBACvCrH,EADuC,KAChCsH,EADgC,KAExCC,EAASC,sBAAY,IAAMF,GAAUtH,GAAQ,CAACA,IACpD,MAAO,CAACA,EAAOuH,G,6HCKFE,OARKC,IAAMC,cAAc,CACtC9M,UAAW,GACXa,UAAW,GACXC,QAAS,GACTC,cAAe,GACfC,YAAa,KCSf,MAAM+L,GAAU,EAAG5B,UAAS6B,gBAAeC,oBAAqB,MAAD,EAC9BC,qBAAWC,IAAlCtM,EADqD,EACrDA,UAAWC,EAD0C,EAC1CA,QAKbsM,EAHJjC,EAAQ7E,YAAczF,EAAUyF,WAChC6E,EAAQ7E,YAAcxF,EAAQwF,UAG5B,YACA0G,GAAiBC,EACjB,eACAI,EAEEC,EAAW,UAAMnC,EAAQ5E,YAAYvC,MAA1B,YAAmCmH,EAAQ5E,YAAYtC,IAExE,OACE,kBAACsJ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC9M,EAAA,EAAD,CAAYxC,MAAM,iBAAiBiN,EAAQ9K,cAE7C,kBAACoN,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAaxP,MAAOkP,IACpB,kBAACO,GAAA,EAAD,OAEF,kBAACC,GAAA,EAAD,KACE,kBAAClN,EAAA,EAAD,KAAa4M,MA8BNO,ICpEAA,GD4CQ,EAAGC,cAAc,MAE9BxM,EAASC,YACf,IAAMuM,GAAO,oDAAiDA,GAC9DlP,GACAP,GAHMiD,KAMFyM,EAAQzM,EAAOA,EAAK,GAAG0M,UAAY,GAEzC,OACE,kBAACC,GAAA,EAAD,CAAU1J,MAAM,SACbwJ,EAAMjL,IAAI,CAAC8B,EAAGsJ,IACb,kBAACnB,GAAD,CACEhK,IAAK6B,EAAE0B,UACP6E,QAASvG,EACToI,cAAqB,IAANkB,EACfjB,cAAeiB,IAAMH,EAAMlL,OAAS,OEvD9C,MAAMsL,GAAW,CACfC,EAAG,iCACHC,EAAG,eACHC,EAAG,gBAGCC,GAAiB,CACrBH,EAAG,SACHC,EAAG,UAGCG,GAAqB,CACzBJ,EAAG,SACHC,EAAG,UAGCI,GAAa,CACjBL,EAAG,SACHC,EAAG,UAGCK,GAAW,CACfN,EAAG,SACHC,EAAG,UAGCM,GAAoB,CACxBP,EAAG,SACHC,EAAG,UAGCO,GAAY,CAChBR,EAAG,SACHC,EAAG,UAGCQ,GAAmB,CACvBT,EAAG,SACHC,EAAG,UAmEUS,IC/GAA,GD+CQ,EAAGhB,cAAc,MAE9BxM,EAASC,YACf,IAAMuM,GAAO,oDAAiDA,GAC9DlP,GACAP,GAHMiD,KAMR,IAAKA,EAAM,OAAO,KAElB,MAAMyN,EAAOzN,EAAK,GACZ0N,EAAgB,UAAMD,EAAKE,oBAAoBjL,MAA/B,YAAwC+K,EAAKE,oBAAoBhL,IACjFiL,EAAc,UAAMH,EAAKI,kBAAkBnL,MAA7B,YAAsC+K,EAAKI,kBAAkBlL,IAEjF,OACE,kBAACG,EAAA,EAAD,CAAKoC,GAAI,GACP,kBAAC9F,EAAA,EAAD,CAAY8D,QAAQ,YAAY4K,cAAY,GAC1C,kDACCJ,GAEH,kBAACtO,EAAA,EAAD,CAAY8D,QAAQ,YAAY4K,cAAY,GAC1C,kDACCF,GAEH,kBAACxO,EAAA,EAAD,CAAY8D,QAAQ,YAAY4K,cAAY,GAC1C,oEACCjB,GAASY,EAAKM,WAEjB,kBAAC3O,EAAA,EAAD,CAAY8D,QAAQ,YAAY4K,cAAY,GAC1C,8GACCb,GAAeQ,EAAKO,iBAEvB,kBAAC5O,EAAA,EAAD,CAAY8D,QAAQ,YAAY4K,cAAY,GAC1C,sFACCZ,GAAmBO,EAAKQ,qBAE3B,kBAAC7O,EAAA,EAAD,CAAY8D,QAAQ,YAAY4K,cAAY,GAC1C,4FACCX,GAAWM,EAAKS,aAEnB,kBAAC9O,EAAA,EAAD,CAAY8D,QAAQ,YAAY4K,cAAY,GAC1C,8LACCV,GAASK,EAAKU,WAEjB,kBAAC/O,EAAA,EAAD,CAAY8D,QAAQ,YAAY4K,cAAY,GAC1C,oGACCT,GAAkBI,EAAKW,oBAE1B,kBAAChP,EAAA,EAAD,CAAY8D,QAAQ,YAAY4K,cAAY,GAC1C,0EACCR,GAAUG,EAAKY,YAElB,kBAACjP,EAAA,EAAD,CAAY8D,QAAQ,YAAY4K,cAAY,GAC1C,0EACCP,GAAiBE,EAAKa,mBAEzB,kBAAClP,EAAA,EAAD,CAAY8D,QAAQ,QAAQ4K,cAAY,GACtC,kDACCL,EAAKc,KAAK7L,MAFb,IAEqB+K,EAAKe,cAAc9L,SE5F9C,MAAM+L,GAAalD,IAAMmD,YAAW,SAAoBhL,EAAOiL,GAC7D,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASjL,OAGvC5I,GAAYC,YAAWC,IAAK,CAChC8T,OAAQ,CACN5T,SAAU,UAEZ6T,MAAO,CACLC,WAAYhU,EAAMI,QAAQ,GAC1B6T,KAAM,MAyCKC,IChEAA,GD2BS,EAAGC,SAAQ/D,SAAQoB,cACzC,MAAMhR,EAAUV,KAEhB,OACE,kBAACsU,GAAA,EAAD,CACEC,YAAU,EACVC,KAAMH,EACNI,QAASnE,EACToE,oBAAqBf,IAErB,kBAACgB,EAAA,EAAD,CAAQ/S,UAAWlB,EAAQsT,QACzB,kBAACY,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLhT,MAAM,UACNb,QAASqP,EACTtO,aAAW,SAEX,kBAAC,KAAD,OAEF,kBAACsC,EAAA,EAAD,CAAY8D,QAAQ,KAAKxG,UAAWlB,EAAQuT,OAA5C,kBACQvC,KAIZ,kBAACqD,GAAA,EAAD,KACE,kBAAC,WAAD,CAAUrJ,SAAU,yDAClB,kBAAC,GAAD,CAAgBgG,QAAS2C,GAAU3C,KAErC,kBAAC,WAAD,CAAUhG,SAAU,yDAClB,kBAAC,GAAD,CAAgBgG,QAAS2C,GAAU3C,QEjDtC,MAAMpO,GAAY,IACvB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,QAAQ,KAAnB,6BA4BWC,ICrCAA,GDaH,EAAGC,aAAc,MAAD,EACDwM,KADC,mBACnBkE,EADmB,KACX/D,EADW,KAGpBzM,EAAUF,EAAOG,eAAeD,QAChCE,EAAgBJ,EAAOK,eAAeD,cACtCE,EAAcN,EAAOO,oBAAoBD,YAE/C,OACE,kBAACV,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CAAYxC,MAAM,WAAW+B,IAE/B,kBAACL,EAAA,EAAD,KAAYO,GACZ,kBAACP,EAAA,EAAD,KAAYS,GACZ,kBAACT,EAAA,EAAD,KACE,kBAAC0H,GAAA,EAAD,CAAQpJ,MAAM,UAAUb,QAASqP,GAAjC,gBAGA,kBAAC,GAAD,CAAiBoB,QAAS7N,EAASwQ,OAAQA,EAAQ/D,OAAQA,OEgHpD9L,IChJAA,GDiBK,EAClBC,YACAC,UACAd,YACAe,gBACAC,cACAyI,gBACK,IAAD,UACwBxI,qBADxB,mBACGC,EADH,KACWC,EADX,OAEsBF,qBAFtB,mBAEG3B,EAFH,KAEU8B,EAFV,KAIEC,EAAcR,EAAUyF,WAAaxF,EAAQwF,WAAatG,EAGxDsB,EAASC,YACf,IACEF,GAAW,yCACuBR,EAAUyF,UADjC,eACiDxF,EAAQwF,UADzD,YACsEtG,EADtE,gBAEbpB,EACAP,GALMiD,KAQFE,EAAgBhB,YAAS,GAAD,OAAIR,EAAJ,YAAiBe,IACzCU,EAAgBjB,YAAS,GAAD,OAAIR,EAAJ,YAAiBgB,IAYzCoQ,EAAkB3H,EAAU3G,IAAI8B,GAAKA,EAAEO,OACvCkM,GAA2BD,EAAgBE,SAAS,KAqBpD5P,GAnBeJ,EACjBA,EACGK,OAAOC,IACN,MAAMC,EAAUrB,YAAS,GAAD,OACnBR,EADmB,YACN4B,EAAExB,eAAeD,gBAE7B2B,EAAUtB,YAAS,GAAD,OACnBR,EADmB,YACN4B,EAAEtB,oBAAoBD,cAExC,OACE0B,YAAQF,EAASL,IAAkBQ,YAASF,EAASL,KAGxDE,OAAOC,IACDyP,GACED,EAAgBE,SAAS1P,EAAE1B,eAAeqR,gBAErD,IAE4BtP,KAAK,CAACC,EAAGC,KACvC,GAAe,cAAXjB,EAAwB,CAC1B,MAAMkB,EAAW5B,YAAS,GAAD,OACpBR,EADoB,YACPkC,EAAE9B,eAAeD,gBAE7BkC,EAAW7B,YAAS,GAAD,OACpBR,EADoB,YACPmC,EAAE/B,eAAeD,gBAGnC,MAAiB,SAAVb,EACHgD,YAAYF,EAAUC,GACtBE,YAAWH,EAAUC,GACpB,GAAe,YAAXnB,EAAsB,CAC/B,MAAMsB,EAAWhC,YAAS,GAAD,OACpBR,EADoB,YACPkC,EAAE5B,oBAAoBD,cAElCoC,EAAWjC,YAAS,GAAD,OACpBR,EADoB,YACPmC,EAAE7B,oBAAoBD,cAGxC,MAAiB,SAAVf,EACHgD,YAAYE,EAAUC,GACtBF,YAAWC,EAAUC,GAEzB,OAAO,IAIX,OACE,oCACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAChD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,qBACA,kBAACA,EAAA,EAAD,CAAWvC,QAlEQ,KAC3B8D,EAAU,aACVC,EAAmB,SAAV9B,EAAmB,MAAQ,UAgE5B,eAEc,cAAX4B,EACC,kBAAC,EAAD,CAAU5B,MAAOA,IAEjB,kBAAC,IAAD,OAGJ,kBAACM,EAAA,EAAD,CAAWvC,QArEM,KACzB8D,EAAU,WACVC,EAAmB,SAAV9B,EAAmB,MAAQ,UAmE5B,eAEc,YAAX4B,EACC,kBAAC,EAAD,CAAU5B,MAAOA,IAEjB,kBAAC,IAAD,OAGJ,kBAACM,EAAA,EAAD,mCAGJ,kBAACgD,EAAA,EAAD,KACGlB,EAAWmB,OAAS,EACnBnB,EAAWoB,IAAI/C,GACb,kBAAC,GAAD,CAAKgD,IAAKhD,EAAOG,eAAeD,QAASF,OAAQA,KAGnD,kBAAC,GAAD,QAIN,kBAAC,GAAD,KACE,kBAACW,EAAA,EAAD,mCAAuB,OAAJY,QAAI,IAAJA,GAAA,UAAAA,EAAO,UAAP,eAAW0B,aAAc,UEpFrCwO,ICtDAA,GDMH,KAAO,MAAD,EACkBvQ,mBAAS,IAD3B,mBACTjB,EADS,KACE2H,EADF,OAEkB1G,mBAAS,IAF3B,mBAETJ,EAFS,KAEEiF,EAFF,OAGc7E,mBAAS,IAHvB,mBAGTH,EAHS,KAGAiF,EAHA,OAI0B9E,mBAAS,IAJnC,mBAITF,EAJS,KAIMiF,EAJN,OAKsB/E,mBAAS,IAL/B,mBAKTD,EALS,KAKI4G,EALJ,OAMkB3G,mBAAS,IAN3B,mBAMTwI,EANS,KAMEC,EANF,KAwBhB,OACE,kBAACtF,EAAA,EAAD,CAAKyD,cAAe,GAClB,kBAACnH,EAAA,EAAD,CAAY6D,MAAM,SAASC,QAAQ,MAAnC,wCAGA,kBAAC,WAAD,CAAUsD,SAAU,iDAClB,kBAAC,GAAD,CAAatC,SAtBF,EACfI,OACA/E,YACAC,UACAC,gBACAC,cACAyI,gBAEA9B,EAAa/B,GACbE,EAAajF,GACbkF,EAAWjF,GACXkF,EAAiBjF,GACjB6G,EAAe5G,GACf0I,EAAaD,OAWX,kBAAC,GAAQgI,SAAT,CAAkBtM,MAAO,CAAEnF,YAAWa,YAAWC,YAC/C,kBAAC,WAAD,CAAUgH,SAAU,sDAClB,kBAAC,GAAD,CACEjH,UAAWA,EACXC,QAASA,EACTd,UAAWA,EACXe,cAAeA,EACfC,YAAaA,EACbyI,UAAWA,QErBvB,SAASiI,GAAT,GAAyD,IAArCC,EAAoC,EAApCA,SAAUxM,EAA0B,EAA1BA,MAAOyM,EAAmB,EAAnBA,MAAUC,EAAS,4CACtD,OACE,uCACE9T,KAAK,WACL+T,OAAQ3M,IAAUyM,EAClB7K,GAAE,0BAAqB6K,GACvBG,kBAAA,qBAA+BH,IAC3BC,GAEH1M,IAAUyM,GAAS,kBAACxN,EAAA,EAAD,CAAK4N,GAAI,GAAIL,IAKvC,MAAMvV,GAAYC,YAAW,CAC3B4V,KAAM,CACJzK,MAAO,OAIL0K,GAAQ,EAAGC,eAAcC,kBAC7B,MAAMtV,EAAUV,KAChB,OACE,yBACE4B,UAAWlB,EAAQmV,KACnBlU,KAAK,eACLV,QAAS,IAAM8U,IACfE,UAAW,IAAMF,KAEjB,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACnV,QAAS,IAAM+U,EAAY,IAC1C,kBAACK,EAAA,EAAD,CAAcC,QAAQ,UAExB,kBAACH,EAAA,EAAD,CAAUC,QAAM,EAACnV,QAAS,IAAM+U,EAAY,IAC1C,kBAACK,EAAA,EAAD,CAAcC,QAAQ,YAuEjBC,OAhEf,WAAgB,MAAD,EACS1R,mBAAS,GADlB,mBACN2R,EADM,KACDC,EADC,OAE6BtG,KAF7B,mBAENuG,EAFM,KAEWC,EAFX,OAGsBxG,KAHtB,mBAGNyG,EAHM,KAGMb,EAHN,KAKP7V,EAAQ2W,kBACZ,IACEC,YAAe,CACb7P,QAAS,CACPyD,KAAMgM,EAAkB,OAAS,SAEnCK,UAAW,CACTC,WAAY,CACV7W,KAAM,CACJ8W,cAAe,cAKzB,CAACP,IAGH,OACE,kBAACQ,EAAA,EAAD,CAAehX,MAAOA,GACpB,kBAACiX,EAAA,EAAD,MACA,kBAACxC,EAAA,EAAD,CAAQvU,SAAS,SAASuK,GAAG,sBAC3B,kBAACiK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLhT,MAAM,UACNE,aAAW,OACXf,QAAS8U,GAET,kBAAC,IAAD,OAEF,yBAAK5K,MAAO,CAAEiM,SAAU,KACxB,kBAACvC,EAAA,EAAD,CACE7S,aAAW,iBACXf,QAAS0V,EACT7U,MAAM,WAEL4U,EAAkB,kBAAC,IAAD,MAAsB,kBAAC,IAAD,SAI/C,kBAACW,EAAA,EAAD,CACElW,OAAO,OACPqT,KAAMoC,EACNnC,QAASsB,EACTuB,OAAQvB,GAER,kBAACD,GAAD,CAAOC,aAAcA,EAAcC,YAAauB,GAAQd,EAAOc,MAEjE,kBAACjC,GAAD,CAAUvM,MAAOyN,EAAKhB,MAAO,GAC3B,kBAAC,GAAD,OAEF,kBAACF,GAAD,CAAUvM,MAAOyN,EAAKhB,MAAO,GAC3B,kBAAC,GAAD,OAEF,kBAACgC,EAAD,QCnHN,MAAMC,GAAc5H,QACW,cAA7B6H,OAAOnK,SAASoK,UAEe,UAA7BD,OAAOnK,SAASoK,UAEhBD,OAAOnK,SAASoK,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9B5J,UAAU6J,cACPC,SAASH,GACThV,KAAKoV,IACJA,EAAaC,cAAgB,KAC3B,MAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,KACA,cAA3BF,EAAiBG,QACfpK,UAAU6J,cAAcQ,YAI1B1K,QAAQ2K,IACN,iHAKEV,GAAUA,EAAOW,UACnBX,EAAOW,SAASR,KAMlBpK,QAAQ2K,IAAI,sCAGRV,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUT,UAO5BU,MAAMhL,IACLE,QAAQF,MAAM,4CAA6CA,KC1FjEiL,IAASC,OAAO,kBAAC,GAAD,MAASxX,SAASyX,eAAe,SDgB1C,SAAkBhB,GACvB,GAA6C,kBAAmB5J,UAAW,CAGzE,GADkB,IAAI6K,IAAIC,WAAwBvB,OAAOnK,SAAS2L,MACpDC,SAAWzB,OAAOnK,SAAS4L,OAIvC,OAGFzB,OAAO0B,iBAAiB,OAAQ,KAC9B,MAAMtB,EAAK,UAAMmB,WAAN,sBAEPxB,KAgEV,SAAiCK,EAAOC,GAEtCrV,MAAMoV,GACHhV,KAAKuW,IAEJ,MAAMC,EAAcD,EAASxW,QAAQ0W,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CtL,UAAU6J,cAAc0B,MAAM5W,KAAKoV,IACjCA,EAAayB,aAAa7W,KAAK,KAC7B4U,OAAOnK,SAASqM,aAKpB/B,GAAgBC,EAAOC,KAG1Ba,MAAM,KACL9K,QAAQ2K,IACN,mEArFAoB,CAAwB/B,EAAOC,GAI/B5J,UAAU6J,cAAc0B,MAAM5W,KAAK,KACjCgL,QAAQ2K,IACN,gHAMJZ,GAAgBC,EAAOC,MCvC/BC,K","file":"static/js/main.70d98593.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Fab from \"@material-ui/core/Fab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(4),\n    right: theme.spacing(2),\n    zIndex: 1200\n  }\n}));\n\nfunction ScrollTop() {\n  const classes = useStyles();\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 100\n  });\n\n  const handleClick = event => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </div>\n    </Zoom>\n  );\n}\n\nexport default ScrollTop;\n","export default function getFetchOptions() {\n  return {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept-Encoding\": \"gzip, deflate\"\n    }\n  };\n}\n\nexport const swrConfig = {\n  suspense: true,\n  revalidateOnFocus: false,\n  revalidateOnReconnect: false,\n  refreshWhenOffline: false,\n  refreshWhenHidden: false,\n  refreshInterval: 0\n};\n","import getFetchOptions from \"./config\";\n\n// API spec: https://ptx.transportdata.tw/MOTC?t=Rail&v=2#!/THSR/THSRApi_DailyTimetable\nconst API_BASE = \"https://ptx.transportdata.tw/MOTC\";\n\nexport const fetcher = url =>\n  fetch(API_BASE + url, getFetchOptions()).then(r => r.json());\n","import React from \"react\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\n\nconst SortIcon = ({ order }) => {\n  return order === \"desc\" ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />;\n};\n\nexport default SortIcon;\n","import SortIcon from \"./SortIcon\";\n\nexport default SortIcon;\n","import styled from \"styled-components\";\n\nconst BottomFooter = styled.footer`\n  width: 100vw;\n  position: fixed;\n  bottom: 0;\n  background-color: #424242;\n  color: #fff;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default BottomFooter;\n","import BottomFooter from \"./BottomFooter\";\n\nexport default BottomFooter;\n","import React from \"react\";\nimport { parseISO, differenceInMinutes } from \"date-fns\";\n\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport const NoResults = () => (\n  <TableRow>\n    <TableCell colSpan=\"4\">尚無資料</TableCell>\n  </TableRow>\n);\n\nconst Row = ({ detail, trainDate }) => {\n  const TrainNo = detail.DailyTrainInfo.TrainNo;\n  const DepartureTime = detail.OriginStopTime.DepartureTime;\n  const ArrivalTime = detail.DestinationStopTime.ArrivalTime;\n  const dTime = parseISO(`${trainDate} ${DepartureTime}`);\n  const aTime = parseISO(`${trainDate} ${ArrivalTime}`);\n\n  return (\n    <TableRow>\n      <TableCell>\n        <Typography color=\"primary\">{TrainNo}</Typography>\n      </TableCell>\n      <TableCell>{DepartureTime}</TableCell>\n      <TableCell>{ArrivalTime}</TableCell>\n      <TableCell>{differenceInMinutes(aTime, dTime)} 分</TableCell>\n    </TableRow>\n  );\n};\n\nexport default Row;\n","import React, { useState } from \"react\";\nimport useSWR from \"swr\";\nimport { parseISO, isBefore, isAfter, compareAsc, compareDesc } from \"date-fns\";\n\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/THSR\";\nimport SortIcon from \"components/SortIcon\";\nimport BottomFooter from \"components/BottomFooter\";\n\nimport Row, { NoResults } from \"./components/Row\";\n\nconst TrainDetail = ({\n  departure,\n  arrival,\n  trainDate,\n  departureTime,\n  arrivalTime\n}) => {\n  const [sortBy, setSortBy] = useState();\n  const [order, setOrder] = useState();\n\n  const shouldFetch = departure && arrival && trainDate;\n\n  // GET 取得指定[日期],[起迄站間]之時刻表資料\n  const { data } = useSWR(\n    () =>\n      shouldFetch &&\n      `/v2/Rail/THSR/DailyTimetable/OD/${departure}/to/${arrival}/${trainDate}`,\n    fetcher,\n    swrConfig\n  );\n\n  const depFilterTime = parseISO(`${trainDate} ${departureTime}`);\n  const arrFilterTime = parseISO(`${trainDate} ${arrivalTime}`);\n\n  const trainDetails = data\n    ? data.filter(d => {\n        const depTime = parseISO(\n          `${trainDate} ${d.OriginStopTime.DepartureTime}`\n        );\n        const arrTime = parseISO(\n          `${trainDate} ${d.DestinationStopTime.ArrivalTime}`\n        );\n        return (\n          isAfter(depTime, depFilterTime) && isBefore(arrTime, arrFilterTime)\n        );\n      })\n    : [];\n\n  const onClickDepartureSort = () => {\n    setSortBy(\"departure\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const onClickArrivalSort = () => {\n    setSortBy(\"arrival\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const renderList = trainDetails.sort((a, b) => {\n    if (sortBy === \"departure\") {\n      const aDepTime = parseISO(\n        `${trainDate} ${a.OriginStopTime.DepartureTime}`\n      );\n      const bDepTime = parseISO(\n        `${trainDate} ${b.OriginStopTime.DepartureTime}`\n      );\n\n      return order === \"desc\"\n        ? compareDesc(aDepTime, bDepTime)\n        : compareAsc(aDepTime, bDepTime);\n    } else if (sortBy === \"arrival\") {\n      const aArrTime = parseISO(\n        `${trainDate} ${a.DestinationStopTime.ArrivalTime}`\n      );\n      const bArrTime = parseISO(\n        `${trainDate} ${b.DestinationStopTime.ArrivalTime}`\n      );\n\n      return order === \"desc\"\n        ? compareDesc(aArrTime, bArrTime)\n        : compareAsc(aArrTime, bArrTime);\n    } else {\n      return true;\n    }\n  });\n\n  return (\n    <>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>車次</TableCell>\n            <TableCell onClick={onClickDepartureSort}>\n              發車\n              {sortBy === \"departure\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell onClick={onClickArrivalSort}>\n              到達\n              {sortBy === \"arrival\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell>總時程</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {renderList.length > 0 ? (\n            renderList.map(detail => (\n              <Row\n                key={detail.DailyTrainInfo.TrainNo}\n                detail={detail}\n                trainDate={trainDate}\n              />\n            ))\n          ) : (\n            <NoResults />\n          )}\n        </TableBody>\n      </Table>\n      <BottomFooter>\n        <Typography>更新時間: {data?.[0]?.UpdateTime || \"---\"}</Typography>\n      </BottomFooter>\n    </>\n  );\n};\n\nexport default TrainDetail;\n","import TrainDetail from \"./TrainDetail\";\n\nexport default TrainDetail;\n","import React from \"react\";\nimport useSWR from \"swr\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { fetcher } from \"apis/THSR\";\nimport { swrConfig } from \"apis/config\";\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nconst PrizeDetail = ({ departure, arrival }) => {\n  const shouldFetch = departure && arrival;\n\n  // GET 取得指定[起訖站間]之票價資料\n  const { data } = useSWR(\n    () => shouldFetch && `/v2/Rail/THSR/ODFare/${departure}/to/${arrival}`,\n    fetcher,\n    swrConfig\n  );\n\n  const prizeList = data ? data[0].Fares : [];\n\n  if (prizeList.length < 1) return null;\n\n  const departureStation =\n    data[0].OriginStationName.Zh_tw + data[0].OriginStationName.En;\n  const arrivalStation =\n    data[0].DestinationStationName.Zh_tw + data[0].DestinationStationName.En;\n\n  return (\n    <Box mt={2}>\n      <Box mb={1}>\n        <Typography align=\"center\" variant=\"h4\">\n          票價資訊\n        </Typography>\n      </Box>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <StyledTableCell colSpan=\"3\">\n                {departureStation}&nbsp;\n                <ArrowRightAltIcon />\n                &nbsp;{arrivalStation}\n              </StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              {prizeList.map(v => (\n                <TableCell key={v.Price}>\n                  {v.TicketType}: <strong>{v.Price}</strong> 元\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default PrizeDetail;\n","import PrizeDetail from \"./PrizeDetail\";\n\nexport default PrizeDetail;\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nexport const TimeSelect = props => (\n  <Select {...props}>\n    <MenuItem value=\"06:00\">06:00</MenuItem>\n    <MenuItem value=\"07:00\">07:00</MenuItem>\n    <MenuItem value=\"08:00\">08:00</MenuItem>\n    <MenuItem value=\"09:00\">09:00</MenuItem>\n    <MenuItem value=\"10:00\">10:00</MenuItem>\n    <MenuItem value=\"11:00\">11:00</MenuItem>\n    <MenuItem value=\"12:00\">12:00</MenuItem>\n    <MenuItem value=\"13:00\">13:00</MenuItem>\n    <MenuItem value=\"14:00\">14:00</MenuItem>\n    <MenuItem value=\"15:00\">15:00</MenuItem>\n    <MenuItem value=\"16:00\">16:00</MenuItem>\n    <MenuItem value=\"17:00\">17:00</MenuItem>\n    <MenuItem value=\"18:00\">18:00</MenuItem>\n    <MenuItem value=\"19:00\">19:00</MenuItem>\n    <MenuItem value=\"20:00\">20:00</MenuItem>\n    <MenuItem value=\"21:00\">21:00</MenuItem>\n    <MenuItem value=\"22:00\">22:00</MenuItem>\n    <MenuItem value=\"23:00\">23:00</MenuItem>\n    <MenuItem value=\"24:00\">24:00</MenuItem>\n  </Select>\n);\n\nconst Selector = ({ options, ...props }) => {\n  return (\n    <Select {...props}>\n      {options.length > 0 ? (\n        options.map(o => (\n          <MenuItem key={o.value} value={o.value}>\n            {o.Zh_tw + o.En}\n          </MenuItem>\n        ))\n      ) : (\n        <MenuItem value=\"\">無資料</MenuItem>\n      )}\n    </Select>\n  );\n};\n\nexport default Selector;\n","import React, { useState } from \"react\";\nimport useSWR from \"swr\";\nimport { format, add } from \"date-fns\";\n\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Select, { TimeSelect } from \"components/Select\";\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/THSR\";\n\nconst SearchPanel = ({ onSearch, className }) => {\n  const [date, setDate] = useState(format(Date.now(), \"yyyy-MM-dd\"));\n  const [departure, setDeparture] = useState(\"1000\"); // 台北\n  const [arrival, setArrival] = useState(\"1070\"); // 左營\n  const [departureTime, setDepartureTime] = useState(\n    format(Date.now(), \"HH:00\")\n  );\n  const [arrivalTime, setArriveTime] = useState(\n    format(add(Date.now(), { hours: 3 }), \"HH:00\")\n  );\n\n  // GET 取得車站基本資料\n  const { data } = useSWR(\"/v2/Rail/THSR/Station\", fetcher, swrConfig);\n\n  const stations = data\n    ? data.map(val => ({\n        value: val.StationID,\n        ...val.StationName\n      }))\n    : [];\n\n  const depArrSwitch = () => {\n    setDeparture(arrival);\n    setArrival(departure);\n  };\n\n  const handleSearch = () =>\n    onSearch({\n      date,\n      departure,\n      arrival,\n      departureTime,\n      arrivalTime\n    });\n\n  return (\n    <Box my={2}>\n      <Paper>\n        <Container>\n          <FormControl margin=\"normal\" fullWidth>\n            <TextField\n              type=\"date\"\n              id=\"trip-start\"\n              value={date}\n              onChange={e => setDate(e.currentTarget.value)}\n              variant=\"outlined\"\n              label=\"日期\"\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <InputLabel id=\"OrginStation\">起站</InputLabel>\n            <Select\n              label=\"起站\"\n              labelId=\"OrginStation\"\n              options={stations}\n              value={departure}\n              onChange={e => setDeparture(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth>\n            <Button\n              style={{ width: 150, margin: \"0 auto\" }}\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={depArrSwitch}\n            >\n              起迄站交換\n            </Button>\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <InputLabel id=\"DestinationStation\">迄站</InputLabel>\n            <Select\n              label=\"迄站\"\n              labelId=\"DestinationStation\"\n              options={stations}\n              value={arrival}\n              onChange={e => setArrival(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <InputLabel id=\"DepartureTime\">最早出發</InputLabel>\n            <TimeSelect\n              label=\"最早出發\"\n              labelId=\"DepartureTime\"\n              value={departureTime}\n              onChange={e => setDepartureTime(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <InputLabel id=\"ArrivalTime\">最晚抵達</InputLabel>\n            <TimeSelect\n              label=\"最晚抵達\"\n              labelId=\"ArrivalTime\"\n              value={arrivalTime}\n              onChange={e => setArriveTime(e.target.value)}\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSearch}\n              disabled={!departure || !arrival}\n            >\n              查詢\n            </Button>\n          </FormControl>\n        </Container>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default SearchPanel;\n","import SearchPanel from \"./SearchPanel\";\n\nexport default SearchPanel;\n","import React, { useState, Suspense } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\n\nimport TrainDetail from \"./components/TrainDetail\";\nimport PrizeDetail from \"./components/PrizeDetail\";\nimport SearchPanel from \"./components/SearchPanel\";\n\nconst THSR = () => {\n  const [trainDate, setTrainDate] = useState(\"\");\n  const [departure, setDeparture] = useState(\"\");\n  const [arrival, setArrival] = useState(\"\");\n  const [departureTime, setDepartureTime] = useState(\"\");\n  const [arrivalTime, setArrivalTime] = useState(\"\");\n\n  const searchClick = ({\n    date,\n    departure,\n    arrival,\n    departureTime,\n    arrivalTime\n  }) => {\n    setTrainDate(date);\n    setDeparture(departure);\n    setArrival(arrival);\n    setDepartureTime(departureTime);\n    setArrivalTime(arrivalTime);\n  };\n\n  return (\n    <Box paddingBottom={8}>\n      <Typography align=\"center\" variant=\"h3\">\n        高鐵時刻查詢\n      </Typography>\n      <Suspense fallback={<div>Get stations...</div>}>\n        <SearchPanel onSearch={searchClick} />\n      </Suspense>\n      <Suspense fallback={<div>Get train details...</div>}>\n        <TrainDetail\n          departure={departure}\n          arrival={arrival}\n          trainDate={trainDate}\n          departureTime={departureTime}\n          arrivalTime={arrivalTime}\n        />\n      </Suspense>\n      <Suspense fallback={<div>Get prize detail...</div>}>\n        <PrizeDetail departure={departure} arrival={arrival} />\n      </Suspense>\n    </Box>\n  );\n};\n\nexport default THSR;\n","import THSR from \"./THSR\";\n\nexport default THSR;\n","import getFetchOptions from \"./config\";\n\n// API spec: https://ptx.transportdata.tw/MOTC?t=Rail&v=2#!/TRA/TRAApi_ODDailyTimetable\nconst API_BASE = \"https://ptx.transportdata.tw/MOTC\";\n\nexport const fetcher = url =>\n  fetch(API_BASE + url, getFetchOptions()).then(r => r.json());\n","const toRad = value => (value * Math.PI) / 180;\n\nconst robustAcos = value => {\n  if (value > 1) {\n    return 1;\n  }\n  if (value < -1) {\n    return -1;\n  }\n\n  return value;\n};\n\nexport const getClosestStation = (myLocation, stations) => {\n  let closest = null;\n  let min = Number.MAX_SAFE_INTEGER;\n\n  if (!myLocation || myLocation.error || !stations.length) return null;\n\n  stations.forEach(station => {\n    const earthRadius = 6378137;\n    const fromLat = myLocation.latitude;\n    const fromLon = myLocation.longitude;\n    const toLat = station.StationPosition.PositionLat;\n    const toLon = station.StationPosition.PositionLon;\n\n    const distance =\n      Math.acos(\n        robustAcos(\n          Math.sin(toRad(toLat)) * Math.sin(toRad(fromLat)) +\n            Math.cos(toRad(toLat)) *\n              Math.cos(toRad(fromLat)) *\n              Math.cos(toRad(fromLon) - toRad(toLon))\n        )\n      ) * earthRadius;\n\n    if (distance < min) {\n      min = distance;\n      closest = station;\n    }\n  });\n\n  return {\n    ...closest,\n    StationName: {\n      Zh_tw: `最近的車站: ${closest.StationName.Zh_tw}`,\n      En: \"\"\n    },\n    icon: true,\n    disabled: Boolean(myLocation?.error)\n  };\n};\n","import { useState, useEffect } from \"react\";\n\nconst options = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 0\n};\n\nexport default function useGeoLocation() {\n  const [position, setPosition] = useState(null);\n\n  function success(pos) {\n    setPosition(pos.coords);\n  }\n\n  function error(err) {\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n    setPosition({ error: err });\n  }\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(success, error, options);\n    } else {\n      setPosition({ error: \"You device don't support geolocation api\" });\n    }\n  }, []);\n\n  return position;\n}\n","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst types = [\n  { text: \"不限\", value: \"0\" },\n  { text: \"太魯閣\", value: \"1\" },\n  { text: \"普悠瑪\", value: \"2\" },\n  { text: \"自強\", value: \"3\" },\n  { text: \"莒光\", value: \"4\" },\n  { text: \"復興\", value: \"5\" },\n  { text: \"區間\", value: \"6\" },\n  { text: \"普快\", value: \"7\" }\n];\n\nconst TrainTypeSelect = props => {\n  return (\n    <Autocomplete\n      multiple\n      options={types}\n      disableCloseOnSelect\n      getOptionLabel={option => option.text}\n      defaultValue={[types[0]]}\n      limitTags={2}\n      renderOption={(option, { selected }) => (\n        <>\n          <Checkbox\n            icon={icon}\n            checkedIcon={checkedIcon}\n            style={{ marginRight: 8 }}\n            checked={selected}\n          />\n          {option.text}\n        </>\n      )}\n      renderInput={params => (\n        <TextField {...params} variant=\"outlined\" label=\"列車種類\" />\n      )}\n      {...props}\n    />\n  );\n};\n\nexport default TrainTypeSelect;\n","import TrainTypeSelect from \"./TrainTypeSelect\";\n\nexport default TrainTypeSelect;\n","import React, { useState } from \"react\";\nimport useSWR from \"swr\";\nimport { format, add } from \"date-fns\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\n\nimport { TimeSelect } from \"components/Select\";\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/TRA\";\nimport { getClosestStation } from \"utils\";\nimport useGeoLocation from \"hooks/useGeoLocation\";\n\nimport TrainTypeSelect from \"./components/TrainTypeSelect\";\n\nconst Option = option => {\n  return (\n    <>\n      {option.icon && (\n        <LocationOnIcon color=\"primary\" style={{ marginRight: 8 }} />\n      )}\n      {option.StationName.Zh_tw + \" \" + option.StationName.En}\n    </>\n  );\n};\n\nconst SearchPanel = ({ onSearch }) => {\n  const [date, setDate] = useState(format(Date.now(), \"yyyy-MM-dd\"));\n  const [departure, setDeparture] = useState(null);\n  const [arrival, setArrival] = useState(null);\n  const [departureTime, setDepartureTime] = useState(\n    format(Date.now(), \"HH:00\")\n  );\n  const [arrivalTime, setArriveTime] = useState(\n    format(add(Date.now(), { hours: 3 }), \"HH:00\")\n  );\n  const [trainType, setTrainType] = useState([{ text: \"不限\", value: \"0\" }]);\n  const location = useGeoLocation();\n\n  // GET 取得車站基本資料\n  const { data } = useSWR(\n    \"/v2/Rail/TRA/Station?$top=500&$format=JSON\",\n    fetcher,\n    swrConfig\n  );\n\n  // 過濾掉 台北-環島站\n  const filteredData = data ? data.filter(v => v.StationID !== \"1001\") : [];\n\n  const closestStation = getClosestStation(location, filteredData);\n\n  const stations = filteredData\n    ? [closestStation, ...filteredData].filter(v => v !== null)\n    : [];\n\n  const depArrSwitch = () => {\n    setDeparture(arrival);\n    setArrival(departure);\n  };\n\n  const handleSearch = () =>\n    onSearch({\n      date,\n      departure,\n      arrival,\n      departureTime,\n      arrivalTime,\n      trainType\n    });\n\n  return (\n    <Box my={2}>\n      <Paper>\n        <Container>\n          <FormControl margin=\"normal\" fullWidth>\n            <TextField\n              type=\"date\"\n              id=\"trip-start\"\n              value={date}\n              onChange={e => setDate(e.currentTarget.value)}\n              variant=\"outlined\"\n              label=\"日期\"\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <Autocomplete\n              name=\"OrginStation\"\n              id=\"OrginStation\"\n              options={stations}\n              onChange={(e, v) => setDeparture(v)}\n              value={departure}\n              renderInput={params => (\n                <TextField {...params} label=\"起站\" variant=\"outlined\" />\n              )}\n              renderOption={Option}\n              getOptionLabel={({ StationName }) =>\n                StationName.Zh_tw + \" \" + StationName.En\n              }\n              getOptionSelected={(o, v) => o.StationUID === v.StationUID}\n              getOptionDisabled={o => o.disabled}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth>\n            <Button\n              style={{ width: 150, margin: \"0 auto\" }}\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={depArrSwitch}\n            >\n              起迄站交換\n            </Button>\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <Autocomplete\n              name=\"DestinationStation\"\n              id=\"DestinationStation\"\n              options={stations}\n              onChange={(e, v) => setArrival(v)}\n              value={arrival}\n              renderInput={params => (\n                <TextField {...params} label=\"迄站\" variant=\"outlined\" />\n              )}\n              renderOption={Option}\n              getOptionLabel={option =>\n                option.StationName.Zh_tw + \" \" + option.StationName.En\n              }\n              getOptionSelected={(o, v) => o.StationUID === v.StationUID}\n              getOptionDisabled={o => o.disabled}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <InputLabel id=\"DepartureTime\">最早出發</InputLabel>\n            <TimeSelect\n              label=\"最早出發\"\n              labelId=\"DepartureTime\"\n              value={departureTime}\n              onChange={e => setDepartureTime(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <InputLabel id=\"ArrivalTime\">最晚抵達</InputLabel>\n            <TimeSelect\n              label=\"最晚抵達\"\n              labelId=\"ArrivalTime\"\n              value={arrivalTime}\n              onChange={e => setArriveTime(e.target.value)}\n            />\n          </FormControl>\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\n            <TrainTypeSelect\n              name=\"trainType\"\n              id=\"trainType\"\n              onChange={(e, v) => setTrainType(v)}\n            />\n          </FormControl>\n          <FormControl fullWidth margin=\"normal\">\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n              onClick={handleSearch}\n              disabled={!departure || !arrival || trainType.length < 1}\n            >\n              查詢\n            </Button>\n          </FormControl>\n        </Container>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default SearchPanel;\n","import SearchPanel from \"./SearchPanel\";\n\nexport default SearchPanel;\n","import { useState, useCallback } from \"react\";\n\nexport default function useToggle(init = false) {\n  const [value, setValue] = useState(init);\n  const toggle = useCallback(() => setValue(!value), [value]);\n  return [value, toggle];\n}\n","import React from \"react\";\n\nconst formContext = React.createContext({\n  trainDate: \"\",\n  departure: \"\",\n  arrival: \"\",\n  departureTime: \"\",\n  arrivalTime: \"\"\n});\n\nexport default formContext;\n","import React, { useContext } from \"react\";\nimport useSWR from \"swr\";\n\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/TRA\";\nimport Context from \"components/TRA/context\";\n\nconst Station = ({ station, isFirstStaion, isLastStation }) => {\n  const { departure, arrival } = useContext(Context);\n  const isTargetStation =\n    station.StationID === departure.StationID ||\n    station.StationID === arrival.StationID;\n\n  const dotColor = isTargetStation\n    ? \"secondary\"\n    : isFirstStaion || isLastStation\n    ? \"primary\"\n    : undefined;\n\n  const stationName = `${station.StationName.Zh_tw} ${station.StationName.En}`;\n\n  return (\n    <TimelineItem>\n      <TimelineOppositeContent>\n        <Typography color=\"textSecondary\">{station.ArrivalTime}</Typography>\n      </TimelineOppositeContent>\n      <TimelineSeparator>\n        <TimelineDot color={dotColor} />\n        <TimelineConnector />\n      </TimelineSeparator>\n      <TimelineContent>\n        <Typography>{stationName}</Typography>\n      </TimelineContent>\n    </TimelineItem>\n  );\n};\n\nconst DailyTimeTable = ({ trainNo }) => {\n  // GET 取得當天指定[車次]的時刻表資料\n  const { data } = useSWR(\n    () => trainNo && `/v2/Rail/TRA/DailyTimetable/Today/TrainNo/${trainNo}`,\n    fetcher,\n    swrConfig\n  );\n\n  const stops = data ? data[0].StopTimes : [];\n\n  return (\n    <Timeline align=\"right\">\n      {stops.map((v, i) => (\n        <Station\n          key={v.StationID}\n          station={v}\n          isFirstStaion={i === 0}\n          isLastStation={i === stops.length - 1}\n        />\n      ))}\n    </Timeline>\n  );\n};\n\nexport default DailyTimeTable;\n","import DailyTimeTable from \"./DailyTimeTable\";\n\nexport default DailyTimeTable;\n","import React from \"react\";\nimport useSWR from \"swr\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { fetcher } from \"apis/TRA\";\nimport { swrConfig } from \"apis/config\";\n\nconst tripLine = {\n  0: \"不經山海線\",\n  1: \"山線\",\n  2: \"海線\"\n};\n\nconst wheelChairFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst packageServiceFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst diningFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst bikeFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst breastFeedingFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst dailyFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst serviceAddedFlag = {\n  0: \"否\",\n  1: \"是\"\n};\n\nconst TrainTodayInfo = ({ trainNo }) => {\n  // GET 取得當天指定[車次]的車次資料\n  const { data } = useSWR(\n    () => trainNo && `/v2/Rail/TRA/DailyTrainInfo/Today/TrainNo/${trainNo}`,\n    fetcher,\n    swrConfig\n  );\n\n  if (!data) return null;\n\n  const info = data[0];\n  const startStationName = `${info.StartingStationName.Zh_tw} ${info.StartingStationName.En}`;\n  const endStationName = `${info.EndingStationName.Zh_tw} ${info.EndingStationName.En}`;\n\n  return (\n    <Box my={2}>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>起站: </strong>\n        {startStationName}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>訖站: </strong>\n        {endStationName}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>山海線類型: </strong>\n        {tripLine[info.TripLine]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否設身障旅客專用座位車: </strong>\n        {wheelChairFlag[info.WheelchairFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否提供行李服務: </strong>\n        {packageServiceFlag[info.PackageServiceFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否提供訂便當服務: </strong>\n        {diningFlag[info.DiningFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否人車同行班次(置於攜車袋之自行車各級列車均可乘車): </strong>\n        {bikeFlag[info.BikeFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否設有哺(集)乳室車廂: </strong>\n        {breastFeedingFlag[info.BreastFeedingFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否每日行駛: </strong>\n        {dailyFlag[info.DailyFlag]}\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        <strong>是否為加班車: </strong>\n        {serviceAddedFlag[info.ServiceAddedFlag]}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        <strong>其他: </strong>\n        {info.Note.Zh_tw} {info.TrainTypeName.Zh_tw}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default TrainTodayInfo;\n","import TrainTodayInfo from \"./TrainTodayInfo\";\n\nexport default TrainTodayInfo;\n","import React, { Suspense } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport DailyTimeTable from \"./components/DailyTimeTable\";\nimport TrainTodayInfo from \"./components/TrainTodayInfo\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"static\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}));\n\nconst TrainInfoDialog = ({ isOpen, toggle, trainNo }) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      fullScreen\n      open={isOpen}\n      onClose={toggle}\n      TransitionComponent={Transition}\n    >\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={toggle}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            車號 - {trainNo}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <DialogContent>\n        <Suspense fallback={<div>Get train today info...</div>}>\n          <TrainTodayInfo trainNo={isOpen && trainNo} />\n        </Suspense>\n        <Suspense fallback={<div>Get train time table...</div>}>\n          <DailyTimeTable trainNo={isOpen && trainNo} />\n        </Suspense>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default TrainInfoDialog;\n","import TrainInfoDialog from \"./TrainInfoDialog\";\n\nexport default TrainInfoDialog;\n","import React from \"react\";\n\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport useToggle from \"hooks/useToggle\";\nimport TrainInfoDialog from \"./components/TrainInfoDialog\";\n\nexport const NoResults = () => (\n  <TableRow>\n    <TableCell colSpan=\"4\">尚無資料</TableCell>\n  </TableRow>\n);\n\nconst Row = ({ detail }) => {\n  const [isOpen, toggle] = useToggle();\n\n  const TrainNo = detail.DailyTrainInfo.TrainNo;\n  const DepartureTime = detail.OriginStopTime.DepartureTime;\n  const ArrivalTime = detail.DestinationStopTime.ArrivalTime;\n\n  return (\n    <TableRow>\n      <TableCell>\n        <Typography color=\"primary\">{TrainNo}</Typography>\n      </TableCell>\n      <TableCell>{DepartureTime}</TableCell>\n      <TableCell>{ArrivalTime}</TableCell>\n      <TableCell>\n        <Button color=\"primary\" onClick={toggle}>\n          查看\n        </Button>\n        <TrainInfoDialog trainNo={TrainNo} isOpen={isOpen} toggle={toggle} />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Row;\n","import Row, { NoResults } from \"./Row\";\n\nexport { NoResults };\nexport default Row;\n","import React, { useState } from \"react\";\nimport useSWR from \"swr\";\nimport { parseISO, isBefore, isAfter, compareAsc, compareDesc } from \"date-fns\";\n\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { swrConfig } from \"apis/config\";\nimport { fetcher } from \"apis/THSR\";\n\nimport SortIcon from \"components/SortIcon\";\nimport BottomFooter from \"components/BottomFooter\";\nimport Row, { NoResults } from \"./components/Row\";\n\nconst TrainDetail = ({\n  departure,\n  arrival,\n  trainDate,\n  departureTime,\n  arrivalTime,\n  trainType\n}) => {\n  const [sortBy, setSortBy] = useState();\n  const [order, setOrder] = useState();\n\n  const shouldFetch = departure.StationID && arrival.StationID && trainDate;\n\n  // GET 取得指定[日期],[起迄站間]之時刻表資料\n  const { data } = useSWR(\n    () =>\n      shouldFetch &&\n      `/v2/Rail/TRA/DailyTimetable/OD/${departure.StationID}/to/${arrival.StationID}/${trainDate}?format=JSON`,\n    fetcher,\n    swrConfig\n  );\n\n  const depFilterTime = parseISO(`${trainDate} ${departureTime}`);\n  const arrFilterTime = parseISO(`${trainDate} ${arrivalTime}`);\n\n  const onClickDepartureSort = () => {\n    setSortBy(\"departure\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const onClickArrivalSort = () => {\n    setSortBy(\"arrival\");\n    setOrder(order === \"desc\" ? \"asc\" : \"desc\");\n  };\n\n  const trainTypeFilter = trainType.map(v => v.value);\n  const shouldFilterByTrainType = !trainTypeFilter.includes(\"0\");\n\n  const trainDetails = data\n    ? data\n        .filter(d => {\n          const depTime = parseISO(\n            `${trainDate} ${d.OriginStopTime.DepartureTime}`\n          );\n          const arrTime = parseISO(\n            `${trainDate} ${d.DestinationStopTime.ArrivalTime}`\n          );\n          return (\n            isAfter(depTime, depFilterTime) && isBefore(arrTime, arrFilterTime)\n          );\n        })\n        .filter(d => {\n          if (!shouldFilterByTrainType) return true;\n          return trainTypeFilter.includes(d.DailyTrainInfo.TrainTypeCode);\n        })\n    : [];\n\n  const renderList = trainDetails.sort((a, b) => {\n    if (sortBy === \"departure\") {\n      const aDepTime = parseISO(\n        `${trainDate} ${a.OriginStopTime.DepartureTime}`\n      );\n      const bDepTime = parseISO(\n        `${trainDate} ${b.OriginStopTime.DepartureTime}`\n      );\n\n      return order === \"desc\"\n        ? compareDesc(aDepTime, bDepTime)\n        : compareAsc(aDepTime, bDepTime);\n    } else if (sortBy === \"arrival\") {\n      const aArrTime = parseISO(\n        `${trainDate} ${a.DestinationStopTime.ArrivalTime}`\n      );\n      const bArrTime = parseISO(\n        `${trainDate} ${b.DestinationStopTime.ArrivalTime}`\n      );\n\n      return order === \"desc\"\n        ? compareDesc(aArrTime, bArrTime)\n        : compareAsc(aArrTime, bArrTime);\n    } else {\n      return true;\n    }\n  });\n\n  return (\n    <>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>車號</TableCell>\n            <TableCell onClick={onClickDepartureSort}>\n              發車\n              {sortBy === \"departure\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell onClick={onClickArrivalSort}>\n              到達\n              {sortBy === \"arrival\" ? (\n                <SortIcon order={order} />\n              ) : (\n                <UnfoldMoreIcon />\n              )}\n            </TableCell>\n            <TableCell>詳細資訊</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {renderList.length > 0 ? (\n            renderList.map(detail => (\n              <Row key={detail.DailyTrainInfo.TrainNo} detail={detail} />\n            ))\n          ) : (\n            <NoResults />\n          )}\n        </TableBody>\n      </Table>\n      <BottomFooter>\n        <Typography>更新時間: {data?.[0]?.UpdateTime || \"---\"}</Typography>\n      </BottomFooter>\n    </>\n  );\n};\n\nexport default TrainDetail;\n","import TrainDetail from \"./TrainDetail\";\n\nexport default TrainDetail;\n","import React, { Suspense, useState } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\n\nimport SearchPanel from \"./components/SearchPanel\";\nimport TrainDetail from \"./components/TrainDetail\";\nimport Context from \"./context\";\n\nconst TRA = () => {\n  const [trainDate, setTrainDate] = useState(\"\");\n  const [departure, setDeparture] = useState(\"\");\n  const [arrival, setArrival] = useState(\"\");\n  const [departureTime, setDepartureTime] = useState(\"\");\n  const [arrivalTime, setArrivalTime] = useState(\"\");\n  const [trainType, setTrainType] = useState([]);\n\n  const onSearch = ({\n    date,\n    departure,\n    arrival,\n    departureTime,\n    arrivalTime,\n    trainType\n  }) => {\n    setTrainDate(date);\n    setDeparture(departure);\n    setArrival(arrival);\n    setDepartureTime(departureTime);\n    setArrivalTime(arrivalTime);\n    setTrainType(trainType);\n  };\n\n  return (\n    <Box paddingBottom={8}>\n      <Typography align=\"center\" variant=\"h3\">\n        台鐵時刻查詢\n      </Typography>\n      <Suspense fallback={<div>Get stations...</div>}>\n        <SearchPanel onSearch={onSearch} />\n      </Suspense>\n      <Context.Provider value={{ trainDate, departure, arrival }}>\n        <Suspense fallback={<div>Get train details...</div>}>\n          <TrainDetail\n            departure={departure}\n            arrival={arrival}\n            trainDate={trainDate}\n            departureTime={departureTime}\n            arrivalTime={arrivalTime}\n            trainType={trainType}\n          />\n        </Suspense>\n      </Context.Provider>\n    </Box>\n  );\n};\n\nexport default TRA;\n","import TRA from \"./TRA\";\n\nexport default TRA;\n","import React, { useState, useMemo } from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport {\n  createMuiTheme,\n  makeStyles,\n  ThemeProvider\n} from \"@material-ui/core/styles\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport GoTop from \"./components/GoTop\";\nimport THSR from \"./components/THSR\";\nimport TRA from \"./components/TRA\";\n\nimport useToggle from \"./hooks/useToggle\";\n\nfunction TabPanel({ children, value, index, ...other }) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box pt={2}>{children}</Box>}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles({\n  list: {\n    width: 150\n  }\n});\n\nconst Lists = ({ toggleDrawer, onItemClick }) => {\n  const classes = useStyles();\n  return (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={() => toggleDrawer()}\n      onKeyDown={() => toggleDrawer()}\n    >\n      <List>\n        <ListItem button onClick={() => onItemClick(0)}>\n          <ListItemText primary=\"THSR\" />\n        </ListItem>\n        <ListItem button onClick={() => onItemClick(1)}>\n          <ListItemText primary=\"TRA\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nfunction App() {\n  const [tab, setTab] = useState(0);\n  const [darkModeEnabled, toggleDarkMode] = useToggle();\n  const [openDrawer, toggleDrawer] = useToggle();\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: darkModeEnabled ? \"dark\" : \"light\"\n        },\n        overrides: {\n          MuiSvgIcon: {\n            root: {\n              verticalAlign: \"middle\"\n            }\n          }\n        }\n      }),\n    [darkModeEnabled]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position=\"static\" id=\"back-to-top-anchor\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer}\n          >\n            <MenuIcon />\n          </IconButton>\n          <div style={{ flexGrow: 1 }} />\n          <IconButton\n            aria-label=\"switchDarkMode\"\n            onClick={toggleDarkMode}\n            color=\"inherit\"\n          >\n            {darkModeEnabled ? <Brightness7Icon /> : <Brightness4Icon />}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <SwipeableDrawer\n        anchor=\"left\"\n        open={openDrawer}\n        onClose={toggleDrawer}\n        onOpen={toggleDrawer}\n      >\n        <Lists toggleDrawer={toggleDrawer} onItemClick={item => setTab(item)} />\n      </SwipeableDrawer>\n      <TabPanel value={tab} index={0}>\n        <THSR />\n      </TabPanel>\n      <TabPanel value={tab} index={1}>\n        <TRA />\n      </TabPanel>\n      <GoTop />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}